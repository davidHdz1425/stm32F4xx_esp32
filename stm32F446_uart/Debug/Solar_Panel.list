
Solar_Panel.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006794  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000440  08006968  08006968  00007968  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006da8  08006da8  000081e8  2**0
                  CONTENTS
  4 .ARM          00000008  08006da8  08006da8  00007da8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006db0  08006db0  000081e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006db0  08006db0  00007db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006db4  08006db4  00007db4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e8  20000000  08006db8  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d8  200001e8  08006fa0  000081e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003c0  08006fa0  000083c0  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000081e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002820  00000000  00000000  00008212  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a15  00000000  00000000  0000aa32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002a0  00000000  00000000  0000b448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001e1  00000000  00000000  0000b6e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003cb7  00000000  00000000  0000b8c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003c7a  00000000  00000000  0000f580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000d344  00000000  00000000  000131fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0002053e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001ed0  00000000  00000000  00020584  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000075  00000000  00000000  00022454  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800694c 	.word	0x0800694c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	0800694c 	.word	0x0800694c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_frsub>:
 8000cc8:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000ccc:	e002      	b.n	8000cd4 <__addsf3>
 8000cce:	bf00      	nop

08000cd0 <__aeabi_fsub>:
 8000cd0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000cd4 <__addsf3>:
 8000cd4:	0042      	lsls	r2, r0, #1
 8000cd6:	bf1f      	itttt	ne
 8000cd8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000cdc:	ea92 0f03 	teqne	r2, r3
 8000ce0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ce4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ce8:	d06a      	beq.n	8000dc0 <__addsf3+0xec>
 8000cea:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cee:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000cf2:	bfc1      	itttt	gt
 8000cf4:	18d2      	addgt	r2, r2, r3
 8000cf6:	4041      	eorgt	r1, r0
 8000cf8:	4048      	eorgt	r0, r1
 8000cfa:	4041      	eorgt	r1, r0
 8000cfc:	bfb8      	it	lt
 8000cfe:	425b      	neglt	r3, r3
 8000d00:	2b19      	cmp	r3, #25
 8000d02:	bf88      	it	hi
 8000d04:	4770      	bxhi	lr
 8000d06:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000d0a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d0e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000d12:	bf18      	it	ne
 8000d14:	4240      	negne	r0, r0
 8000d16:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d1a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000d1e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000d22:	bf18      	it	ne
 8000d24:	4249      	negne	r1, r1
 8000d26:	ea92 0f03 	teq	r2, r3
 8000d2a:	d03f      	beq.n	8000dac <__addsf3+0xd8>
 8000d2c:	f1a2 0201 	sub.w	r2, r2, #1
 8000d30:	fa41 fc03 	asr.w	ip, r1, r3
 8000d34:	eb10 000c 	adds.w	r0, r0, ip
 8000d38:	f1c3 0320 	rsb	r3, r3, #32
 8000d3c:	fa01 f103 	lsl.w	r1, r1, r3
 8000d40:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d44:	d502      	bpl.n	8000d4c <__addsf3+0x78>
 8000d46:	4249      	negs	r1, r1
 8000d48:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d4c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000d50:	d313      	bcc.n	8000d7a <__addsf3+0xa6>
 8000d52:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000d56:	d306      	bcc.n	8000d66 <__addsf3+0x92>
 8000d58:	0840      	lsrs	r0, r0, #1
 8000d5a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d5e:	f102 0201 	add.w	r2, r2, #1
 8000d62:	2afe      	cmp	r2, #254	@ 0xfe
 8000d64:	d251      	bcs.n	8000e0a <__addsf3+0x136>
 8000d66:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000d6a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d6e:	bf08      	it	eq
 8000d70:	f020 0001 	biceq.w	r0, r0, #1
 8000d74:	ea40 0003 	orr.w	r0, r0, r3
 8000d78:	4770      	bx	lr
 8000d7a:	0049      	lsls	r1, r1, #1
 8000d7c:	eb40 0000 	adc.w	r0, r0, r0
 8000d80:	3a01      	subs	r2, #1
 8000d82:	bf28      	it	cs
 8000d84:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000d88:	d2ed      	bcs.n	8000d66 <__addsf3+0x92>
 8000d8a:	fab0 fc80 	clz	ip, r0
 8000d8e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000d92:	ebb2 020c 	subs.w	r2, r2, ip
 8000d96:	fa00 f00c 	lsl.w	r0, r0, ip
 8000d9a:	bfaa      	itet	ge
 8000d9c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000da0:	4252      	neglt	r2, r2
 8000da2:	4318      	orrge	r0, r3
 8000da4:	bfbc      	itt	lt
 8000da6:	40d0      	lsrlt	r0, r2
 8000da8:	4318      	orrlt	r0, r3
 8000daa:	4770      	bx	lr
 8000dac:	f092 0f00 	teq	r2, #0
 8000db0:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000db4:	bf06      	itte	eq
 8000db6:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000dba:	3201      	addeq	r2, #1
 8000dbc:	3b01      	subne	r3, #1
 8000dbe:	e7b5      	b.n	8000d2c <__addsf3+0x58>
 8000dc0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000dc4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000dc8:	bf18      	it	ne
 8000dca:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000dce:	d021      	beq.n	8000e14 <__addsf3+0x140>
 8000dd0:	ea92 0f03 	teq	r2, r3
 8000dd4:	d004      	beq.n	8000de0 <__addsf3+0x10c>
 8000dd6:	f092 0f00 	teq	r2, #0
 8000dda:	bf08      	it	eq
 8000ddc:	4608      	moveq	r0, r1
 8000dde:	4770      	bx	lr
 8000de0:	ea90 0f01 	teq	r0, r1
 8000de4:	bf1c      	itt	ne
 8000de6:	2000      	movne	r0, #0
 8000de8:	4770      	bxne	lr
 8000dea:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000dee:	d104      	bne.n	8000dfa <__addsf3+0x126>
 8000df0:	0040      	lsls	r0, r0, #1
 8000df2:	bf28      	it	cs
 8000df4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000df8:	4770      	bx	lr
 8000dfa:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000dfe:	bf3c      	itt	cc
 8000e00:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000e04:	4770      	bxcc	lr
 8000e06:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000e0a:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000e0e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e12:	4770      	bx	lr
 8000e14:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e18:	bf16      	itet	ne
 8000e1a:	4608      	movne	r0, r1
 8000e1c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e20:	4601      	movne	r1, r0
 8000e22:	0242      	lsls	r2, r0, #9
 8000e24:	bf06      	itte	eq
 8000e26:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e2a:	ea90 0f01 	teqeq	r0, r1
 8000e2e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e32:	4770      	bx	lr

08000e34 <__aeabi_ui2f>:
 8000e34:	f04f 0300 	mov.w	r3, #0
 8000e38:	e004      	b.n	8000e44 <__aeabi_i2f+0x8>
 8000e3a:	bf00      	nop

08000e3c <__aeabi_i2f>:
 8000e3c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e40:	bf48      	it	mi
 8000e42:	4240      	negmi	r0, r0
 8000e44:	ea5f 0c00 	movs.w	ip, r0
 8000e48:	bf08      	it	eq
 8000e4a:	4770      	bxeq	lr
 8000e4c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000e50:	4601      	mov	r1, r0
 8000e52:	f04f 0000 	mov.w	r0, #0
 8000e56:	e01c      	b.n	8000e92 <__aeabi_l2f+0x2a>

08000e58 <__aeabi_ul2f>:
 8000e58:	ea50 0201 	orrs.w	r2, r0, r1
 8000e5c:	bf08      	it	eq
 8000e5e:	4770      	bxeq	lr
 8000e60:	f04f 0300 	mov.w	r3, #0
 8000e64:	e00a      	b.n	8000e7c <__aeabi_l2f+0x14>
 8000e66:	bf00      	nop

08000e68 <__aeabi_l2f>:
 8000e68:	ea50 0201 	orrs.w	r2, r0, r1
 8000e6c:	bf08      	it	eq
 8000e6e:	4770      	bxeq	lr
 8000e70:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000e74:	d502      	bpl.n	8000e7c <__aeabi_l2f+0x14>
 8000e76:	4240      	negs	r0, r0
 8000e78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e7c:	ea5f 0c01 	movs.w	ip, r1
 8000e80:	bf02      	ittt	eq
 8000e82:	4684      	moveq	ip, r0
 8000e84:	4601      	moveq	r1, r0
 8000e86:	2000      	moveq	r0, #0
 8000e88:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000e8c:	bf08      	it	eq
 8000e8e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000e92:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000e96:	fabc f28c 	clz	r2, ip
 8000e9a:	3a08      	subs	r2, #8
 8000e9c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ea0:	db10      	blt.n	8000ec4 <__aeabi_l2f+0x5c>
 8000ea2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ea6:	4463      	add	r3, ip
 8000ea8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000eac:	f1c2 0220 	rsb	r2, r2, #32
 8000eb0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000eb4:	fa20 f202 	lsr.w	r2, r0, r2
 8000eb8:	eb43 0002 	adc.w	r0, r3, r2
 8000ebc:	bf08      	it	eq
 8000ebe:	f020 0001 	biceq.w	r0, r0, #1
 8000ec2:	4770      	bx	lr
 8000ec4:	f102 0220 	add.w	r2, r2, #32
 8000ec8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ecc:	f1c2 0220 	rsb	r2, r2, #32
 8000ed0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ed4:	fa21 f202 	lsr.w	r2, r1, r2
 8000ed8:	eb43 0002 	adc.w	r0, r3, r2
 8000edc:	bf08      	it	eq
 8000ede:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ee2:	4770      	bx	lr

08000ee4 <__aeabi_fmul>:
 8000ee4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000ee8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000eec:	bf1e      	ittt	ne
 8000eee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000ef2:	ea92 0f0c 	teqne	r2, ip
 8000ef6:	ea93 0f0c 	teqne	r3, ip
 8000efa:	d06f      	beq.n	8000fdc <__aeabi_fmul+0xf8>
 8000efc:	441a      	add	r2, r3
 8000efe:	ea80 0c01 	eor.w	ip, r0, r1
 8000f02:	0240      	lsls	r0, r0, #9
 8000f04:	bf18      	it	ne
 8000f06:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000f0a:	d01e      	beq.n	8000f4a <__aeabi_fmul+0x66>
 8000f0c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000f10:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000f14:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000f18:	fba0 3101 	umull	r3, r1, r0, r1
 8000f1c:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f20:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000f24:	bf3e      	ittt	cc
 8000f26:	0049      	lslcc	r1, r1, #1
 8000f28:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000f2c:	005b      	lslcc	r3, r3, #1
 8000f2e:	ea40 0001 	orr.w	r0, r0, r1
 8000f32:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000f36:	2afd      	cmp	r2, #253	@ 0xfd
 8000f38:	d81d      	bhi.n	8000f76 <__aeabi_fmul+0x92>
 8000f3a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000f3e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f42:	bf08      	it	eq
 8000f44:	f020 0001 	biceq.w	r0, r0, #1
 8000f48:	4770      	bx	lr
 8000f4a:	f090 0f00 	teq	r0, #0
 8000f4e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000f52:	bf08      	it	eq
 8000f54:	0249      	lsleq	r1, r1, #9
 8000f56:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f5a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000f5e:	3a7f      	subs	r2, #127	@ 0x7f
 8000f60:	bfc2      	ittt	gt
 8000f62:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f66:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f6a:	4770      	bxgt	lr
 8000f6c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f70:	f04f 0300 	mov.w	r3, #0
 8000f74:	3a01      	subs	r2, #1
 8000f76:	dc5d      	bgt.n	8001034 <__aeabi_fmul+0x150>
 8000f78:	f112 0f19 	cmn.w	r2, #25
 8000f7c:	bfdc      	itt	le
 8000f7e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000f82:	4770      	bxle	lr
 8000f84:	f1c2 0200 	rsb	r2, r2, #0
 8000f88:	0041      	lsls	r1, r0, #1
 8000f8a:	fa21 f102 	lsr.w	r1, r1, r2
 8000f8e:	f1c2 0220 	rsb	r2, r2, #32
 8000f92:	fa00 fc02 	lsl.w	ip, r0, r2
 8000f96:	ea5f 0031 	movs.w	r0, r1, rrx
 8000f9a:	f140 0000 	adc.w	r0, r0, #0
 8000f9e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000fa2:	bf08      	it	eq
 8000fa4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000fa8:	4770      	bx	lr
 8000faa:	f092 0f00 	teq	r2, #0
 8000fae:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fb2:	bf02      	ittt	eq
 8000fb4:	0040      	lsleq	r0, r0, #1
 8000fb6:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fba:	3a01      	subeq	r2, #1
 8000fbc:	d0f9      	beq.n	8000fb2 <__aeabi_fmul+0xce>
 8000fbe:	ea40 000c 	orr.w	r0, r0, ip
 8000fc2:	f093 0f00 	teq	r3, #0
 8000fc6:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000fca:	bf02      	ittt	eq
 8000fcc:	0049      	lsleq	r1, r1, #1
 8000fce:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000fd2:	3b01      	subeq	r3, #1
 8000fd4:	d0f9      	beq.n	8000fca <__aeabi_fmul+0xe6>
 8000fd6:	ea41 010c 	orr.w	r1, r1, ip
 8000fda:	e78f      	b.n	8000efc <__aeabi_fmul+0x18>
 8000fdc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fe0:	ea92 0f0c 	teq	r2, ip
 8000fe4:	bf18      	it	ne
 8000fe6:	ea93 0f0c 	teqne	r3, ip
 8000fea:	d00a      	beq.n	8001002 <__aeabi_fmul+0x11e>
 8000fec:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ff0:	bf18      	it	ne
 8000ff2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000ff6:	d1d8      	bne.n	8000faa <__aeabi_fmul+0xc6>
 8000ff8:	ea80 0001 	eor.w	r0, r0, r1
 8000ffc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8001000:	4770      	bx	lr
 8001002:	f090 0f00 	teq	r0, #0
 8001006:	bf17      	itett	ne
 8001008:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 800100c:	4608      	moveq	r0, r1
 800100e:	f091 0f00 	teqne	r1, #0
 8001012:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8001016:	d014      	beq.n	8001042 <__aeabi_fmul+0x15e>
 8001018:	ea92 0f0c 	teq	r2, ip
 800101c:	d101      	bne.n	8001022 <__aeabi_fmul+0x13e>
 800101e:	0242      	lsls	r2, r0, #9
 8001020:	d10f      	bne.n	8001042 <__aeabi_fmul+0x15e>
 8001022:	ea93 0f0c 	teq	r3, ip
 8001026:	d103      	bne.n	8001030 <__aeabi_fmul+0x14c>
 8001028:	024b      	lsls	r3, r1, #9
 800102a:	bf18      	it	ne
 800102c:	4608      	movne	r0, r1
 800102e:	d108      	bne.n	8001042 <__aeabi_fmul+0x15e>
 8001030:	ea80 0001 	eor.w	r0, r0, r1
 8001034:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8001038:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 800103c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8001040:	4770      	bx	lr
 8001042:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8001046:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 800104a:	4770      	bx	lr

0800104c <__aeabi_fdiv>:
 800104c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8001050:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8001054:	bf1e      	ittt	ne
 8001056:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800105a:	ea92 0f0c 	teqne	r2, ip
 800105e:	ea93 0f0c 	teqne	r3, ip
 8001062:	d069      	beq.n	8001138 <__aeabi_fdiv+0xec>
 8001064:	eba2 0203 	sub.w	r2, r2, r3
 8001068:	ea80 0c01 	eor.w	ip, r0, r1
 800106c:	0249      	lsls	r1, r1, #9
 800106e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8001072:	d037      	beq.n	80010e4 <__aeabi_fdiv+0x98>
 8001074:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8001078:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 800107c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8001080:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8001084:	428b      	cmp	r3, r1
 8001086:	bf38      	it	cc
 8001088:	005b      	lslcc	r3, r3, #1
 800108a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 800108e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8001092:	428b      	cmp	r3, r1
 8001094:	bf24      	itt	cs
 8001096:	1a5b      	subcs	r3, r3, r1
 8001098:	ea40 000c 	orrcs.w	r0, r0, ip
 800109c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 80010a0:	bf24      	itt	cs
 80010a2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 80010a6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80010aa:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80010ae:	bf24      	itt	cs
 80010b0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80010b4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80010b8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80010bc:	bf24      	itt	cs
 80010be:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80010c2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80010c6:	011b      	lsls	r3, r3, #4
 80010c8:	bf18      	it	ne
 80010ca:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80010ce:	d1e0      	bne.n	8001092 <__aeabi_fdiv+0x46>
 80010d0:	2afd      	cmp	r2, #253	@ 0xfd
 80010d2:	f63f af50 	bhi.w	8000f76 <__aeabi_fmul+0x92>
 80010d6:	428b      	cmp	r3, r1
 80010d8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80010dc:	bf08      	it	eq
 80010de:	f020 0001 	biceq.w	r0, r0, #1
 80010e2:	4770      	bx	lr
 80010e4:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80010e8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80010ec:	327f      	adds	r2, #127	@ 0x7f
 80010ee:	bfc2      	ittt	gt
 80010f0:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80010f4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80010f8:	4770      	bxgt	lr
 80010fa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80010fe:	f04f 0300 	mov.w	r3, #0
 8001102:	3a01      	subs	r2, #1
 8001104:	e737      	b.n	8000f76 <__aeabi_fmul+0x92>
 8001106:	f092 0f00 	teq	r2, #0
 800110a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800110e:	bf02      	ittt	eq
 8001110:	0040      	lsleq	r0, r0, #1
 8001112:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8001116:	3a01      	subeq	r2, #1
 8001118:	d0f9      	beq.n	800110e <__aeabi_fdiv+0xc2>
 800111a:	ea40 000c 	orr.w	r0, r0, ip
 800111e:	f093 0f00 	teq	r3, #0
 8001122:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8001126:	bf02      	ittt	eq
 8001128:	0049      	lsleq	r1, r1, #1
 800112a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800112e:	3b01      	subeq	r3, #1
 8001130:	d0f9      	beq.n	8001126 <__aeabi_fdiv+0xda>
 8001132:	ea41 010c 	orr.w	r1, r1, ip
 8001136:	e795      	b.n	8001064 <__aeabi_fdiv+0x18>
 8001138:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800113c:	ea92 0f0c 	teq	r2, ip
 8001140:	d108      	bne.n	8001154 <__aeabi_fdiv+0x108>
 8001142:	0242      	lsls	r2, r0, #9
 8001144:	f47f af7d 	bne.w	8001042 <__aeabi_fmul+0x15e>
 8001148:	ea93 0f0c 	teq	r3, ip
 800114c:	f47f af70 	bne.w	8001030 <__aeabi_fmul+0x14c>
 8001150:	4608      	mov	r0, r1
 8001152:	e776      	b.n	8001042 <__aeabi_fmul+0x15e>
 8001154:	ea93 0f0c 	teq	r3, ip
 8001158:	d104      	bne.n	8001164 <__aeabi_fdiv+0x118>
 800115a:	024b      	lsls	r3, r1, #9
 800115c:	f43f af4c 	beq.w	8000ff8 <__aeabi_fmul+0x114>
 8001160:	4608      	mov	r0, r1
 8001162:	e76e      	b.n	8001042 <__aeabi_fmul+0x15e>
 8001164:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001168:	bf18      	it	ne
 800116a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800116e:	d1ca      	bne.n	8001106 <__aeabi_fdiv+0xba>
 8001170:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001174:	f47f af5c 	bne.w	8001030 <__aeabi_fmul+0x14c>
 8001178:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800117c:	f47f af3c 	bne.w	8000ff8 <__aeabi_fmul+0x114>
 8001180:	e75f      	b.n	8001042 <__aeabi_fmul+0x15e>
 8001182:	bf00      	nop

08001184 <__aeabi_d2lz>:
 8001184:	b538      	push	{r3, r4, r5, lr}
 8001186:	2200      	movs	r2, #0
 8001188:	2300      	movs	r3, #0
 800118a:	4604      	mov	r4, r0
 800118c:	460d      	mov	r5, r1
 800118e:	f7ff fcc5 	bl	8000b1c <__aeabi_dcmplt>
 8001192:	b928      	cbnz	r0, 80011a0 <__aeabi_d2lz+0x1c>
 8001194:	4620      	mov	r0, r4
 8001196:	4629      	mov	r1, r5
 8001198:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800119c:	f000 b80a 	b.w	80011b4 <__aeabi_d2ulz>
 80011a0:	4620      	mov	r0, r4
 80011a2:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 80011a6:	f000 f805 	bl	80011b4 <__aeabi_d2ulz>
 80011aa:	4240      	negs	r0, r0
 80011ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011b0:	bd38      	pop	{r3, r4, r5, pc}
 80011b2:	bf00      	nop

080011b4 <__aeabi_d2ulz>:
 80011b4:	b5d0      	push	{r4, r6, r7, lr}
 80011b6:	4b0c      	ldr	r3, [pc, #48]	@ (80011e8 <__aeabi_d2ulz+0x34>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	4606      	mov	r6, r0
 80011bc:	460f      	mov	r7, r1
 80011be:	f7ff fa3b 	bl	8000638 <__aeabi_dmul>
 80011c2:	f7ff fd11 	bl	8000be8 <__aeabi_d2uiz>
 80011c6:	4604      	mov	r4, r0
 80011c8:	f7ff f9bc 	bl	8000544 <__aeabi_ui2d>
 80011cc:	4b07      	ldr	r3, [pc, #28]	@ (80011ec <__aeabi_d2ulz+0x38>)
 80011ce:	2200      	movs	r2, #0
 80011d0:	f7ff fa32 	bl	8000638 <__aeabi_dmul>
 80011d4:	4602      	mov	r2, r0
 80011d6:	460b      	mov	r3, r1
 80011d8:	4630      	mov	r0, r6
 80011da:	4639      	mov	r1, r7
 80011dc:	f7ff f874 	bl	80002c8 <__aeabi_dsub>
 80011e0:	f7ff fd02 	bl	8000be8 <__aeabi_d2uiz>
 80011e4:	4621      	mov	r1, r4
 80011e6:	bdd0      	pop	{r4, r6, r7, pc}
 80011e8:	3df00000 	.word	0x3df00000
 80011ec:	41f00000 	.word	0x41f00000

080011f0 <delay>:
#define ADCMAX		4095
#define V25			.76
#define AVG_SLOPE	.0025
#define RESISTOR 	10

void delay(){
 80011f0:	b480      	push	{r7}
 80011f2:	b083      	sub	sp, #12
 80011f4:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<5000000/2; i++);
 80011f6:	2300      	movs	r3, #0
 80011f8:	607b      	str	r3, [r7, #4]
 80011fa:	e002      	b.n	8001202 <delay+0x12>
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	3301      	adds	r3, #1
 8001200:	607b      	str	r3, [r7, #4]
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	4a04      	ldr	r2, [pc, #16]	@ (8001218 <delay+0x28>)
 8001206:	4293      	cmp	r3, r2
 8001208:	d3f8      	bcc.n	80011fc <delay+0xc>
}
 800120a:	bf00      	nop
 800120c:	bf00      	nop
 800120e:	370c      	adds	r7, #12
 8001210:	46bd      	mov	sp, r7
 8001212:	bc80      	pop	{r7}
 8001214:	4770      	bx	lr
 8001216:	bf00      	nop
 8001218:	002625a0 	.word	0x002625a0

0800121c <USART2_Init>:

void USART2_Init(void){
 800121c:	b580      	push	{r7, lr}
 800121e:	af00      	add	r7, sp, #0
	usart2_handle.pUSARTx = USART2;
 8001220:	4b0d      	ldr	r3, [pc, #52]	@ (8001258 <USART2_Init+0x3c>)
 8001222:	4a0e      	ldr	r2, [pc, #56]	@ (800125c <USART2_Init+0x40>)
 8001224:	601a      	str	r2, [r3, #0]
	usart2_handle.USART_Config.USART_Baud = USART_STD_BAUD_115200;
 8001226:	4b0c      	ldr	r3, [pc, #48]	@ (8001258 <USART2_Init+0x3c>)
 8001228:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800122c:	609a      	str	r2, [r3, #8]
	usart2_handle.USART_Config.USART_HWFlowControl = USART_HW_FLOW_CTRL_NONE;
 800122e:	4b0a      	ldr	r3, [pc, #40]	@ (8001258 <USART2_Init+0x3c>)
 8001230:	2200      	movs	r2, #0
 8001232:	73da      	strb	r2, [r3, #15]
	usart2_handle.USART_Config.USART_Mode = USART_MODE_ONLY_TX;
 8001234:	4b08      	ldr	r3, [pc, #32]	@ (8001258 <USART2_Init+0x3c>)
 8001236:	2200      	movs	r2, #0
 8001238:	711a      	strb	r2, [r3, #4]
	usart2_handle.USART_Config.USART_NoOfStopBits = USART_STOPBITS_1;
 800123a:	4b07      	ldr	r3, [pc, #28]	@ (8001258 <USART2_Init+0x3c>)
 800123c:	2200      	movs	r2, #0
 800123e:	731a      	strb	r2, [r3, #12]
	usart2_handle.USART_Config.USART_WordLength = USART_WORDLEN_8BITS;
 8001240:	4b05      	ldr	r3, [pc, #20]	@ (8001258 <USART2_Init+0x3c>)
 8001242:	2200      	movs	r2, #0
 8001244:	735a      	strb	r2, [r3, #13]
	usart2_handle.USART_Config.USART_ParityControl = USART_PARITY_DISABLE;
 8001246:	4b04      	ldr	r3, [pc, #16]	@ (8001258 <USART2_Init+0x3c>)
 8001248:	2200      	movs	r2, #0
 800124a:	739a      	strb	r2, [r3, #14]
	USART_Init(&usart2_handle);
 800124c:	4802      	ldr	r0, [pc, #8]	@ (8001258 <USART2_Init+0x3c>)
 800124e:	f000 fec9 	bl	8001fe4 <USART_Init>

}
 8001252:	bf00      	nop
 8001254:	bd80      	pop	{r7, pc}
 8001256:	bf00      	nop
 8001258:	20000228 	.word	0x20000228
 800125c:	40004400 	.word	0x40004400

08001260 <USART2_GPIOInit>:

void USART2_GPIOInit(void){
 8001260:	b580      	push	{r7, lr}
 8001262:	b084      	sub	sp, #16
 8001264:	af00      	add	r7, sp, #0
	GPIO_Handle_t usart_gpios;

	usart_gpios.pGPIOx = GPIOA;
 8001266:	4b0e      	ldr	r3, [pc, #56]	@ (80012a0 <USART2_GPIOInit+0x40>)
 8001268:	607b      	str	r3, [r7, #4]
	usart_gpios.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 800126a:	2302      	movs	r3, #2
 800126c:	727b      	strb	r3, [r7, #9]
	usart_gpios.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800126e:	2300      	movs	r3, #0
 8001270:	733b      	strb	r3, [r7, #12]
	usart_gpios.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8001272:	2301      	movs	r3, #1
 8001274:	72fb      	strb	r3, [r7, #11]
	usart_gpios.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8001276:	2302      	movs	r3, #2
 8001278:	72bb      	strb	r3, [r7, #10]
	usart_gpios.GPIO_PinConfig.GPIO_PinAltFunMode = 7;
 800127a:	2307      	movs	r3, #7
 800127c:	737b      	strb	r3, [r7, #13]

	// USART TX
	usart_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_2;
 800127e:	2302      	movs	r3, #2
 8001280:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&usart_gpios);
 8001282:	1d3b      	adds	r3, r7, #4
 8001284:	4618      	mov	r0, r3
 8001286:	f000 fbeb 	bl	8001a60 <GPIO_Init>

	// USART RX
	usart_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
 800128a:	2303      	movs	r3, #3
 800128c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&usart_gpios);
 800128e:	1d3b      	adds	r3, r7, #4
 8001290:	4618      	mov	r0, r3
 8001292:	f000 fbe5 	bl	8001a60 <GPIO_Init>

}
 8001296:	bf00      	nop
 8001298:	3710      	adds	r7, #16
 800129a:	46bd      	mov	sp, r7
 800129c:	bd80      	pop	{r7, pc}
 800129e:	bf00      	nop
 80012a0:	40020000 	.word	0x40020000

080012a4 <ADC_GPIOInit>:

void ADC_GPIOInit(void){
 80012a4:	b580      	push	{r7, lr}
 80012a6:	b084      	sub	sp, #16
 80012a8:	af00      	add	r7, sp, #0
	GPIO_Handle_t adc_gpios;
	adc_gpios.pGPIOx = GPIOA;
 80012aa:	4b0a      	ldr	r3, [pc, #40]	@ (80012d4 <ADC_GPIOInit+0x30>)
 80012ac:	607b      	str	r3, [r7, #4]
	adc_gpios.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ANALOG;
 80012ae:	2303      	movs	r3, #3
 80012b0:	727b      	strb	r3, [r7, #9]


	// Sensor 1
	adc_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_1;
 80012b2:	2301      	movs	r3, #1
 80012b4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&adc_gpios);
 80012b6:	1d3b      	adds	r3, r7, #4
 80012b8:	4618      	mov	r0, r3
 80012ba:	f000 fbd1 	bl	8001a60 <GPIO_Init>

	// Sensor 0
	adc_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 80012be:	2300      	movs	r3, #0
 80012c0:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&adc_gpios);
 80012c2:	1d3b      	adds	r3, r7, #4
 80012c4:	4618      	mov	r0, r3
 80012c6:	f000 fbcb 	bl	8001a60 <GPIO_Init>
}
 80012ca:	bf00      	nop
 80012cc:	3710      	adds	r7, #16
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bd80      	pop	{r7, pc}
 80012d2:	bf00      	nop
 80012d4:	40020000 	.word	0x40020000

080012d8 <ADCs_Init>:

void ADCs_Init(){
 80012d8:	b580      	push	{r7, lr}
 80012da:	af00      	add	r7, sp, #0
	// SENSOR DE TEMPERATURA
	adc1_handle.pADCx = ADC1;
 80012dc:	4b0b      	ldr	r3, [pc, #44]	@ (800130c <ADCs_Init+0x34>)
 80012de:	4a0c      	ldr	r2, [pc, #48]	@ (8001310 <ADCs_Init+0x38>)
 80012e0:	601a      	str	r2, [r3, #0]
	adc1_handle.pC_ADC = ADC_C;
 80012e2:	4b0a      	ldr	r3, [pc, #40]	@ (800130c <ADCs_Init+0x34>)
 80012e4:	4a0b      	ldr	r2, [pc, #44]	@ (8001314 <ADCs_Init+0x3c>)
 80012e6:	605a      	str	r2, [r3, #4]
	ADC_Init(&adc1_handle);
 80012e8:	4808      	ldr	r0, [pc, #32]	@ (800130c <ADCs_Init+0x34>)
 80012ea:	f000 fa49 	bl	8001780 <ADC_Init>


	//
	adc2_handle.pADCx = ADC2;
 80012ee:	4b0a      	ldr	r3, [pc, #40]	@ (8001318 <ADCs_Init+0x40>)
 80012f0:	4a0a      	ldr	r2, [pc, #40]	@ (800131c <ADCs_Init+0x44>)
 80012f2:	601a      	str	r2, [r3, #0]
	ADC_Init(&adc2_handle);
 80012f4:	4808      	ldr	r0, [pc, #32]	@ (8001318 <ADCs_Init+0x40>)
 80012f6:	f000 fa43 	bl	8001780 <ADC_Init>

	adc3_handle.pADCx = ADC3;
 80012fa:	4b09      	ldr	r3, [pc, #36]	@ (8001320 <ADCs_Init+0x48>)
 80012fc:	4a09      	ldr	r2, [pc, #36]	@ (8001324 <ADCs_Init+0x4c>)
 80012fe:	601a      	str	r2, [r3, #0]
	ADC_Init(&adc3_handle);
 8001300:	4807      	ldr	r0, [pc, #28]	@ (8001320 <ADCs_Init+0x48>)
 8001302:	f000 fa3d 	bl	8001780 <ADC_Init>

}
 8001306:	bf00      	nop
 8001308:	bd80      	pop	{r7, pc}
 800130a:	bf00      	nop
 800130c:	2000024c 	.word	0x2000024c
 8001310:	40012000 	.word	0x40012000
 8001314:	40012300 	.word	0x40012300
 8001318:	20000258 	.word	0x20000258
 800131c:	40012100 	.word	0x40012100
 8001320:	20000264 	.word	0x20000264
 8001324:	40012200 	.word	0x40012200

08001328 <main>:


int main (void){
 8001328:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800132c:	b08c      	sub	sp, #48	@ 0x30
 800132e:	af04      	add	r7, sp, #16
	float temperature=0, voltaje_temp_sens=0, voltaje_pila_AA=0, battery_current = 0, baterry_voltage = 0;
 8001330:	f04f 0300 	mov.w	r3, #0
 8001334:	61fb      	str	r3, [r7, #28]
 8001336:	f04f 0300 	mov.w	r3, #0
 800133a:	61bb      	str	r3, [r7, #24]
 800133c:	f04f 0300 	mov.w	r3, #0
 8001340:	617b      	str	r3, [r7, #20]
 8001342:	f04f 0300 	mov.w	r3, #0
 8001346:	613b      	str	r3, [r7, #16]
 8001348:	f04f 0300 	mov.w	r3, #0
 800134c:	60fb      	str	r3, [r7, #12]
	uint32_t adc_value_s1=0, adc_value_s2=0;
 800134e:	2300      	movs	r3, #0
 8001350:	60bb      	str	r3, [r7, #8]
 8001352:	2300      	movs	r3, #0
 8001354:	607b      	str	r3, [r7, #4]

	// UART2 2 Init
	USART2_GPIOInit();
 8001356:	f7ff ff83 	bl	8001260 <USART2_GPIOInit>
	USART2_Init();
 800135a:	f7ff ff5f 	bl	800121c <USART2_Init>
	USART_PeripheralControl(USART2, ENABLE);
 800135e:	2101      	movs	r1, #1
 8001360:	485b      	ldr	r0, [pc, #364]	@ (80014d0 <main+0x1a8>)
 8001362:	f000 fec0 	bl	80020e6 <USART_PeripheralControl>

	// ADCs Init
	ADC_GPIOInit();
 8001366:	f7ff ff9d 	bl	80012a4 <ADC_GPIOInit>
	ADCs_Init();
 800136a:	f7ff ffb5 	bl	80012d8 <ADCs_Init>

	ADC_StartConversion(ADC1);
 800136e:	4859      	ldr	r0, [pc, #356]	@ (80014d4 <main+0x1ac>)
 8001370:	f000 fa7e 	bl	8001870 <ADC_StartConversion>
	ADC_StartConversion(ADC2);
 8001374:	4858      	ldr	r0, [pc, #352]	@ (80014d8 <main+0x1b0>)
 8001376:	f000 fa7b 	bl	8001870 <ADC_StartConversion>
	ADC_StartConversion(ADC3);
 800137a:	4858      	ldr	r0, [pc, #352]	@ (80014dc <main+0x1b4>)
 800137c:	f000 fa78 	bl	8001870 <ADC_StartConversion>

	while(1){
		// Temperature sensor
		adc_value_s1 = ADC_ReadValue(ADC1);
 8001380:	4854      	ldr	r0, [pc, #336]	@ (80014d4 <main+0x1ac>)
 8001382:	f000 fa8a 	bl	800189a <ADC_ReadValue>
 8001386:	60b8      	str	r0, [r7, #8]
		voltaje_temp_sens = (3.3*((float)adc_value_s1))/4095;
 8001388:	68b8      	ldr	r0, [r7, #8]
 800138a:	f7ff fd53 	bl	8000e34 <__aeabi_ui2f>
 800138e:	4603      	mov	r3, r0
 8001390:	4618      	mov	r0, r3
 8001392:	f7ff f8f9 	bl	8000588 <__aeabi_f2d>
 8001396:	a346      	add	r3, pc, #280	@ (adr r3, 80014b0 <main+0x188>)
 8001398:	e9d3 2300 	ldrd	r2, r3, [r3]
 800139c:	f7ff f94c 	bl	8000638 <__aeabi_dmul>
 80013a0:	4602      	mov	r2, r0
 80013a2:	460b      	mov	r3, r1
 80013a4:	4610      	mov	r0, r2
 80013a6:	4619      	mov	r1, r3
 80013a8:	a343      	add	r3, pc, #268	@ (adr r3, 80014b8 <main+0x190>)
 80013aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013ae:	f7ff fa6d 	bl	800088c <__aeabi_ddiv>
 80013b2:	4602      	mov	r2, r0
 80013b4:	460b      	mov	r3, r1
 80013b6:	4610      	mov	r0, r2
 80013b8:	4619      	mov	r1, r3
 80013ba:	f7ff fc35 	bl	8000c28 <__aeabi_d2f>
 80013be:	4603      	mov	r3, r0
 80013c0:	61bb      	str	r3, [r7, #24]
		temperature = ((voltaje_temp_sens - V25)/AVG_SLOPE) + 25;
 80013c2:	69b8      	ldr	r0, [r7, #24]
 80013c4:	f7ff f8e0 	bl	8000588 <__aeabi_f2d>
 80013c8:	a33d      	add	r3, pc, #244	@ (adr r3, 80014c0 <main+0x198>)
 80013ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013ce:	f7fe ff7b 	bl	80002c8 <__aeabi_dsub>
 80013d2:	4602      	mov	r2, r0
 80013d4:	460b      	mov	r3, r1
 80013d6:	4610      	mov	r0, r2
 80013d8:	4619      	mov	r1, r3
 80013da:	a33b      	add	r3, pc, #236	@ (adr r3, 80014c8 <main+0x1a0>)
 80013dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013e0:	f7ff fa54 	bl	800088c <__aeabi_ddiv>
 80013e4:	4602      	mov	r2, r0
 80013e6:	460b      	mov	r3, r1
 80013e8:	4610      	mov	r0, r2
 80013ea:	4619      	mov	r1, r3
 80013ec:	f04f 0200 	mov.w	r2, #0
 80013f0:	4b3b      	ldr	r3, [pc, #236]	@ (80014e0 <main+0x1b8>)
 80013f2:	f7fe ff6b 	bl	80002cc <__adddf3>
 80013f6:	4602      	mov	r2, r0
 80013f8:	460b      	mov	r3, r1
 80013fa:	4610      	mov	r0, r2
 80013fc:	4619      	mov	r1, r3
 80013fe:	f7ff fc13 	bl	8000c28 <__aeabi_d2f>
 8001402:	4603      	mov	r3, r0
 8001404:	61fb      	str	r3, [r7, #28]


		// Voltage meter  (Nivel de bateria)
		adc_value_s2 = ADC_ReadValue(ADC2);
 8001406:	4834      	ldr	r0, [pc, #208]	@ (80014d8 <main+0x1b0>)
 8001408:	f000 fa47 	bl	800189a <ADC_ReadValue>
 800140c:	6078      	str	r0, [r7, #4]
		voltaje_pila_AA = (((float)adc_value_s2)*3.3)/4095;
 800140e:	6878      	ldr	r0, [r7, #4]
 8001410:	f7ff fd10 	bl	8000e34 <__aeabi_ui2f>
 8001414:	4603      	mov	r3, r0
 8001416:	4618      	mov	r0, r3
 8001418:	f7ff f8b6 	bl	8000588 <__aeabi_f2d>
 800141c:	a324      	add	r3, pc, #144	@ (adr r3, 80014b0 <main+0x188>)
 800141e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001422:	f7ff f909 	bl	8000638 <__aeabi_dmul>
 8001426:	4602      	mov	r2, r0
 8001428:	460b      	mov	r3, r1
 800142a:	4610      	mov	r0, r2
 800142c:	4619      	mov	r1, r3
 800142e:	a322      	add	r3, pc, #136	@ (adr r3, 80014b8 <main+0x190>)
 8001430:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001434:	f7ff fa2a 	bl	800088c <__aeabi_ddiv>
 8001438:	4602      	mov	r2, r0
 800143a:	460b      	mov	r3, r1
 800143c:	4610      	mov	r0, r2
 800143e:	4619      	mov	r1, r3
 8001440:	f7ff fbf2 	bl	8000c28 <__aeabi_d2f>
 8001444:	4603      	mov	r3, r0
 8001446:	617b      	str	r3, [r7, #20]
		baterry_voltage = voltaje_pila_AA;
 8001448:	697b      	ldr	r3, [r7, #20]
 800144a:	60fb      	str	r3, [r7, #12]

		// Current meter
		battery_current=(voltaje_pila_AA/RESISTOR)*1000;
 800144c:	4925      	ldr	r1, [pc, #148]	@ (80014e4 <main+0x1bc>)
 800144e:	6978      	ldr	r0, [r7, #20]
 8001450:	f7ff fdfc 	bl	800104c <__aeabi_fdiv>
 8001454:	4603      	mov	r3, r0
 8001456:	4924      	ldr	r1, [pc, #144]	@ (80014e8 <main+0x1c0>)
 8001458:	4618      	mov	r0, r3
 800145a:	f7ff fd43 	bl	8000ee4 <__aeabi_fmul>
 800145e:	4603      	mov	r3, r0
 8001460:	613b      	str	r3, [r7, #16]

		// Concatenate string
		sprintf(msg, "%.2f %.2f %.2f",temperature, baterry_voltage, battery_current);
 8001462:	69f8      	ldr	r0, [r7, #28]
 8001464:	f7ff f890 	bl	8000588 <__aeabi_f2d>
 8001468:	4680      	mov	r8, r0
 800146a:	4689      	mov	r9, r1
 800146c:	68f8      	ldr	r0, [r7, #12]
 800146e:	f7ff f88b 	bl	8000588 <__aeabi_f2d>
 8001472:	4604      	mov	r4, r0
 8001474:	460d      	mov	r5, r1
 8001476:	6938      	ldr	r0, [r7, #16]
 8001478:	f7ff f886 	bl	8000588 <__aeabi_f2d>
 800147c:	4602      	mov	r2, r0
 800147e:	460b      	mov	r3, r1
 8001480:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001484:	e9cd 4500 	strd	r4, r5, [sp]
 8001488:	4642      	mov	r2, r8
 800148a:	464b      	mov	r3, r9
 800148c:	4917      	ldr	r1, [pc, #92]	@ (80014ec <main+0x1c4>)
 800148e:	4818      	ldr	r0, [pc, #96]	@ (80014f0 <main+0x1c8>)
 8001490:	f001 fe3e 	bl	8003110 <siprintf>

		// Send Data
		USART_SendData(&usart2_handle, (uint8_t *)msg, strlen(msg));
 8001494:	4816      	ldr	r0, [pc, #88]	@ (80014f0 <main+0x1c8>)
 8001496:	f7fe ff0b 	bl	80002b0 <strlen>
 800149a:	4603      	mov	r3, r0
 800149c:	461a      	mov	r2, r3
 800149e:	4914      	ldr	r1, [pc, #80]	@ (80014f0 <main+0x1c8>)
 80014a0:	4814      	ldr	r0, [pc, #80]	@ (80014f4 <main+0x1cc>)
 80014a2:	f000 febf 	bl	8002224 <USART_SendData>
		delay();
 80014a6:	f7ff fea3 	bl	80011f0 <delay>
		adc_value_s1 = ADC_ReadValue(ADC1);
 80014aa:	bf00      	nop
 80014ac:	e768      	b.n	8001380 <main+0x58>
 80014ae:	bf00      	nop
 80014b0:	66666666 	.word	0x66666666
 80014b4:	400a6666 	.word	0x400a6666
 80014b8:	00000000 	.word	0x00000000
 80014bc:	40affe00 	.word	0x40affe00
 80014c0:	851eb852 	.word	0x851eb852
 80014c4:	3fe851eb 	.word	0x3fe851eb
 80014c8:	47ae147b 	.word	0x47ae147b
 80014cc:	3f647ae1 	.word	0x3f647ae1
 80014d0:	40004400 	.word	0x40004400
 80014d4:	40012000 	.word	0x40012000
 80014d8:	40012100 	.word	0x40012100
 80014dc:	40012200 	.word	0x40012200
 80014e0:	40390000 	.word	0x40390000
 80014e4:	41200000 	.word	0x41200000
 80014e8:	447a0000 	.word	0x447a0000
 80014ec:	08006968 	.word	0x08006968
 80014f0:	20000204 	.word	0x20000204
 80014f4:	20000228 	.word	0x20000228

080014f8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80014f8:	b480      	push	{r7}
 80014fa:	af00      	add	r7, sp, #0
  return 1;
 80014fc:	2301      	movs	r3, #1
}
 80014fe:	4618      	mov	r0, r3
 8001500:	46bd      	mov	sp, r7
 8001502:	bc80      	pop	{r7}
 8001504:	4770      	bx	lr

08001506 <_kill>:

int _kill(int pid, int sig)
{
 8001506:	b580      	push	{r7, lr}
 8001508:	b082      	sub	sp, #8
 800150a:	af00      	add	r7, sp, #0
 800150c:	6078      	str	r0, [r7, #4]
 800150e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001510:	f001 feb4 	bl	800327c <__errno>
 8001514:	4603      	mov	r3, r0
 8001516:	2216      	movs	r2, #22
 8001518:	601a      	str	r2, [r3, #0]
  return -1;
 800151a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800151e:	4618      	mov	r0, r3
 8001520:	3708      	adds	r7, #8
 8001522:	46bd      	mov	sp, r7
 8001524:	bd80      	pop	{r7, pc}

08001526 <_exit>:

void _exit (int status)
{
 8001526:	b580      	push	{r7, lr}
 8001528:	b082      	sub	sp, #8
 800152a:	af00      	add	r7, sp, #0
 800152c:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800152e:	f04f 31ff 	mov.w	r1, #4294967295
 8001532:	6878      	ldr	r0, [r7, #4]
 8001534:	f7ff ffe7 	bl	8001506 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001538:	bf00      	nop
 800153a:	e7fd      	b.n	8001538 <_exit+0x12>

0800153c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800153c:	b580      	push	{r7, lr}
 800153e:	b086      	sub	sp, #24
 8001540:	af00      	add	r7, sp, #0
 8001542:	60f8      	str	r0, [r7, #12]
 8001544:	60b9      	str	r1, [r7, #8]
 8001546:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001548:	2300      	movs	r3, #0
 800154a:	617b      	str	r3, [r7, #20]
 800154c:	e00a      	b.n	8001564 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800154e:	f3af 8000 	nop.w
 8001552:	4601      	mov	r1, r0
 8001554:	68bb      	ldr	r3, [r7, #8]
 8001556:	1c5a      	adds	r2, r3, #1
 8001558:	60ba      	str	r2, [r7, #8]
 800155a:	b2ca      	uxtb	r2, r1
 800155c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800155e:	697b      	ldr	r3, [r7, #20]
 8001560:	3301      	adds	r3, #1
 8001562:	617b      	str	r3, [r7, #20]
 8001564:	697a      	ldr	r2, [r7, #20]
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	429a      	cmp	r2, r3
 800156a:	dbf0      	blt.n	800154e <_read+0x12>
  }

  return len;
 800156c:	687b      	ldr	r3, [r7, #4]
}
 800156e:	4618      	mov	r0, r3
 8001570:	3718      	adds	r7, #24
 8001572:	46bd      	mov	sp, r7
 8001574:	bd80      	pop	{r7, pc}

08001576 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001576:	b580      	push	{r7, lr}
 8001578:	b086      	sub	sp, #24
 800157a:	af00      	add	r7, sp, #0
 800157c:	60f8      	str	r0, [r7, #12]
 800157e:	60b9      	str	r1, [r7, #8]
 8001580:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001582:	2300      	movs	r3, #0
 8001584:	617b      	str	r3, [r7, #20]
 8001586:	e009      	b.n	800159c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001588:	68bb      	ldr	r3, [r7, #8]
 800158a:	1c5a      	adds	r2, r3, #1
 800158c:	60ba      	str	r2, [r7, #8]
 800158e:	781b      	ldrb	r3, [r3, #0]
 8001590:	4618      	mov	r0, r3
 8001592:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001596:	697b      	ldr	r3, [r7, #20]
 8001598:	3301      	adds	r3, #1
 800159a:	617b      	str	r3, [r7, #20]
 800159c:	697a      	ldr	r2, [r7, #20]
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	429a      	cmp	r2, r3
 80015a2:	dbf1      	blt.n	8001588 <_write+0x12>
  }
  return len;
 80015a4:	687b      	ldr	r3, [r7, #4]
}
 80015a6:	4618      	mov	r0, r3
 80015a8:	3718      	adds	r7, #24
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bd80      	pop	{r7, pc}

080015ae <_close>:

int _close(int file)
{
 80015ae:	b480      	push	{r7}
 80015b0:	b083      	sub	sp, #12
 80015b2:	af00      	add	r7, sp, #0
 80015b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80015b6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015ba:	4618      	mov	r0, r3
 80015bc:	370c      	adds	r7, #12
 80015be:	46bd      	mov	sp, r7
 80015c0:	bc80      	pop	{r7}
 80015c2:	4770      	bx	lr

080015c4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80015c4:	b480      	push	{r7}
 80015c6:	b083      	sub	sp, #12
 80015c8:	af00      	add	r7, sp, #0
 80015ca:	6078      	str	r0, [r7, #4]
 80015cc:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80015ce:	683b      	ldr	r3, [r7, #0]
 80015d0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80015d4:	605a      	str	r2, [r3, #4]
  return 0;
 80015d6:	2300      	movs	r3, #0
}
 80015d8:	4618      	mov	r0, r3
 80015da:	370c      	adds	r7, #12
 80015dc:	46bd      	mov	sp, r7
 80015de:	bc80      	pop	{r7}
 80015e0:	4770      	bx	lr

080015e2 <_isatty>:

int _isatty(int file)
{
 80015e2:	b480      	push	{r7}
 80015e4:	b083      	sub	sp, #12
 80015e6:	af00      	add	r7, sp, #0
 80015e8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80015ea:	2301      	movs	r3, #1
}
 80015ec:	4618      	mov	r0, r3
 80015ee:	370c      	adds	r7, #12
 80015f0:	46bd      	mov	sp, r7
 80015f2:	bc80      	pop	{r7}
 80015f4:	4770      	bx	lr

080015f6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80015f6:	b480      	push	{r7}
 80015f8:	b085      	sub	sp, #20
 80015fa:	af00      	add	r7, sp, #0
 80015fc:	60f8      	str	r0, [r7, #12]
 80015fe:	60b9      	str	r1, [r7, #8]
 8001600:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001602:	2300      	movs	r3, #0
}
 8001604:	4618      	mov	r0, r3
 8001606:	3714      	adds	r7, #20
 8001608:	46bd      	mov	sp, r7
 800160a:	bc80      	pop	{r7}
 800160c:	4770      	bx	lr
	...

08001610 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	b086      	sub	sp, #24
 8001614:	af00      	add	r7, sp, #0
 8001616:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001618:	4a14      	ldr	r2, [pc, #80]	@ (800166c <_sbrk+0x5c>)
 800161a:	4b15      	ldr	r3, [pc, #84]	@ (8001670 <_sbrk+0x60>)
 800161c:	1ad3      	subs	r3, r2, r3
 800161e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001620:	697b      	ldr	r3, [r7, #20]
 8001622:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001624:	4b13      	ldr	r3, [pc, #76]	@ (8001674 <_sbrk+0x64>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	2b00      	cmp	r3, #0
 800162a:	d102      	bne.n	8001632 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800162c:	4b11      	ldr	r3, [pc, #68]	@ (8001674 <_sbrk+0x64>)
 800162e:	4a12      	ldr	r2, [pc, #72]	@ (8001678 <_sbrk+0x68>)
 8001630:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001632:	4b10      	ldr	r3, [pc, #64]	@ (8001674 <_sbrk+0x64>)
 8001634:	681a      	ldr	r2, [r3, #0]
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	4413      	add	r3, r2
 800163a:	693a      	ldr	r2, [r7, #16]
 800163c:	429a      	cmp	r2, r3
 800163e:	d207      	bcs.n	8001650 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001640:	f001 fe1c 	bl	800327c <__errno>
 8001644:	4603      	mov	r3, r0
 8001646:	220c      	movs	r2, #12
 8001648:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800164a:	f04f 33ff 	mov.w	r3, #4294967295
 800164e:	e009      	b.n	8001664 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001650:	4b08      	ldr	r3, [pc, #32]	@ (8001674 <_sbrk+0x64>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001656:	4b07      	ldr	r3, [pc, #28]	@ (8001674 <_sbrk+0x64>)
 8001658:	681a      	ldr	r2, [r3, #0]
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	4413      	add	r3, r2
 800165e:	4a05      	ldr	r2, [pc, #20]	@ (8001674 <_sbrk+0x64>)
 8001660:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001662:	68fb      	ldr	r3, [r7, #12]
}
 8001664:	4618      	mov	r0, r3
 8001666:	3718      	adds	r7, #24
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	20020000 	.word	0x20020000
 8001670:	00000400 	.word	0x00000400
 8001674:	20000270 	.word	0x20000270
 8001678:	200003c0 	.word	0x200003c0

0800167c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800167c:	480d      	ldr	r0, [pc, #52]	@ (80016b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800167e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001680:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001684:	480c      	ldr	r0, [pc, #48]	@ (80016b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8001686:	490d      	ldr	r1, [pc, #52]	@ (80016bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8001688:	4a0d      	ldr	r2, [pc, #52]	@ (80016c0 <LoopForever+0xe>)
  movs r3, #0
 800168a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800168c:	e002      	b.n	8001694 <LoopCopyDataInit>

0800168e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800168e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001690:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001692:	3304      	adds	r3, #4

08001694 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001694:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001696:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001698:	d3f9      	bcc.n	800168e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800169a:	4a0a      	ldr	r2, [pc, #40]	@ (80016c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800169c:	4c0a      	ldr	r4, [pc, #40]	@ (80016c8 <LoopForever+0x16>)
  movs r3, #0
 800169e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80016a0:	e001      	b.n	80016a6 <LoopFillZerobss>

080016a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80016a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80016a4:	3204      	adds	r2, #4

080016a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80016a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80016a8:	d3fb      	bcc.n	80016a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80016aa:	f001 fded 	bl	8003288 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80016ae:	f7ff fe3b 	bl	8001328 <main>

080016b2 <LoopForever>:

LoopForever:
  b LoopForever
 80016b2:	e7fe      	b.n	80016b2 <LoopForever>
  ldr   r0, =_estack
 80016b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80016b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80016bc:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 80016c0:	08006db8 	.word	0x08006db8
  ldr r2, =_sbss
 80016c4:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 80016c8:	200003c0 	.word	0x200003c0

080016cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80016cc:	e7fe      	b.n	80016cc <ADC_IRQHandler>
	...

080016d0 <ADC_PeriClockControl>:
 *
 * @return					- return type: none
 *
 * @note					- espcial note to use API: none
 */
void ADC_PeriClockControl(ADC_RegDef_t *pADCx, uint8_t EnorDi){
 80016d0:	b480      	push	{r7}
 80016d2:	b083      	sub	sp, #12
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	6078      	str	r0, [r7, #4]
 80016d8:	460b      	mov	r3, r1
 80016da:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 80016dc:	78fb      	ldrb	r3, [r7, #3]
 80016de:	2b01      	cmp	r3, #1
 80016e0:	d120      	bne.n	8001724 <ADC_PeriClockControl+0x54>
		if(pADCx == ADC1){
 80016e2:	687b      	ldr	r3, [r7, #4]
 80016e4:	4a22      	ldr	r2, [pc, #136]	@ (8001770 <ADC_PeriClockControl+0xa0>)
 80016e6:	4293      	cmp	r3, r2
 80016e8:	d106      	bne.n	80016f8 <ADC_PeriClockControl+0x28>
			ADC1_PCLK_EN();
 80016ea:	4b22      	ldr	r3, [pc, #136]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 80016ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016ee:	4a21      	ldr	r2, [pc, #132]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 80016f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80016f4:	6453      	str	r3, [r2, #68]	@ 0x44
			ADC2_PCLK_DI();
		} else if(pADCx == ADC3){
			ADC3_PCLK_DI();
		}
	}
}
 80016f6:	e035      	b.n	8001764 <ADC_PeriClockControl+0x94>
		} else if(pADCx == ADC2){
 80016f8:	687b      	ldr	r3, [r7, #4]
 80016fa:	4a1f      	ldr	r2, [pc, #124]	@ (8001778 <ADC_PeriClockControl+0xa8>)
 80016fc:	4293      	cmp	r3, r2
 80016fe:	d106      	bne.n	800170e <ADC_PeriClockControl+0x3e>
			ADC2_PCLK_EN();
 8001700:	4b1c      	ldr	r3, [pc, #112]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001702:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001704:	4a1b      	ldr	r2, [pc, #108]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001706:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800170a:	6453      	str	r3, [r2, #68]	@ 0x44
}
 800170c:	e02a      	b.n	8001764 <ADC_PeriClockControl+0x94>
		} else if(pADCx == ADC3){
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	4a1a      	ldr	r2, [pc, #104]	@ (800177c <ADC_PeriClockControl+0xac>)
 8001712:	4293      	cmp	r3, r2
 8001714:	d126      	bne.n	8001764 <ADC_PeriClockControl+0x94>
			ADC3_PCLK_EN();
 8001716:	4b17      	ldr	r3, [pc, #92]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001718:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800171a:	4a16      	ldr	r2, [pc, #88]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 800171c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001720:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001722:	e01f      	b.n	8001764 <ADC_PeriClockControl+0x94>
		if(pADCx == ADC1){
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	4a12      	ldr	r2, [pc, #72]	@ (8001770 <ADC_PeriClockControl+0xa0>)
 8001728:	4293      	cmp	r3, r2
 800172a:	d106      	bne.n	800173a <ADC_PeriClockControl+0x6a>
			ADC1_PCLK_DI();
 800172c:	4b11      	ldr	r3, [pc, #68]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 800172e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001730:	4a10      	ldr	r2, [pc, #64]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001732:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001736:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001738:	e014      	b.n	8001764 <ADC_PeriClockControl+0x94>
		} else if(pADCx == ADC3){
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	4a0f      	ldr	r2, [pc, #60]	@ (800177c <ADC_PeriClockControl+0xac>)
 800173e:	4293      	cmp	r3, r2
 8001740:	d106      	bne.n	8001750 <ADC_PeriClockControl+0x80>
			ADC2_PCLK_DI();
 8001742:	4b0c      	ldr	r3, [pc, #48]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001744:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001746:	4a0b      	ldr	r2, [pc, #44]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 8001748:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800174c:	6453      	str	r3, [r2, #68]	@ 0x44
}
 800174e:	e009      	b.n	8001764 <ADC_PeriClockControl+0x94>
		} else if(pADCx == ADC3){
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	4a0a      	ldr	r2, [pc, #40]	@ (800177c <ADC_PeriClockControl+0xac>)
 8001754:	4293      	cmp	r3, r2
 8001756:	d105      	bne.n	8001764 <ADC_PeriClockControl+0x94>
			ADC3_PCLK_DI();
 8001758:	4b06      	ldr	r3, [pc, #24]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 800175a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800175c:	4a05      	ldr	r2, [pc, #20]	@ (8001774 <ADC_PeriClockControl+0xa4>)
 800175e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001762:	6453      	str	r3, [r2, #68]	@ 0x44
}
 8001764:	bf00      	nop
 8001766:	370c      	adds	r7, #12
 8001768:	46bd      	mov	sp, r7
 800176a:	bc80      	pop	{r7}
 800176c:	4770      	bx	lr
 800176e:	bf00      	nop
 8001770:	40012000 	.word	0x40012000
 8001774:	40023800 	.word	0x40023800
 8001778:	40012100 	.word	0x40012100
 800177c:	40012200 	.word	0x40012200

08001780 <ADC_Init>:

void ADC_Init(ADC_Handle_t *pADCHandle){
 8001780:	b580      	push	{r7, lr}
 8001782:	b082      	sub	sp, #8
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
	// Enable the peripheral clock
	ADC_PeriClockControl(pADCHandle->pADCx, ENABLE);
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	681b      	ldr	r3, [r3, #0]
 800178c:	2101      	movs	r1, #1
 800178e:	4618      	mov	r0, r3
 8001790:	f7ff ff9e 	bl	80016d0 <ADC_PeriClockControl>

	// Especify the resolution
	pADCHandle->pADCx->CR1 |= (0 << ADC_CR1_RES);
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681a      	ldr	r2, [r3, #0]
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	6852      	ldr	r2, [r2, #4]
 800179e:	605a      	str	r2, [r3, #4]
	// SCAN activ
	//pADCHandle->pADCx->CR1 |= (1 << ADC_CR1_SCAN);


	//  Discontinuous mode channel count
	pADCHandle->pADCx->CR1 |= (0b011 << ADC_CR1_DISCNUM);
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	685a      	ldr	r2, [r3, #4]
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	f442 42c0 	orr.w	r2, r2, #24576	@ 0x6000
 80017ae:	605a      	str	r2, [r3, #4]

	//Conversion sequence start
	if(pADCHandle->pADCx == ADC1){
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	4a2b      	ldr	r2, [pc, #172]	@ (8001864 <ADC_Init+0xe4>)
 80017b6:	4293      	cmp	r3, r2
 80017b8:	d118      	bne.n	80017ec <ADC_Init+0x6c>
		pADCHandle->pC_ADC->CCR |= (1 << ADC_CCR_TSVREFE);
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	685b      	ldr	r3, [r3, #4]
 80017be:	685a      	ldr	r2, [r3, #4]
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	685b      	ldr	r3, [r3, #4]
 80017c4:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80017c8:	605a      	str	r2, [r3, #4]
		pADCHandle->pADCx->SQR3 |= (0b10010 << ADC_SQR3_SQ1);
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	f042 0212 	orr.w	r2, r2, #18
 80017d8:	635a      	str	r2, [r3, #52]	@ 0x34
		pADCHandle->pADCx->SMPR1 |= (0b110 << ADC_SMPR1_SPM18);
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	68da      	ldr	r2, [r3, #12]
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	f042 62c0 	orr.w	r2, r2, #100663296	@ 0x6000000
 80017e8:	60da      	str	r2, [r3, #12]
 80017ea:	e028      	b.n	800183e <ADC_Init+0xbe>

	}else if(pADCHandle->pADCx == ADC2){
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	4a1d      	ldr	r2, [pc, #116]	@ (8001868 <ADC_Init+0xe8>)
 80017f2:	4293      	cmp	r3, r2
 80017f4:	d10e      	bne.n	8001814 <ADC_Init+0x94>
		pADCHandle->pADCx->SQR3 |= (0b00000 << ADC_SQR3_SQ1);
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	681a      	ldr	r2, [r3, #0]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8001800:	635a      	str	r2, [r3, #52]	@ 0x34
		pADCHandle->pADCx->SMPR2 |= (0b110 << ADC_SMPR2_SPM0);
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	691a      	ldr	r2, [r3, #16]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	f042 0206 	orr.w	r2, r2, #6
 8001810:	611a      	str	r2, [r3, #16]
 8001812:	e014      	b.n	800183e <ADC_Init+0xbe>

	}else if(pADCHandle->pADCx == ADC3){
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	4a14      	ldr	r2, [pc, #80]	@ (800186c <ADC_Init+0xec>)
 800181a:	4293      	cmp	r3, r2
 800181c:	d10f      	bne.n	800183e <ADC_Init+0xbe>
		pADCHandle->pADCx->SQR3 |= (0b00001 << ADC_SQR3_SQ1);
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	f042 0201 	orr.w	r2, r2, #1
 800182c:	635a      	str	r2, [r3, #52]	@ 0x34
		pADCHandle->pADCx->SMPR2 |= (0b110 << ADC_SMPR2_SPM1);
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	691a      	ldr	r2, [r3, #16]
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	f042 0230 	orr.w	r2, r2, #48	@ 0x30
 800183c:	611a      	str	r2, [r3, #16]
	}

	//Specify conversion sequence length
	pADCHandle->pADCx->SQR1 |= (0 << ADC_SQR1_L);
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681a      	ldr	r2, [r3, #0]
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8001848:	62da      	str	r2, [r3, #44]	@ 0x2c

	// Enable the ADC
	pADCHandle->pADCx->CR2 |= (1 << ADC_CR2_ADON);
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	689a      	ldr	r2, [r3, #8]
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	f042 0201 	orr.w	r2, r2, #1
 8001858:	609a      	str	r2, [r3, #8]

}
 800185a:	bf00      	nop
 800185c:	3708      	adds	r7, #8
 800185e:	46bd      	mov	sp, r7
 8001860:	bd80      	pop	{r7, pc}
 8001862:	bf00      	nop
 8001864:	40012000 	.word	0x40012000
 8001868:	40012100 	.word	0x40012100
 800186c:	40012200 	.word	0x40012200

08001870 <ADC_StartConversion>:
	} else if(pADCx == ADC3){
		ADC_REG_RESET();
	}
}

void ADC_StartConversion(ADC_RegDef_t *pADCx){
 8001870:	b480      	push	{r7}
 8001872:	b083      	sub	sp, #12
 8001874:	af00      	add	r7, sp, #0
 8001876:	6078      	str	r0, [r7, #4]
	// Continius conversion
	pADCx->CR2 |= (1<<ADC_CR2_CONT);
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	689b      	ldr	r3, [r3, #8]
 800187c:	f043 0202 	orr.w	r2, r3, #2
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	609a      	str	r2, [r3, #8]

	//Start ADC conversion
	pADCx->CR2 |= (1 << ADC_CR2_SWSTART);
 8001884:	687b      	ldr	r3, [r7, #4]
 8001886:	689b      	ldr	r3, [r3, #8]
 8001888:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	609a      	str	r2, [r3, #8]
}
 8001890:	bf00      	nop
 8001892:	370c      	adds	r7, #12
 8001894:	46bd      	mov	sp, r7
 8001896:	bc80      	pop	{r7}
 8001898:	4770      	bx	lr

0800189a <ADC_ReadValue>:

uint32_t ADC_ReadValue(ADC_RegDef_t *pADCx){
 800189a:	b480      	push	{r7}
 800189c:	b083      	sub	sp, #12
 800189e:	af00      	add	r7, sp, #0
 80018a0:	6078      	str	r0, [r7, #4]
	//Wait for the conversion to be complete
	while(!(pADCx->SR & (1 << ADC_SR_EOC)));
 80018a2:	bf00      	nop
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	f003 0302 	and.w	r3, r3, #2
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d0f9      	beq.n	80018a4 <ADC_ReadValue+0xa>

	//Read converted result
	return(pADCx->DR);
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 80018b4:	4618      	mov	r0, r3
 80018b6:	370c      	adds	r7, #12
 80018b8:	46bd      	mov	sp, r7
 80018ba:	bc80      	pop	{r7}
 80018bc:	4770      	bx	lr
	...

080018c0 <GPIO_PeriClockControl>:
 *
 * @return					- return type: none
 *
 * @note					- espcial note to use API: none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80018c0:	b480      	push	{r7}
 80018c2:	b083      	sub	sp, #12
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	6078      	str	r0, [r7, #4]
 80018c8:	460b      	mov	r3, r1
 80018ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 80018cc:	78fb      	ldrb	r3, [r7, #3]
 80018ce:	2b01      	cmp	r3, #1
 80018d0:	d157      	bne.n	8001982 <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	4a59      	ldr	r2, [pc, #356]	@ (8001a3c <GPIO_PeriClockControl+0x17c>)
 80018d6:	4293      	cmp	r3, r2
 80018d8:	d106      	bne.n	80018e8 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80018da:	4b59      	ldr	r3, [pc, #356]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80018dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018de:	4a58      	ldr	r2, [pc, #352]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80018e0:	f043 0301 	orr.w	r3, r3, #1
 80018e4:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOG_PCLK_DI();
		} else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}
}
 80018e6:	e0a3      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB){
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	4a56      	ldr	r2, [pc, #344]	@ (8001a44 <GPIO_PeriClockControl+0x184>)
 80018ec:	4293      	cmp	r3, r2
 80018ee:	d106      	bne.n	80018fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80018f0:	4b53      	ldr	r3, [pc, #332]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80018f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018f4:	4a52      	ldr	r2, [pc, #328]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80018f6:	f043 0302 	orr.w	r3, r3, #2
 80018fa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80018fc:	e098      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC){
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	4a51      	ldr	r2, [pc, #324]	@ (8001a48 <GPIO_PeriClockControl+0x188>)
 8001902:	4293      	cmp	r3, r2
 8001904:	d106      	bne.n	8001914 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8001906:	4b4e      	ldr	r3, [pc, #312]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001908:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800190a:	4a4d      	ldr	r2, [pc, #308]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800190c:	f043 0304 	orr.w	r3, r3, #4
 8001910:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001912:	e08d      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD){
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	4a4d      	ldr	r2, [pc, #308]	@ (8001a4c <GPIO_PeriClockControl+0x18c>)
 8001918:	4293      	cmp	r3, r2
 800191a:	d106      	bne.n	800192a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800191c:	4b48      	ldr	r3, [pc, #288]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800191e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001920:	4a47      	ldr	r2, [pc, #284]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001922:	f043 0308 	orr.w	r3, r3, #8
 8001926:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001928:	e082      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE){
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	4a48      	ldr	r2, [pc, #288]	@ (8001a50 <GPIO_PeriClockControl+0x190>)
 800192e:	4293      	cmp	r3, r2
 8001930:	d106      	bne.n	8001940 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8001932:	4b43      	ldr	r3, [pc, #268]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001934:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001936:	4a42      	ldr	r2, [pc, #264]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001938:	f043 0310 	orr.w	r3, r3, #16
 800193c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800193e:	e077      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF){
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	4a44      	ldr	r2, [pc, #272]	@ (8001a54 <GPIO_PeriClockControl+0x194>)
 8001944:	4293      	cmp	r3, r2
 8001946:	d106      	bne.n	8001956 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8001948:	4b3d      	ldr	r3, [pc, #244]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800194a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800194c:	4a3c      	ldr	r2, [pc, #240]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800194e:	f043 0320 	orr.w	r3, r3, #32
 8001952:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001954:	e06c      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG){
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	4a3f      	ldr	r2, [pc, #252]	@ (8001a58 <GPIO_PeriClockControl+0x198>)
 800195a:	4293      	cmp	r3, r2
 800195c:	d106      	bne.n	800196c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800195e:	4b38      	ldr	r3, [pc, #224]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001962:	4a37      	ldr	r2, [pc, #220]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001964:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001968:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800196a:	e061      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH){
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	4a3b      	ldr	r2, [pc, #236]	@ (8001a5c <GPIO_PeriClockControl+0x19c>)
 8001970:	4293      	cmp	r3, r2
 8001972:	d15d      	bne.n	8001a30 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 8001974:	4b32      	ldr	r3, [pc, #200]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001976:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001978:	4a31      	ldr	r2, [pc, #196]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800197a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800197e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001980:	e056      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA){
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	4a2d      	ldr	r2, [pc, #180]	@ (8001a3c <GPIO_PeriClockControl+0x17c>)
 8001986:	4293      	cmp	r3, r2
 8001988:	d106      	bne.n	8001998 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 800198a:	4b2d      	ldr	r3, [pc, #180]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 800198c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800198e:	4a2c      	ldr	r2, [pc, #176]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001990:	f023 0301 	bic.w	r3, r3, #1
 8001994:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001996:	e04b      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB){
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	4a2a      	ldr	r2, [pc, #168]	@ (8001a44 <GPIO_PeriClockControl+0x184>)
 800199c:	4293      	cmp	r3, r2
 800199e:	d106      	bne.n	80019ae <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80019a0:	4b27      	ldr	r3, [pc, #156]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019a4:	4a26      	ldr	r2, [pc, #152]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019a6:	f023 0302 	bic.w	r3, r3, #2
 80019aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80019ac:	e040      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC){
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	4a25      	ldr	r2, [pc, #148]	@ (8001a48 <GPIO_PeriClockControl+0x188>)
 80019b2:	4293      	cmp	r3, r2
 80019b4:	d106      	bne.n	80019c4 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80019b6:	4b22      	ldr	r3, [pc, #136]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ba:	4a21      	ldr	r2, [pc, #132]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019bc:	f023 0304 	bic.w	r3, r3, #4
 80019c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80019c2:	e035      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD){
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	4a21      	ldr	r2, [pc, #132]	@ (8001a4c <GPIO_PeriClockControl+0x18c>)
 80019c8:	4293      	cmp	r3, r2
 80019ca:	d106      	bne.n	80019da <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80019cc:	4b1c      	ldr	r3, [pc, #112]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019d0:	4a1b      	ldr	r2, [pc, #108]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019d2:	f023 0308 	bic.w	r3, r3, #8
 80019d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80019d8:	e02a      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE){
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	4a1c      	ldr	r2, [pc, #112]	@ (8001a50 <GPIO_PeriClockControl+0x190>)
 80019de:	4293      	cmp	r3, r2
 80019e0:	d106      	bne.n	80019f0 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80019e2:	4b17      	ldr	r3, [pc, #92]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019e6:	4a16      	ldr	r2, [pc, #88]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019e8:	f023 0310 	bic.w	r3, r3, #16
 80019ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80019ee:	e01f      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF){
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	4a18      	ldr	r2, [pc, #96]	@ (8001a54 <GPIO_PeriClockControl+0x194>)
 80019f4:	4293      	cmp	r3, r2
 80019f6:	d106      	bne.n	8001a06 <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 80019f8:	4b11      	ldr	r3, [pc, #68]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019fc:	4a10      	ldr	r2, [pc, #64]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 80019fe:	f023 0320 	bic.w	r3, r3, #32
 8001a02:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001a04:	e014      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG){
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	4a13      	ldr	r2, [pc, #76]	@ (8001a58 <GPIO_PeriClockControl+0x198>)
 8001a0a:	4293      	cmp	r3, r2
 8001a0c:	d106      	bne.n	8001a1c <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8001a0e:	4b0c      	ldr	r3, [pc, #48]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001a10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a12:	4a0b      	ldr	r2, [pc, #44]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001a14:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001a18:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001a1a:	e009      	b.n	8001a30 <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH){
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	4a0f      	ldr	r2, [pc, #60]	@ (8001a5c <GPIO_PeriClockControl+0x19c>)
 8001a20:	4293      	cmp	r3, r2
 8001a22:	d105      	bne.n	8001a30 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8001a24:	4b06      	ldr	r3, [pc, #24]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001a26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a28:	4a05      	ldr	r2, [pc, #20]	@ (8001a40 <GPIO_PeriClockControl+0x180>)
 8001a2a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8001a2e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001a30:	bf00      	nop
 8001a32:	370c      	adds	r7, #12
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bc80      	pop	{r7}
 8001a38:	4770      	bx	lr
 8001a3a:	bf00      	nop
 8001a3c:	40020000 	.word	0x40020000
 8001a40:	40023800 	.word	0x40023800
 8001a44:	40020400 	.word	0x40020400
 8001a48:	40020800 	.word	0x40020800
 8001a4c:	40020c00 	.word	0x40020c00
 8001a50:	40021000 	.word	0x40021000
 8001a54:	40021400 	.word	0x40021400
 8001a58:	40021800 	.word	0x40021800
 8001a5c:	40021c00 	.word	0x40021c00

08001a60 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8001a60:	b580      	push	{r7, lr}
 8001a62:	b086      	sub	sp, #24
 8001a64:	af00      	add	r7, sp, #0
 8001a66:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8001a68:	2300      	movs	r3, #0
 8001a6a:	617b      	str	r3, [r7, #20]

	// Enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	2101      	movs	r1, #1
 8001a72:	4618      	mov	r0, r3
 8001a74:	f7ff ff24 	bl	80018c0 <GPIO_PeriClockControl>

	// 1. Mode Config
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	795b      	ldrb	r3, [r3, #5]
 8001a7c:	2b03      	cmp	r3, #3
 8001a7e:	d81f      	bhi.n	8001ac0 <GPIO_Init+0x60>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	795b      	ldrb	r3, [r3, #5]
 8001a84:	461a      	mov	r2, r3
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	791b      	ldrb	r3, [r3, #4]
 8001a8a:	005b      	lsls	r3, r3, #1
 8001a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a90:	617b      	str	r3, [r7, #20]

		// First, Clear the two bits that we want to use 11=0x3
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	681a      	ldr	r2, [r3, #0]
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	791b      	ldrb	r3, [r3, #4]
 8001a9c:	4619      	mov	r1, r3
 8001a9e:	2303      	movs	r3, #3
 8001aa0:	408b      	lsls	r3, r1
 8001aa2:	43db      	mvns	r3, r3
 8001aa4:	4619      	mov	r1, r3
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	400a      	ands	r2, r1
 8001aac:	601a      	str	r2, [r3, #0]
		// Load the temp value on the current reguster
		pGPIOHandle->pGPIOx->MODER |= temp;
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	6819      	ldr	r1, [r3, #0]
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	697a      	ldr	r2, [r7, #20]
 8001aba:	430a      	orrs	r2, r1
 8001abc:	601a      	str	r2, [r3, #0]
 8001abe:	e0c2      	b.n	8001c46 <GPIO_Init+0x1e6>
	}
	else{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	795b      	ldrb	r3, [r3, #5]
 8001ac4:	2b04      	cmp	r3, #4
 8001ac6:	d117      	bne.n	8001af8 <GPIO_Init+0x98>
			// 1. Config the register as Falling Trigger (FTSR)
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001ac8:	4b47      	ldr	r3, [pc, #284]	@ (8001be8 <GPIO_Init+0x188>)
 8001aca:	68db      	ldr	r3, [r3, #12]
 8001acc:	687a      	ldr	r2, [r7, #4]
 8001ace:	7912      	ldrb	r2, [r2, #4]
 8001ad0:	4611      	mov	r1, r2
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	408a      	lsls	r2, r1
 8001ad6:	4611      	mov	r1, r2
 8001ad8:	4a43      	ldr	r2, [pc, #268]	@ (8001be8 <GPIO_Init+0x188>)
 8001ada:	430b      	orrs	r3, r1
 8001adc:	60d3      	str	r3, [r2, #12]
			// Clear RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001ade:	4b42      	ldr	r3, [pc, #264]	@ (8001be8 <GPIO_Init+0x188>)
 8001ae0:	689b      	ldr	r3, [r3, #8]
 8001ae2:	687a      	ldr	r2, [r7, #4]
 8001ae4:	7912      	ldrb	r2, [r2, #4]
 8001ae6:	4611      	mov	r1, r2
 8001ae8:	2201      	movs	r2, #1
 8001aea:	408a      	lsls	r2, r1
 8001aec:	43d2      	mvns	r2, r2
 8001aee:	4611      	mov	r1, r2
 8001af0:	4a3d      	ldr	r2, [pc, #244]	@ (8001be8 <GPIO_Init+0x188>)
 8001af2:	400b      	ands	r3, r1
 8001af4:	6093      	str	r3, [r2, #8]
 8001af6:	e035      	b.n	8001b64 <GPIO_Init+0x104>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	795b      	ldrb	r3, [r3, #5]
 8001afc:	2b05      	cmp	r3, #5
 8001afe:	d117      	bne.n	8001b30 <GPIO_Init+0xd0>
			// 1. Config the register as Rising Trigger (RTSR)
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001b00:	4b39      	ldr	r3, [pc, #228]	@ (8001be8 <GPIO_Init+0x188>)
 8001b02:	689b      	ldr	r3, [r3, #8]
 8001b04:	687a      	ldr	r2, [r7, #4]
 8001b06:	7912      	ldrb	r2, [r2, #4]
 8001b08:	4611      	mov	r1, r2
 8001b0a:	2201      	movs	r2, #1
 8001b0c:	408a      	lsls	r2, r1
 8001b0e:	4611      	mov	r1, r2
 8001b10:	4a35      	ldr	r2, [pc, #212]	@ (8001be8 <GPIO_Init+0x188>)
 8001b12:	430b      	orrs	r3, r1
 8001b14:	6093      	str	r3, [r2, #8]
			// Clear FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001b16:	4b34      	ldr	r3, [pc, #208]	@ (8001be8 <GPIO_Init+0x188>)
 8001b18:	68db      	ldr	r3, [r3, #12]
 8001b1a:	687a      	ldr	r2, [r7, #4]
 8001b1c:	7912      	ldrb	r2, [r2, #4]
 8001b1e:	4611      	mov	r1, r2
 8001b20:	2201      	movs	r2, #1
 8001b22:	408a      	lsls	r2, r1
 8001b24:	43d2      	mvns	r2, r2
 8001b26:	4611      	mov	r1, r2
 8001b28:	4a2f      	ldr	r2, [pc, #188]	@ (8001be8 <GPIO_Init+0x188>)
 8001b2a:	400b      	ands	r3, r1
 8001b2c:	60d3      	str	r3, [r2, #12]
 8001b2e:	e019      	b.n	8001b64 <GPIO_Init+0x104>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	795b      	ldrb	r3, [r3, #5]
 8001b34:	2b04      	cmp	r3, #4
 8001b36:	d115      	bne.n	8001b64 <GPIO_Init+0x104>
			// 1. Config the register as Rising Falling Trigger (RFTSR)
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001b38:	4b2b      	ldr	r3, [pc, #172]	@ (8001be8 <GPIO_Init+0x188>)
 8001b3a:	689b      	ldr	r3, [r3, #8]
 8001b3c:	687a      	ldr	r2, [r7, #4]
 8001b3e:	7912      	ldrb	r2, [r2, #4]
 8001b40:	4611      	mov	r1, r2
 8001b42:	2201      	movs	r2, #1
 8001b44:	408a      	lsls	r2, r1
 8001b46:	4611      	mov	r1, r2
 8001b48:	4a27      	ldr	r2, [pc, #156]	@ (8001be8 <GPIO_Init+0x188>)
 8001b4a:	430b      	orrs	r3, r1
 8001b4c:	6093      	str	r3, [r2, #8]
			// Clear RFTSR bit
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001b4e:	4b26      	ldr	r3, [pc, #152]	@ (8001be8 <GPIO_Init+0x188>)
 8001b50:	68db      	ldr	r3, [r3, #12]
 8001b52:	687a      	ldr	r2, [r7, #4]
 8001b54:	7912      	ldrb	r2, [r2, #4]
 8001b56:	4611      	mov	r1, r2
 8001b58:	2201      	movs	r2, #1
 8001b5a:	408a      	lsls	r2, r1
 8001b5c:	4611      	mov	r1, r2
 8001b5e:	4a22      	ldr	r2, [pc, #136]	@ (8001be8 <GPIO_Init+0x188>)
 8001b60:	430b      	orrs	r3, r1
 8001b62:	60d3      	str	r3, [r2, #12]
		}

		// 2. Config the GPIO Port in the SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	791b      	ldrb	r3, [r3, #4]
 8001b68:	089b      	lsrs	r3, r3, #2
 8001b6a:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	791b      	ldrb	r3, [r3, #4]
 8001b70:	f003 0303 	and.w	r3, r3, #3
 8001b74:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	4a1c      	ldr	r2, [pc, #112]	@ (8001bec <GPIO_Init+0x18c>)
 8001b7c:	4293      	cmp	r3, r2
 8001b7e:	d045      	beq.n	8001c0c <GPIO_Init+0x1ac>
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	4a1a      	ldr	r2, [pc, #104]	@ (8001bf0 <GPIO_Init+0x190>)
 8001b86:	4293      	cmp	r3, r2
 8001b88:	d02b      	beq.n	8001be2 <GPIO_Init+0x182>
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	4a19      	ldr	r2, [pc, #100]	@ (8001bf4 <GPIO_Init+0x194>)
 8001b90:	4293      	cmp	r3, r2
 8001b92:	d024      	beq.n	8001bde <GPIO_Init+0x17e>
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	4a17      	ldr	r2, [pc, #92]	@ (8001bf8 <GPIO_Init+0x198>)
 8001b9a:	4293      	cmp	r3, r2
 8001b9c:	d01d      	beq.n	8001bda <GPIO_Init+0x17a>
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	681b      	ldr	r3, [r3, #0]
 8001ba2:	4a16      	ldr	r2, [pc, #88]	@ (8001bfc <GPIO_Init+0x19c>)
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d016      	beq.n	8001bd6 <GPIO_Init+0x176>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a14      	ldr	r2, [pc, #80]	@ (8001c00 <GPIO_Init+0x1a0>)
 8001bae:	4293      	cmp	r3, r2
 8001bb0:	d00f      	beq.n	8001bd2 <GPIO_Init+0x172>
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	4a13      	ldr	r2, [pc, #76]	@ (8001c04 <GPIO_Init+0x1a4>)
 8001bb8:	4293      	cmp	r3, r2
 8001bba:	d008      	beq.n	8001bce <GPIO_Init+0x16e>
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a11      	ldr	r2, [pc, #68]	@ (8001c08 <GPIO_Init+0x1a8>)
 8001bc2:	4293      	cmp	r3, r2
 8001bc4:	d101      	bne.n	8001bca <GPIO_Init+0x16a>
 8001bc6:	2307      	movs	r3, #7
 8001bc8:	e021      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bca:	2300      	movs	r3, #0
 8001bcc:	e01f      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bce:	2306      	movs	r3, #6
 8001bd0:	e01d      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bd2:	2305      	movs	r3, #5
 8001bd4:	e01b      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bd6:	2304      	movs	r3, #4
 8001bd8:	e019      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bda:	2303      	movs	r3, #3
 8001bdc:	e017      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001bde:	2302      	movs	r3, #2
 8001be0:	e015      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001be2:	2301      	movs	r3, #1
 8001be4:	e013      	b.n	8001c0e <GPIO_Init+0x1ae>
 8001be6:	bf00      	nop
 8001be8:	40013c00 	.word	0x40013c00
 8001bec:	40020000 	.word	0x40020000
 8001bf0:	40020400 	.word	0x40020400
 8001bf4:	40020800 	.word	0x40020800
 8001bf8:	40020c00 	.word	0x40020c00
 8001bfc:	40021000 	.word	0x40021000
 8001c00:	40021400 	.word	0x40021400
 8001c04:	40021800 	.word	0x40021800
 8001c08:	40021c00 	.word	0x40021c00
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 8001c10:	4b5c      	ldr	r3, [pc, #368]	@ (8001d84 <GPIO_Init+0x324>)
 8001c12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c14:	4a5b      	ldr	r2, [pc, #364]	@ (8001d84 <GPIO_Init+0x324>)
 8001c16:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001c1a:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 8001c1c:	7c7a      	ldrb	r2, [r7, #17]
 8001c1e:	7cbb      	ldrb	r3, [r7, #18]
 8001c20:	009b      	lsls	r3, r3, #2
 8001c22:	fa02 f103 	lsl.w	r1, r2, r3
 8001c26:	4a58      	ldr	r2, [pc, #352]	@ (8001d88 <GPIO_Init+0x328>)
 8001c28:	7cfb      	ldrb	r3, [r7, #19]
 8001c2a:	3302      	adds	r3, #2
 8001c2c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. Enable the EXTI interrupt using IMR (Interrupt Mask Register)
		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001c30:	4b56      	ldr	r3, [pc, #344]	@ (8001d8c <GPIO_Init+0x32c>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	687a      	ldr	r2, [r7, #4]
 8001c36:	7912      	ldrb	r2, [r2, #4]
 8001c38:	4611      	mov	r1, r2
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	408a      	lsls	r2, r1
 8001c3e:	4611      	mov	r1, r2
 8001c40:	4a52      	ldr	r2, [pc, #328]	@ (8001d8c <GPIO_Init+0x32c>)
 8001c42:	430b      	orrs	r3, r1
 8001c44:	6013      	str	r3, [r2, #0]
	}
	// 2. Config the speed
	temp = 0;
 8001c46:	2300      	movs	r3, #0
 8001c48:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	799b      	ldrb	r3, [r3, #6]
 8001c4e:	461a      	mov	r2, r3
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	791b      	ldrb	r3, [r3, #4]
 8001c54:	005b      	lsls	r3, r3, #1
 8001c56:	fa02 f303 	lsl.w	r3, r2, r3
 8001c5a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	689a      	ldr	r2, [r3, #8]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	791b      	ldrb	r3, [r3, #4]
 8001c66:	4619      	mov	r1, r3
 8001c68:	2303      	movs	r3, #3
 8001c6a:	408b      	lsls	r3, r1
 8001c6c:	43db      	mvns	r3, r3
 8001c6e:	4619      	mov	r1, r3
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	400a      	ands	r2, r1
 8001c76:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	6899      	ldr	r1, [r3, #8]
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	697a      	ldr	r2, [r7, #20]
 8001c84:	430a      	orrs	r2, r1
 8001c86:	609a      	str	r2, [r3, #8]
	// 3. Config Pull up-Pull down setting
	temp = 0;
 8001c88:	2300      	movs	r3, #0
 8001c8a:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	79db      	ldrb	r3, [r3, #7]
 8001c90:	461a      	mov	r2, r3
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	791b      	ldrb	r3, [r3, #4]
 8001c96:	005b      	lsls	r3, r3, #1
 8001c98:	fa02 f303 	lsl.w	r3, r2, r3
 8001c9c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	68da      	ldr	r2, [r3, #12]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	791b      	ldrb	r3, [r3, #4]
 8001ca8:	4619      	mov	r1, r3
 8001caa:	2303      	movs	r3, #3
 8001cac:	408b      	lsls	r3, r1
 8001cae:	43db      	mvns	r3, r3
 8001cb0:	4619      	mov	r1, r3
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	400a      	ands	r2, r1
 8001cb8:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	68d9      	ldr	r1, [r3, #12]
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	697a      	ldr	r2, [r7, #20]
 8001cc6:	430a      	orrs	r2, r1
 8001cc8:	60da      	str	r2, [r3, #12]
	// 4. Config the Output type (Optype)
	temp = 0;
 8001cca:	2300      	movs	r3, #0
 8001ccc:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	7a1b      	ldrb	r3, [r3, #8]
 8001cd2:	461a      	mov	r2, r3
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	791b      	ldrb	r3, [r3, #4]
 8001cd8:	fa02 f303 	lsl.w	r3, r2, r3
 8001cdc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	685a      	ldr	r2, [r3, #4]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	791b      	ldrb	r3, [r3, #4]
 8001ce8:	4619      	mov	r1, r3
 8001cea:	2301      	movs	r3, #1
 8001cec:	408b      	lsls	r3, r1
 8001cee:	43db      	mvns	r3, r3
 8001cf0:	4619      	mov	r1, r3
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	400a      	ands	r2, r1
 8001cf8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	6859      	ldr	r1, [r3, #4]
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	697a      	ldr	r2, [r7, #20]
 8001d06:	430a      	orrs	r2, r1
 8001d08:	605a      	str	r2, [r3, #4]
	// 5. Config the alter function
	temp = 0;
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	795b      	ldrb	r3, [r3, #5]
 8001d12:	2b02      	cmp	r3, #2
 8001d14:	d131      	bne.n	8001d7a <GPIO_Init+0x31a>
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	791b      	ldrb	r3, [r3, #4]
 8001d1a:	08db      	lsrs	r3, r3, #3
 8001d1c:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	791b      	ldrb	r3, [r3, #4]
 8001d22:	f003 0307 	and.w	r3, r3, #7
 8001d26:	73fb      	strb	r3, [r7, #15]

		//temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4* temp2));
		//pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF<<(4* temp2));
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	7c3a      	ldrb	r2, [r7, #16]
 8001d2e:	3208      	adds	r2, #8
 8001d30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001d34:	7bfb      	ldrb	r3, [r7, #15]
 8001d36:	009b      	lsls	r3, r3, #2
 8001d38:	220f      	movs	r2, #15
 8001d3a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d3e:	43db      	mvns	r3, r3
 8001d40:	4618      	mov	r0, r3
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	7c3a      	ldrb	r2, [r7, #16]
 8001d48:	4001      	ands	r1, r0
 8001d4a:	3208      	adds	r2, #8
 8001d4c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4* temp2));
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	7c3a      	ldrb	r2, [r7, #16]
 8001d56:	3208      	adds	r2, #8
 8001d58:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	7a5b      	ldrb	r3, [r3, #9]
 8001d60:	461a      	mov	r2, r3
 8001d62:	7bfb      	ldrb	r3, [r7, #15]
 8001d64:	009b      	lsls	r3, r3, #2
 8001d66:	fa02 f303 	lsl.w	r3, r2, r3
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	7c3a      	ldrb	r2, [r7, #16]
 8001d72:	4301      	orrs	r1, r0
 8001d74:	3208      	adds	r2, #8
 8001d76:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}



}
 8001d7a:	bf00      	nop
 8001d7c:	3718      	adds	r7, #24
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}
 8001d82:	bf00      	nop
 8001d84:	40023800 	.word	0x40023800
 8001d88:	40013800 	.word	0x40013800
 8001d8c:	40013c00 	.word	0x40013c00

08001d90 <RCC_GetPCLCK1Value>:
uint16_t AHB_PreScaler[8] = {2,4,8,16,64,128,256,512};
uint16_t APB1_PreScaler[4] = {2,4,8,16};

uint16_t APB2_PreScaler[4] = {2,4,8,16};

uint32_t RCC_GetPCLCK1Value(void){
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b084      	sub	sp, #16
 8001d94:	af00      	add	r7, sp, #0
	uint32_t pclck1, SystemClk;
	uint8_t clksrc, temp, ahbp, apb1p;

	clksrc = (RCC->CFGR <<2) & 0x3;
 8001d96:	4b25      	ldr	r3, [pc, #148]	@ (8001e2c <RCC_GetPCLCK1Value+0x9c>)
 8001d98:	689b      	ldr	r3, [r3, #8]
 8001d9a:	b2db      	uxtb	r3, r3
 8001d9c:	009b      	lsls	r3, r3, #2
 8001d9e:	b2db      	uxtb	r3, r3
 8001da0:	f003 0303 	and.w	r3, r3, #3
 8001da4:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0){
 8001da6:	7a7b      	ldrb	r3, [r7, #9]
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d102      	bne.n	8001db2 <RCC_GetPCLCK1Value+0x22>
		SystemClk = 16000000;
 8001dac:	4b20      	ldr	r3, [pc, #128]	@ (8001e30 <RCC_GetPCLCK1Value+0xa0>)
 8001dae:	60fb      	str	r3, [r7, #12]
 8001db0:	e00b      	b.n	8001dca <RCC_GetPCLCK1Value+0x3a>
	}else if(clksrc == 1){
 8001db2:	7a7b      	ldrb	r3, [r7, #9]
 8001db4:	2b01      	cmp	r3, #1
 8001db6:	d102      	bne.n	8001dbe <RCC_GetPCLCK1Value+0x2e>
		SystemClk = 8000000;
 8001db8:	4b1e      	ldr	r3, [pc, #120]	@ (8001e34 <RCC_GetPCLCK1Value+0xa4>)
 8001dba:	60fb      	str	r3, [r7, #12]
 8001dbc:	e005      	b.n	8001dca <RCC_GetPCLCK1Value+0x3a>
	}else if(clksrc == 2){
 8001dbe:	7a7b      	ldrb	r3, [r7, #9]
 8001dc0:	2b02      	cmp	r3, #2
 8001dc2:	d102      	bne.n	8001dca <RCC_GetPCLCK1Value+0x3a>
		SystemClk = RCC_GetPLLOutputClock();
 8001dc4:	f000 f894 	bl	8001ef0 <RCC_GetPLLOutputClock>
 8001dc8:	60f8      	str	r0, [r7, #12]
	}

	//AHB1
	temp = (RCC->CFGR << 4) & 0xF;
 8001dca:	4b18      	ldr	r3, [pc, #96]	@ (8001e2c <RCC_GetPCLCK1Value+0x9c>)
 8001dcc:	689b      	ldr	r3, [r3, #8]
 8001dce:	b2db      	uxtb	r3, r3
 8001dd0:	011b      	lsls	r3, r3, #4
 8001dd2:	b2db      	uxtb	r3, r3
 8001dd4:	f003 030f 	and.w	r3, r3, #15
 8001dd8:	723b      	strb	r3, [r7, #8]
	if(temp < 8){
 8001dda:	7a3b      	ldrb	r3, [r7, #8]
 8001ddc:	2b07      	cmp	r3, #7
 8001dde:	d802      	bhi.n	8001de6 <RCC_GetPCLCK1Value+0x56>
		ahbp = 1;
 8001de0:	2301      	movs	r3, #1
 8001de2:	72fb      	strb	r3, [r7, #11]
 8001de4:	e005      	b.n	8001df2 <RCC_GetPCLCK1Value+0x62>
	}else{
		ahbp = AHB_PreScaler[temp-8];
 8001de6:	7a3b      	ldrb	r3, [r7, #8]
 8001de8:	3b08      	subs	r3, #8
 8001dea:	4a13      	ldr	r2, [pc, #76]	@ (8001e38 <RCC_GetPCLCK1Value+0xa8>)
 8001dec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001df0:	72fb      	strb	r3, [r7, #11]
	}
	//APB1
	temp = (RCC->CFGR << 10) & 0x7;
 8001df2:	4b0e      	ldr	r3, [pc, #56]	@ (8001e2c <RCC_GetPCLCK1Value+0x9c>)
 8001df4:	689b      	ldr	r3, [r3, #8]
 8001df6:	2300      	movs	r3, #0
 8001df8:	723b      	strb	r3, [r7, #8]
	if(temp < 4){
 8001dfa:	7a3b      	ldrb	r3, [r7, #8]
 8001dfc:	2b03      	cmp	r3, #3
 8001dfe:	d802      	bhi.n	8001e06 <RCC_GetPCLCK1Value+0x76>
		apb1p = 1;
 8001e00:	2301      	movs	r3, #1
 8001e02:	72bb      	strb	r3, [r7, #10]
 8001e04:	e005      	b.n	8001e12 <RCC_GetPCLCK1Value+0x82>
	}else{
		apb1p = APB1_PreScaler[temp-4];
 8001e06:	7a3b      	ldrb	r3, [r7, #8]
 8001e08:	3b04      	subs	r3, #4
 8001e0a:	4a0c      	ldr	r2, [pc, #48]	@ (8001e3c <RCC_GetPCLCK1Value+0xac>)
 8001e0c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001e10:	72bb      	strb	r3, [r7, #10]
	}

	pclck1 = (SystemClk/ahbp)/apb1p;
 8001e12:	7afb      	ldrb	r3, [r7, #11]
 8001e14:	68fa      	ldr	r2, [r7, #12]
 8001e16:	fbb2 f2f3 	udiv	r2, r2, r3
 8001e1a:	7abb      	ldrb	r3, [r7, #10]
 8001e1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e20:	607b      	str	r3, [r7, #4]

	return pclck1;
 8001e22:	687b      	ldr	r3, [r7, #4]
}
 8001e24:	4618      	mov	r0, r3
 8001e26:	3710      	adds	r7, #16
 8001e28:	46bd      	mov	sp, r7
 8001e2a:	bd80      	pop	{r7, pc}
 8001e2c:	40023800 	.word	0x40023800
 8001e30:	00f42400 	.word	0x00f42400
 8001e34:	007a1200 	.word	0x007a1200
 8001e38:	20000000 	.word	0x20000000
 8001e3c:	20000010 	.word	0x20000010

08001e40 <RCC_GetPCLCK2Value>:


uint32_t RCC_GetPCLCK2Value(void){
 8001e40:	b580      	push	{r7, lr}
 8001e42:	b084      	sub	sp, #16
 8001e44:	af00      	add	r7, sp, #0
	uint32_t pclck1, SystemClk;
	uint8_t clksrc, temp, ahbp, apb2p;

	clksrc = (RCC->CFGR <<2) & 0x3;
 8001e46:	4b25      	ldr	r3, [pc, #148]	@ (8001edc <RCC_GetPCLCK2Value+0x9c>)
 8001e48:	689b      	ldr	r3, [r3, #8]
 8001e4a:	b2db      	uxtb	r3, r3
 8001e4c:	009b      	lsls	r3, r3, #2
 8001e4e:	b2db      	uxtb	r3, r3
 8001e50:	f003 0303 	and.w	r3, r3, #3
 8001e54:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0){
 8001e56:	7a7b      	ldrb	r3, [r7, #9]
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d102      	bne.n	8001e62 <RCC_GetPCLCK2Value+0x22>
		SystemClk = 16000000;
 8001e5c:	4b20      	ldr	r3, [pc, #128]	@ (8001ee0 <RCC_GetPCLCK2Value+0xa0>)
 8001e5e:	60fb      	str	r3, [r7, #12]
 8001e60:	e00b      	b.n	8001e7a <RCC_GetPCLCK2Value+0x3a>
	}else if(clksrc == 1){
 8001e62:	7a7b      	ldrb	r3, [r7, #9]
 8001e64:	2b01      	cmp	r3, #1
 8001e66:	d102      	bne.n	8001e6e <RCC_GetPCLCK2Value+0x2e>
		SystemClk = 8000000;
 8001e68:	4b1e      	ldr	r3, [pc, #120]	@ (8001ee4 <RCC_GetPCLCK2Value+0xa4>)
 8001e6a:	60fb      	str	r3, [r7, #12]
 8001e6c:	e005      	b.n	8001e7a <RCC_GetPCLCK2Value+0x3a>
	}else if(clksrc == 2){
 8001e6e:	7a7b      	ldrb	r3, [r7, #9]
 8001e70:	2b02      	cmp	r3, #2
 8001e72:	d102      	bne.n	8001e7a <RCC_GetPCLCK2Value+0x3a>
		SystemClk = RCC_GetPLLOutputClock();
 8001e74:	f000 f83c 	bl	8001ef0 <RCC_GetPLLOutputClock>
 8001e78:	60f8      	str	r0, [r7, #12]
	}

	//AHB1
	temp = (RCC->CFGR << 4) & 0xF;
 8001e7a:	4b18      	ldr	r3, [pc, #96]	@ (8001edc <RCC_GetPCLCK2Value+0x9c>)
 8001e7c:	689b      	ldr	r3, [r3, #8]
 8001e7e:	b2db      	uxtb	r3, r3
 8001e80:	011b      	lsls	r3, r3, #4
 8001e82:	b2db      	uxtb	r3, r3
 8001e84:	f003 030f 	and.w	r3, r3, #15
 8001e88:	723b      	strb	r3, [r7, #8]
	if(temp < 8){
 8001e8a:	7a3b      	ldrb	r3, [r7, #8]
 8001e8c:	2b07      	cmp	r3, #7
 8001e8e:	d802      	bhi.n	8001e96 <RCC_GetPCLCK2Value+0x56>
		ahbp = 1;
 8001e90:	2301      	movs	r3, #1
 8001e92:	72fb      	strb	r3, [r7, #11]
 8001e94:	e005      	b.n	8001ea2 <RCC_GetPCLCK2Value+0x62>
	}else{
		ahbp = AHB_PreScaler[temp-8];
 8001e96:	7a3b      	ldrb	r3, [r7, #8]
 8001e98:	3b08      	subs	r3, #8
 8001e9a:	4a13      	ldr	r2, [pc, #76]	@ (8001ee8 <RCC_GetPCLCK2Value+0xa8>)
 8001e9c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001ea0:	72fb      	strb	r3, [r7, #11]
	}
	//APB2
	temp = (RCC->CFGR << 13) & 0x7;
 8001ea2:	4b0e      	ldr	r3, [pc, #56]	@ (8001edc <RCC_GetPCLCK2Value+0x9c>)
 8001ea4:	689b      	ldr	r3, [r3, #8]
 8001ea6:	2300      	movs	r3, #0
 8001ea8:	723b      	strb	r3, [r7, #8]
	if(temp < 4){
 8001eaa:	7a3b      	ldrb	r3, [r7, #8]
 8001eac:	2b03      	cmp	r3, #3
 8001eae:	d802      	bhi.n	8001eb6 <RCC_GetPCLCK2Value+0x76>
		apb2p = 1;
 8001eb0:	2301      	movs	r3, #1
 8001eb2:	72bb      	strb	r3, [r7, #10]
 8001eb4:	e005      	b.n	8001ec2 <RCC_GetPCLCK2Value+0x82>
	}else{
		apb2p = APB2_PreScaler[temp-4];
 8001eb6:	7a3b      	ldrb	r3, [r7, #8]
 8001eb8:	3b04      	subs	r3, #4
 8001eba:	4a0c      	ldr	r2, [pc, #48]	@ (8001eec <RCC_GetPCLCK2Value+0xac>)
 8001ebc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001ec0:	72bb      	strb	r3, [r7, #10]
	}

	pclck1 = (SystemClk/ahbp)/apb2p;
 8001ec2:	7afb      	ldrb	r3, [r7, #11]
 8001ec4:	68fa      	ldr	r2, [r7, #12]
 8001ec6:	fbb2 f2f3 	udiv	r2, r2, r3
 8001eca:	7abb      	ldrb	r3, [r7, #10]
 8001ecc:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ed0:	607b      	str	r3, [r7, #4]

	return pclck1;
 8001ed2:	687b      	ldr	r3, [r7, #4]
}
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	3710      	adds	r7, #16
 8001ed8:	46bd      	mov	sp, r7
 8001eda:	bd80      	pop	{r7, pc}
 8001edc:	40023800 	.word	0x40023800
 8001ee0:	00f42400 	.word	0x00f42400
 8001ee4:	007a1200 	.word	0x007a1200
 8001ee8:	20000000 	.word	0x20000000
 8001eec:	20000018 	.word	0x20000018

08001ef0 <RCC_GetPLLOutputClock>:

uint32_t RCC_GetPLLOutputClock(){
 8001ef0:	b480      	push	{r7}
 8001ef2:	af00      	add	r7, sp, #0

	return 0;
 8001ef4:	2300      	movs	r3, #0
}
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	bc80      	pop	{r7}
 8001efc:	4770      	bx	lr
	...

08001f00 <USART_SetBaudRate>:

#include <stm32f446xx_usart_driver.h>


void USART_SetBaudRate(USART_RegDef_t *pUSARTx, uint32_t BaudRate)
{
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b088      	sub	sp, #32
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	6078      	str	r0, [r7, #4]
 8001f08:	6039      	str	r1, [r7, #0]
	uint32_t usartdiv;

	//variables to hold Mantissa and Fraction values
	uint32_t M_part,F_part;

  uint32_t tempreg=0;
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	613b      	str	r3, [r7, #16]

  //Get the value of APB bus clock in to the variable PCLKx
  if(pUSARTx == USART1 || pUSARTx == USART6)
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	4a31      	ldr	r2, [pc, #196]	@ (8001fd8 <USART_SetBaudRate+0xd8>)
 8001f12:	4293      	cmp	r3, r2
 8001f14:	d003      	beq.n	8001f1e <USART_SetBaudRate+0x1e>
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	4a30      	ldr	r2, [pc, #192]	@ (8001fdc <USART_SetBaudRate+0xdc>)
 8001f1a:	4293      	cmp	r3, r2
 8001f1c:	d103      	bne.n	8001f26 <USART_SetBaudRate+0x26>
  {
	   //USART1 and USART6 are hanging on APB2 bus
	   PCLKx = RCC_GetPCLCK2Value();
 8001f1e:	f7ff ff8f 	bl	8001e40 <RCC_GetPCLCK2Value>
 8001f22:	61f8      	str	r0, [r7, #28]
 8001f24:	e002      	b.n	8001f2c <USART_SetBaudRate+0x2c>
  }else
  {
	   PCLKx = RCC_GetPCLCK1Value();
 8001f26:	f7ff ff33 	bl	8001d90 <RCC_GetPCLCK1Value>
 8001f2a:	61f8      	str	r0, [r7, #28]

  }

  //Check for OVER8 configuration bit
  if(pUSARTx->CR1 & (1 << USART_CR1_OVER8))
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	68db      	ldr	r3, [r3, #12]
 8001f30:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	d00b      	beq.n	8001f50 <USART_SetBaudRate+0x50>
  {
	   //OVER8 = 1 , over sampling by 8
	   usartdiv = ((25 * PCLKx) / (2 *BaudRate));
 8001f38:	69fa      	ldr	r2, [r7, #28]
 8001f3a:	4613      	mov	r3, r2
 8001f3c:	009b      	lsls	r3, r3, #2
 8001f3e:	4413      	add	r3, r2
 8001f40:	009a      	lsls	r2, r3, #2
 8001f42:	441a      	add	r2, r3
 8001f44:	683b      	ldr	r3, [r7, #0]
 8001f46:	005b      	lsls	r3, r3, #1
 8001f48:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f4c:	61bb      	str	r3, [r7, #24]
 8001f4e:	e00a      	b.n	8001f66 <USART_SetBaudRate+0x66>
  }else
  {
	   //over sampling by 16
	   usartdiv = ((25 * PCLKx) / (4 *BaudRate));
 8001f50:	69fa      	ldr	r2, [r7, #28]
 8001f52:	4613      	mov	r3, r2
 8001f54:	009b      	lsls	r3, r3, #2
 8001f56:	4413      	add	r3, r2
 8001f58:	009a      	lsls	r2, r3, #2
 8001f5a:	441a      	add	r2, r3
 8001f5c:	683b      	ldr	r3, [r7, #0]
 8001f5e:	009b      	lsls	r3, r3, #2
 8001f60:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f64:	61bb      	str	r3, [r7, #24]
  }

  //Calculate the Mantissa part
  M_part = usartdiv/100;
 8001f66:	69bb      	ldr	r3, [r7, #24]
 8001f68:	4a1d      	ldr	r2, [pc, #116]	@ (8001fe0 <USART_SetBaudRate+0xe0>)
 8001f6a:	fba2 2303 	umull	r2, r3, r2, r3
 8001f6e:	095b      	lsrs	r3, r3, #5
 8001f70:	60fb      	str	r3, [r7, #12]

  //Place the Mantissa part in appropriate bit position . refer USART_BRR
  tempreg |= M_part << 4;
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	011b      	lsls	r3, r3, #4
 8001f76:	693a      	ldr	r2, [r7, #16]
 8001f78:	4313      	orrs	r3, r2
 8001f7a:	613b      	str	r3, [r7, #16]

  //Extract the fraction part
  F_part = (usartdiv - (M_part * 100));
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	2264      	movs	r2, #100	@ 0x64
 8001f80:	fb02 f303 	mul.w	r3, r2, r3
 8001f84:	69ba      	ldr	r2, [r7, #24]
 8001f86:	1ad3      	subs	r3, r2, r3
 8001f88:	617b      	str	r3, [r7, #20]

  //Calculate the final fractional
  if(pUSARTx->CR1 & ( 1 << USART_CR1_OVER8))
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	68db      	ldr	r3, [r3, #12]
 8001f8e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d00a      	beq.n	8001fac <USART_SetBaudRate+0xac>
   {
	  //OVER8 = 1 , over sampling by 8
	  F_part = ((( F_part * 8)+ 50) / 100)& ((uint8_t)0x07);
 8001f96:	697b      	ldr	r3, [r7, #20]
 8001f98:	00db      	lsls	r3, r3, #3
 8001f9a:	3332      	adds	r3, #50	@ 0x32
 8001f9c:	4a10      	ldr	r2, [pc, #64]	@ (8001fe0 <USART_SetBaudRate+0xe0>)
 8001f9e:	fba2 2303 	umull	r2, r3, r2, r3
 8001fa2:	095b      	lsrs	r3, r3, #5
 8001fa4:	f003 0307 	and.w	r3, r3, #7
 8001fa8:	617b      	str	r3, [r7, #20]
 8001faa:	e009      	b.n	8001fc0 <USART_SetBaudRate+0xc0>

   }else
   {
	   //over sampling by 16
	   F_part = ((( F_part * 16)+ 50) / 100) & ((uint8_t)0x0F);
 8001fac:	697b      	ldr	r3, [r7, #20]
 8001fae:	011b      	lsls	r3, r3, #4
 8001fb0:	3332      	adds	r3, #50	@ 0x32
 8001fb2:	4a0b      	ldr	r2, [pc, #44]	@ (8001fe0 <USART_SetBaudRate+0xe0>)
 8001fb4:	fba2 2303 	umull	r2, r3, r2, r3
 8001fb8:	095b      	lsrs	r3, r3, #5
 8001fba:	f003 030f 	and.w	r3, r3, #15
 8001fbe:	617b      	str	r3, [r7, #20]

   }

  //Place the fractional part in appropriate bit position . refer USART_BRR
  tempreg |= F_part;
 8001fc0:	693a      	ldr	r2, [r7, #16]
 8001fc2:	697b      	ldr	r3, [r7, #20]
 8001fc4:	4313      	orrs	r3, r2
 8001fc6:	613b      	str	r3, [r7, #16]

  //copy the value of tempreg in to BRR register
  pUSARTx->BRR = tempreg;
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	693a      	ldr	r2, [r7, #16]
 8001fcc:	609a      	str	r2, [r3, #8]
}
 8001fce:	bf00      	nop
 8001fd0:	3720      	adds	r7, #32
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bd80      	pop	{r7, pc}
 8001fd6:	bf00      	nop
 8001fd8:	40011000 	.word	0x40011000
 8001fdc:	40011400 	.word	0x40011400
 8001fe0:	51eb851f 	.word	0x51eb851f

08001fe4 <USART_Init>:


void USART_Init(USART_Handle_t *pUSARTHandle)
{
 8001fe4:	b580      	push	{r7, lr}
 8001fe6:	b084      	sub	sp, #16
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]

	//Temporary variable
	uint32_t tempreg=0;
 8001fec:	2300      	movs	r3, #0
 8001fee:	60fb      	str	r3, [r7, #12]

/******************************** Configuration of CR1******************************************/

	//Implement the code to enable the Clock for given USART peripheral
	 USART_PeriClockControl(pUSARTHandle->pUSARTx,ENABLE);
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	2101      	movs	r1, #1
 8001ff6:	4618      	mov	r0, r3
 8001ff8:	f000 f890 	bl	800211c <USART_PeriClockControl>

	//Enable USART Tx and Rx engines according to the USART_Mode configuration item
	if ( pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_RX)
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	791b      	ldrb	r3, [r3, #4]
 8002000:	2b01      	cmp	r3, #1
 8002002:	d104      	bne.n	800200e <USART_Init+0x2a>
	{
		//Implement the code to enable the Receiver bit field
		tempreg|= (1 << USART_CR1_RE);
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	f043 0304 	orr.w	r3, r3, #4
 800200a:	60fb      	str	r3, [r7, #12]
 800200c:	e010      	b.n	8002030 <USART_Init+0x4c>
	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_TX)
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	791b      	ldrb	r3, [r3, #4]
 8002012:	2b00      	cmp	r3, #0
 8002014:	d104      	bne.n	8002020 <USART_Init+0x3c>
	{
		//Implement the code to enable the Transmitter bit field
		tempreg |= ( 1 << USART_CR1_TE );
 8002016:	68fb      	ldr	r3, [r7, #12]
 8002018:	f043 0308 	orr.w	r3, r3, #8
 800201c:	60fb      	str	r3, [r7, #12]
 800201e:	e007      	b.n	8002030 <USART_Init+0x4c>

	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_TXRX)
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	791b      	ldrb	r3, [r3, #4]
 8002024:	2b02      	cmp	r3, #2
 8002026:	d103      	bne.n	8002030 <USART_Init+0x4c>
	{
		//Implement the code to enable the both Transmitter and Receiver bit fields
		tempreg |= ( ( 1 << USART_CR1_RE) | ( 1 << USART_CR1_TE) );
 8002028:	68fb      	ldr	r3, [r7, #12]
 800202a:	f043 030c 	orr.w	r3, r3, #12
 800202e:	60fb      	str	r3, [r7, #12]
	}

    //Implement the code to configure the Word length configuration item
	tempreg |= pUSARTHandle->USART_Config.USART_WordLength << USART_CR1_M ;
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	7b5b      	ldrb	r3, [r3, #13]
 8002034:	031b      	lsls	r3, r3, #12
 8002036:	68fa      	ldr	r2, [r7, #12]
 8002038:	4313      	orrs	r3, r2
 800203a:	60fb      	str	r3, [r7, #12]


    //Configuration of parity control bit fields
	if ( pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_EVEN)
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	7b9b      	ldrb	r3, [r3, #14]
 8002040:	2b01      	cmp	r3, #1
 8002042:	d104      	bne.n	800204e <USART_Init+0x6a>
	{
		//Implement the code to enable the parity control
		tempreg |= ( 1 << USART_CR1_PCE);
 8002044:	68fb      	ldr	r3, [r7, #12]
 8002046:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800204a:	60fb      	str	r3, [r7, #12]
 800204c:	e00b      	b.n	8002066 <USART_Init+0x82>

		//Implement the code to enable EVEN parity
		//Not required because by default EVEN parity will be selected once you enable the parity control

	}else if (pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_ODD )
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	7b9b      	ldrb	r3, [r3, #14]
 8002052:	2b02      	cmp	r3, #2
 8002054:	d107      	bne.n	8002066 <USART_Init+0x82>
	{
		//Implement the code to enable the parity control
	    tempreg |= ( 1 << USART_CR1_PCE);
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800205c:	60fb      	str	r3, [r7, #12]

	    //Implement the code to enable ODD parity
	    tempreg |= ( 1 << USART_CR1_PS);
 800205e:	68fb      	ldr	r3, [r7, #12]
 8002060:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002064:	60fb      	str	r3, [r7, #12]

	}

   //Program the CR1 register
	pUSARTHandle->pUSARTx->CR1 = tempreg;
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	68fa      	ldr	r2, [r7, #12]
 800206c:	60da      	str	r2, [r3, #12]

/******************************** Configuration of CR2******************************************/

	tempreg=0;
 800206e:	2300      	movs	r3, #0
 8002070:	60fb      	str	r3, [r7, #12]

	//Implement the code to configure the number of stop bits inserted during USART frame transmission
	tempreg |= pUSARTHandle->USART_Config.USART_NoOfStopBits << USART_CR2_STOP;
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	7b1b      	ldrb	r3, [r3, #12]
 8002076:	031b      	lsls	r3, r3, #12
 8002078:	68fa      	ldr	r2, [r7, #12]
 800207a:	4313      	orrs	r3, r2
 800207c:	60fb      	str	r3, [r7, #12]

	//Program the CR2 register
	pUSARTHandle->pUSARTx->CR2 = tempreg;
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	68fa      	ldr	r2, [r7, #12]
 8002084:	611a      	str	r2, [r3, #16]

/******************************** Configuration of CR3******************************************/

	tempreg=0;
 8002086:	2300      	movs	r3, #0
 8002088:	60fb      	str	r3, [r7, #12]

	//Configuration of USART hardware flow control
	if ( pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS)
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	7bdb      	ldrb	r3, [r3, #15]
 800208e:	2b01      	cmp	r3, #1
 8002090:	d104      	bne.n	800209c <USART_Init+0xb8>
	{
		//Implement the code to enable CTS flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 8002092:	68fb      	ldr	r3, [r7, #12]
 8002094:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002098:	60fb      	str	r3, [r7, #12]
 800209a:	e014      	b.n	80020c6 <USART_Init+0xe2>


	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_RTS)
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	7bdb      	ldrb	r3, [r3, #15]
 80020a0:	2b02      	cmp	r3, #2
 80020a2:	d104      	bne.n	80020ae <USART_Init+0xca>
	{
		//Implement the code to enable RTS flow control
		tempreg |= ( 1 << USART_CR3_RTSE);
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80020aa:	60fb      	str	r3, [r7, #12]
 80020ac:	e00b      	b.n	80020c6 <USART_Init+0xe2>

	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS_RTS)
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	7bdb      	ldrb	r3, [r3, #15]
 80020b2:	2b03      	cmp	r3, #3
 80020b4:	d107      	bne.n	80020c6 <USART_Init+0xe2>
	{
		//Implement the code to enable both CTS and RTS Flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80020bc:	60fb      	str	r3, [r7, #12]
		tempreg |= ( 1 << USART_CR3_RTSE);
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80020c4:	60fb      	str	r3, [r7, #12]
	}


	pUSARTHandle->pUSARTx->CR3 = tempreg;
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	68fa      	ldr	r2, [r7, #12]
 80020cc:	615a      	str	r2, [r3, #20]

/******************************** Configuration of BRR(Baudrate register)******************************************/

	//Implement the code to configure the baud rate
	//We will cover this in the lecture. No action required here
	USART_SetBaudRate(pUSARTHandle->pUSARTx,pUSARTHandle->USART_Config.USART_Baud);
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681a      	ldr	r2, [r3, #0]
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	689b      	ldr	r3, [r3, #8]
 80020d6:	4619      	mov	r1, r3
 80020d8:	4610      	mov	r0, r2
 80020da:	f7ff ff11 	bl	8001f00 <USART_SetBaudRate>

}
 80020de:	bf00      	nop
 80020e0:	3710      	adds	r7, #16
 80020e2:	46bd      	mov	sp, r7
 80020e4:	bd80      	pop	{r7, pc}

080020e6 <USART_PeripheralControl>:




void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t Cmd)
{
 80020e6:	b480      	push	{r7}
 80020e8:	b083      	sub	sp, #12
 80020ea:	af00      	add	r7, sp, #0
 80020ec:	6078      	str	r0, [r7, #4]
 80020ee:	460b      	mov	r3, r1
 80020f0:	70fb      	strb	r3, [r7, #3]
	if(Cmd == ENABLE)
 80020f2:	78fb      	ldrb	r3, [r7, #3]
 80020f4:	2b01      	cmp	r3, #1
 80020f6:	d106      	bne.n	8002106 <USART_PeripheralControl+0x20>
	{
		pUSARTx->CR1 |= (1 << 13);
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	68db      	ldr	r3, [r3, #12]
 80020fc:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	60da      	str	r2, [r3, #12]
	}else
	{
		pUSARTx->CR1 &= ~(1 << 13);
	}

}
 8002104:	e005      	b.n	8002112 <USART_PeripheralControl+0x2c>
		pUSARTx->CR1 &= ~(1 << 13);
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	68db      	ldr	r3, [r3, #12]
 800210a:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	60da      	str	r2, [r3, #12]
}
 8002112:	bf00      	nop
 8002114:	370c      	adds	r7, #12
 8002116:	46bd      	mov	sp, r7
 8002118:	bc80      	pop	{r7}
 800211a:	4770      	bx	lr

0800211c <USART_PeriClockControl>:
/*
 * Peripheral Clock Function
 */

void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi)
{
 800211c:	b480      	push	{r7}
 800211e:	b083      	sub	sp, #12
 8002120:	af00      	add	r7, sp, #0
 8002122:	6078      	str	r0, [r7, #4]
 8002124:	460b      	mov	r3, r1
 8002126:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8002128:	78fb      	ldrb	r3, [r7, #3]
 800212a:	2b01      	cmp	r3, #1
 800212c:	d12b      	bne.n	8002186 <USART_PeriClockControl+0x6a>
	{
		if(pUSARTx == USART1){
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	4a2d      	ldr	r2, [pc, #180]	@ (80021e8 <USART_PeriClockControl+0xcc>)
 8002132:	4293      	cmp	r3, r2
 8002134:	d106      	bne.n	8002144 <USART_PeriClockControl+0x28>
			USART1_PCLK_EN();
 8002136:	4b2d      	ldr	r3, [pc, #180]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002138:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800213a:	4a2c      	ldr	r2, [pc, #176]	@ (80021ec <USART_PeriClockControl+0xd0>)
 800213c:	f043 0310 	orr.w	r3, r3, #16
 8002140:	6453      	str	r3, [r2, #68]	@ 0x44
		else if (pUSARTx == UART4){
			UART4_PCLK_DI();
		}
	}

}
 8002142:	e04b      	b.n	80021dc <USART_PeriClockControl+0xc0>
		}else if (pUSARTx == USART2){
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	4a2a      	ldr	r2, [pc, #168]	@ (80021f0 <USART_PeriClockControl+0xd4>)
 8002148:	4293      	cmp	r3, r2
 800214a:	d106      	bne.n	800215a <USART_PeriClockControl+0x3e>
			USART2_PCLK_EN();
 800214c:	4b27      	ldr	r3, [pc, #156]	@ (80021ec <USART_PeriClockControl+0xd0>)
 800214e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002150:	4a26      	ldr	r2, [pc, #152]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002152:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002156:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8002158:	e040      	b.n	80021dc <USART_PeriClockControl+0xc0>
		}else if (pUSARTx == USART3){
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	4a25      	ldr	r2, [pc, #148]	@ (80021f4 <USART_PeriClockControl+0xd8>)
 800215e:	4293      	cmp	r3, r2
 8002160:	d106      	bne.n	8002170 <USART_PeriClockControl+0x54>
			USART3_PCLK_EN();
 8002162:	4b22      	ldr	r3, [pc, #136]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002164:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002166:	4a21      	ldr	r2, [pc, #132]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002168:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800216c:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800216e:	e035      	b.n	80021dc <USART_PeriClockControl+0xc0>
		else if (pUSARTx == UART4){
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	4a21      	ldr	r2, [pc, #132]	@ (80021f8 <USART_PeriClockControl+0xdc>)
 8002174:	4293      	cmp	r3, r2
 8002176:	d131      	bne.n	80021dc <USART_PeriClockControl+0xc0>
			UART4_PCLK_EN();
 8002178:	4b1c      	ldr	r3, [pc, #112]	@ (80021ec <USART_PeriClockControl+0xd0>)
 800217a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800217c:	4a1b      	ldr	r2, [pc, #108]	@ (80021ec <USART_PeriClockControl+0xd0>)
 800217e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8002182:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8002184:	e02a      	b.n	80021dc <USART_PeriClockControl+0xc0>
		if(pUSARTx == USART1){
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	4a17      	ldr	r2, [pc, #92]	@ (80021e8 <USART_PeriClockControl+0xcc>)
 800218a:	4293      	cmp	r3, r2
 800218c:	d106      	bne.n	800219c <USART_PeriClockControl+0x80>
			USART1_PCLK_DI();
 800218e:	4b17      	ldr	r3, [pc, #92]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002190:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002192:	4a16      	ldr	r2, [pc, #88]	@ (80021ec <USART_PeriClockControl+0xd0>)
 8002194:	f023 0310 	bic.w	r3, r3, #16
 8002198:	6453      	str	r3, [r2, #68]	@ 0x44
}
 800219a:	e01f      	b.n	80021dc <USART_PeriClockControl+0xc0>
		}else if (pUSARTx == USART2){
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	4a14      	ldr	r2, [pc, #80]	@ (80021f0 <USART_PeriClockControl+0xd4>)
 80021a0:	4293      	cmp	r3, r2
 80021a2:	d106      	bne.n	80021b2 <USART_PeriClockControl+0x96>
			USART2_PCLK_DI();
 80021a4:	4b11      	ldr	r3, [pc, #68]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021a8:	4a10      	ldr	r2, [pc, #64]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021aa:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80021ae:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80021b0:	e014      	b.n	80021dc <USART_PeriClockControl+0xc0>
		}else if (pUSARTx == USART3){
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	4a0f      	ldr	r2, [pc, #60]	@ (80021f4 <USART_PeriClockControl+0xd8>)
 80021b6:	4293      	cmp	r3, r2
 80021b8:	d106      	bne.n	80021c8 <USART_PeriClockControl+0xac>
			USART3_PCLK_DI();
 80021ba:	4b0c      	ldr	r3, [pc, #48]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021be:	4a0b      	ldr	r2, [pc, #44]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021c0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80021c4:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80021c6:	e009      	b.n	80021dc <USART_PeriClockControl+0xc0>
		else if (pUSARTx == UART4){
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	4a0b      	ldr	r2, [pc, #44]	@ (80021f8 <USART_PeriClockControl+0xdc>)
 80021cc:	4293      	cmp	r3, r2
 80021ce:	d105      	bne.n	80021dc <USART_PeriClockControl+0xc0>
			UART4_PCLK_DI();
 80021d0:	4b06      	ldr	r3, [pc, #24]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021d4:	4a05      	ldr	r2, [pc, #20]	@ (80021ec <USART_PeriClockControl+0xd0>)
 80021d6:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80021da:	6413      	str	r3, [r2, #64]	@ 0x40
}
 80021dc:	bf00      	nop
 80021de:	370c      	adds	r7, #12
 80021e0:	46bd      	mov	sp, r7
 80021e2:	bc80      	pop	{r7}
 80021e4:	4770      	bx	lr
 80021e6:	bf00      	nop
 80021e8:	40011000 	.word	0x40011000
 80021ec:	40023800 	.word	0x40023800
 80021f0:	40004400 	.word	0x40004400
 80021f4:	40004800 	.word	0x40004800
 80021f8:	40004c00 	.word	0x40004c00

080021fc <USART_GetFlagStatus>:
/*
 * Data Send and Receive
 */

uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint8_t StatusFlagName)
{
 80021fc:	b480      	push	{r7}
 80021fe:	b083      	sub	sp, #12
 8002200:	af00      	add	r7, sp, #0
 8002202:	6078      	str	r0, [r7, #4]
 8002204:	460b      	mov	r3, r1
 8002206:	70fb      	strb	r3, [r7, #3]
    if(pUSARTx->SR & StatusFlagName)
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	681a      	ldr	r2, [r3, #0]
 800220c:	78fb      	ldrb	r3, [r7, #3]
 800220e:	4013      	ands	r3, r2
 8002210:	2b00      	cmp	r3, #0
 8002212:	d001      	beq.n	8002218 <USART_GetFlagStatus+0x1c>
    {
    	return SET;
 8002214:	2301      	movs	r3, #1
 8002216:	e000      	b.n	800221a <USART_GetFlagStatus+0x1e>
    }

   return RESET;
 8002218:	2300      	movs	r3, #0
}
 800221a:	4618      	mov	r0, r3
 800221c:	370c      	adds	r7, #12
 800221e:	46bd      	mov	sp, r7
 8002220:	bc80      	pop	{r7}
 8002222:	4770      	bx	lr

08002224 <USART_SendData>:
/*
 * Data Receive
 */

void USART_SendData(USART_Handle_t *pUSARTHandle, uint8_t *pTxBuffer, uint32_t Len)
{
 8002224:	b580      	push	{r7, lr}
 8002226:	b086      	sub	sp, #24
 8002228:	af00      	add	r7, sp, #0
 800222a:	60f8      	str	r0, [r7, #12]
 800222c:	60b9      	str	r1, [r7, #8]
 800222e:	607a      	str	r2, [r7, #4]

	uint16_t *pdata;

   //Loop over until "Len" number of bytes are transferred
	for(uint32_t i = 0 ; i < Len; i++)
 8002230:	2300      	movs	r3, #0
 8002232:	617b      	str	r3, [r7, #20]
 8002234:	e031      	b.n	800229a <USART_SendData+0x76>
	{
		//Implement the code to wait until TXE flag is set in the SR
		while(! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TXE));
 8002236:	bf00      	nop
 8002238:	68fb      	ldr	r3, [r7, #12]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	2180      	movs	r1, #128	@ 0x80
 800223e:	4618      	mov	r0, r3
 8002240:	f7ff ffdc 	bl	80021fc <USART_GetFlagStatus>
 8002244:	4603      	mov	r3, r0
 8002246:	2b00      	cmp	r3, #0
 8002248:	d0f6      	beq.n	8002238 <USART_SendData+0x14>

		//Check the USART_WordLength item for 9BIT or 8BIT in a frame
		if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 800224a:	68fb      	ldr	r3, [r7, #12]
 800224c:	7b5b      	ldrb	r3, [r3, #13]
 800224e:	2b01      	cmp	r3, #1
 8002250:	d118      	bne.n	8002284 <USART_SendData+0x60>
		{
			//if 9BIT load the DR with 2bytes masking  the bits other than first 9 bits
			pdata = (uint16_t*) pTxBuffer;
 8002252:	68bb      	ldr	r3, [r7, #8]
 8002254:	613b      	str	r3, [r7, #16]
			pUSARTHandle->pUSARTx->DR = (*pdata & (uint16_t)0x01FF);
 8002256:	693b      	ldr	r3, [r7, #16]
 8002258:	881b      	ldrh	r3, [r3, #0]
 800225a:	461a      	mov	r2, r3
 800225c:	68fb      	ldr	r3, [r7, #12]
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002264:	605a      	str	r2, [r3, #4]

			//check for USART_ParityControl
			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8002266:	68fb      	ldr	r3, [r7, #12]
 8002268:	7b9b      	ldrb	r3, [r3, #14]
 800226a:	2b00      	cmp	r3, #0
 800226c:	d106      	bne.n	800227c <USART_SendData+0x58>
			{
				//No parity is used in this transfer , so 9bits of user data will be sent
				//Implement the code to increment pTxBuffer twice
				pTxBuffer++;
 800226e:	68bb      	ldr	r3, [r7, #8]
 8002270:	3301      	adds	r3, #1
 8002272:	60bb      	str	r3, [r7, #8]
				pTxBuffer++;
 8002274:	68bb      	ldr	r3, [r7, #8]
 8002276:	3301      	adds	r3, #1
 8002278:	60bb      	str	r3, [r7, #8]
 800227a:	e00b      	b.n	8002294 <USART_SendData+0x70>
			}
			else
			{
				//Parity bit is used in this transfer . so 8bits of user data will be sent
				//The 9th bit will be replaced by parity bit by the hardware
				pTxBuffer++;
 800227c:	68bb      	ldr	r3, [r7, #8]
 800227e:	3301      	adds	r3, #1
 8002280:	60bb      	str	r3, [r7, #8]
 8002282:	e007      	b.n	8002294 <USART_SendData+0x70>
			}
		}
		else
		{
			//This is 8bit data transfer
			pUSARTHandle->pUSARTx->DR = (*pTxBuffer  & (uint8_t)0xFF);
 8002284:	68bb      	ldr	r3, [r7, #8]
 8002286:	781a      	ldrb	r2, [r3, #0]
 8002288:	68fb      	ldr	r3, [r7, #12]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	605a      	str	r2, [r3, #4]

			//Implement the code to increment the buffer address
			pTxBuffer++;
 800228e:	68bb      	ldr	r3, [r7, #8]
 8002290:	3301      	adds	r3, #1
 8002292:	60bb      	str	r3, [r7, #8]
	for(uint32_t i = 0 ; i < Len; i++)
 8002294:	697b      	ldr	r3, [r7, #20]
 8002296:	3301      	adds	r3, #1
 8002298:	617b      	str	r3, [r7, #20]
 800229a:	697a      	ldr	r2, [r7, #20]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	429a      	cmp	r2, r3
 80022a0:	d3c9      	bcc.n	8002236 <USART_SendData+0x12>
		}
	}

	//Implement the code to wait till TC flag is set in the SR
	while( ! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TC));
 80022a2:	bf00      	nop
 80022a4:	68fb      	ldr	r3, [r7, #12]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	2140      	movs	r1, #64	@ 0x40
 80022aa:	4618      	mov	r0, r3
 80022ac:	f7ff ffa6 	bl	80021fc <USART_GetFlagStatus>
 80022b0:	4603      	mov	r3, r0
 80022b2:	2b00      	cmp	r3, #0
 80022b4:	d0f6      	beq.n	80022a4 <USART_SendData+0x80>
}
 80022b6:	bf00      	nop
 80022b8:	bf00      	nop
 80022ba:	3718      	adds	r7, #24
 80022bc:	46bd      	mov	sp, r7
 80022be:	bd80      	pop	{r7, pc}

080022c0 <__cvt>:
 80022c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80022c4:	b088      	sub	sp, #32
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	461d      	mov	r5, r3
 80022ca:	4614      	mov	r4, r2
 80022cc:	bfbc      	itt	lt
 80022ce:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80022d2:	4614      	movlt	r4, r2
 80022d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80022d6:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80022d8:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80022dc:	bfb6      	itet	lt
 80022de:	461d      	movlt	r5, r3
 80022e0:	2300      	movge	r3, #0
 80022e2:	232d      	movlt	r3, #45	@ 0x2d
 80022e4:	7013      	strb	r3, [r2, #0]
 80022e6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80022e8:	f023 0820 	bic.w	r8, r3, #32
 80022ec:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80022f0:	d005      	beq.n	80022fe <__cvt+0x3e>
 80022f2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80022f6:	d100      	bne.n	80022fa <__cvt+0x3a>
 80022f8:	3601      	adds	r6, #1
 80022fa:	2302      	movs	r3, #2
 80022fc:	e000      	b.n	8002300 <__cvt+0x40>
 80022fe:	2303      	movs	r3, #3
 8002300:	aa07      	add	r2, sp, #28
 8002302:	9204      	str	r2, [sp, #16]
 8002304:	aa06      	add	r2, sp, #24
 8002306:	e9cd a202 	strd	sl, r2, [sp, #8]
 800230a:	e9cd 3600 	strd	r3, r6, [sp]
 800230e:	4622      	mov	r2, r4
 8002310:	462b      	mov	r3, r5
 8002312:	f001 f86d 	bl	80033f0 <_dtoa_r>
 8002316:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800231a:	4607      	mov	r7, r0
 800231c:	d119      	bne.n	8002352 <__cvt+0x92>
 800231e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002320:	07db      	lsls	r3, r3, #31
 8002322:	d50e      	bpl.n	8002342 <__cvt+0x82>
 8002324:	eb00 0906 	add.w	r9, r0, r6
 8002328:	2200      	movs	r2, #0
 800232a:	2300      	movs	r3, #0
 800232c:	4620      	mov	r0, r4
 800232e:	4629      	mov	r1, r5
 8002330:	f7fe fbea 	bl	8000b08 <__aeabi_dcmpeq>
 8002334:	b108      	cbz	r0, 800233a <__cvt+0x7a>
 8002336:	f8cd 901c 	str.w	r9, [sp, #28]
 800233a:	2230      	movs	r2, #48	@ 0x30
 800233c:	9b07      	ldr	r3, [sp, #28]
 800233e:	454b      	cmp	r3, r9
 8002340:	d31e      	bcc.n	8002380 <__cvt+0xc0>
 8002342:	9b07      	ldr	r3, [sp, #28]
 8002344:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8002346:	1bdb      	subs	r3, r3, r7
 8002348:	4638      	mov	r0, r7
 800234a:	6013      	str	r3, [r2, #0]
 800234c:	b008      	add	sp, #32
 800234e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002352:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8002356:	eb00 0906 	add.w	r9, r0, r6
 800235a:	d1e5      	bne.n	8002328 <__cvt+0x68>
 800235c:	7803      	ldrb	r3, [r0, #0]
 800235e:	2b30      	cmp	r3, #48	@ 0x30
 8002360:	d10a      	bne.n	8002378 <__cvt+0xb8>
 8002362:	2200      	movs	r2, #0
 8002364:	2300      	movs	r3, #0
 8002366:	4620      	mov	r0, r4
 8002368:	4629      	mov	r1, r5
 800236a:	f7fe fbcd 	bl	8000b08 <__aeabi_dcmpeq>
 800236e:	b918      	cbnz	r0, 8002378 <__cvt+0xb8>
 8002370:	f1c6 0601 	rsb	r6, r6, #1
 8002374:	f8ca 6000 	str.w	r6, [sl]
 8002378:	f8da 3000 	ldr.w	r3, [sl]
 800237c:	4499      	add	r9, r3
 800237e:	e7d3      	b.n	8002328 <__cvt+0x68>
 8002380:	1c59      	adds	r1, r3, #1
 8002382:	9107      	str	r1, [sp, #28]
 8002384:	701a      	strb	r2, [r3, #0]
 8002386:	e7d9      	b.n	800233c <__cvt+0x7c>

08002388 <__exponent>:
 8002388:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800238a:	2900      	cmp	r1, #0
 800238c:	bfba      	itte	lt
 800238e:	4249      	neglt	r1, r1
 8002390:	232d      	movlt	r3, #45	@ 0x2d
 8002392:	232b      	movge	r3, #43	@ 0x2b
 8002394:	2909      	cmp	r1, #9
 8002396:	7002      	strb	r2, [r0, #0]
 8002398:	7043      	strb	r3, [r0, #1]
 800239a:	dd29      	ble.n	80023f0 <__exponent+0x68>
 800239c:	f10d 0307 	add.w	r3, sp, #7
 80023a0:	461d      	mov	r5, r3
 80023a2:	270a      	movs	r7, #10
 80023a4:	461a      	mov	r2, r3
 80023a6:	fbb1 f6f7 	udiv	r6, r1, r7
 80023aa:	fb07 1416 	mls	r4, r7, r6, r1
 80023ae:	3430      	adds	r4, #48	@ 0x30
 80023b0:	f802 4c01 	strb.w	r4, [r2, #-1]
 80023b4:	460c      	mov	r4, r1
 80023b6:	2c63      	cmp	r4, #99	@ 0x63
 80023b8:	f103 33ff 	add.w	r3, r3, #4294967295
 80023bc:	4631      	mov	r1, r6
 80023be:	dcf1      	bgt.n	80023a4 <__exponent+0x1c>
 80023c0:	3130      	adds	r1, #48	@ 0x30
 80023c2:	1e94      	subs	r4, r2, #2
 80023c4:	f803 1c01 	strb.w	r1, [r3, #-1]
 80023c8:	1c41      	adds	r1, r0, #1
 80023ca:	4623      	mov	r3, r4
 80023cc:	42ab      	cmp	r3, r5
 80023ce:	d30a      	bcc.n	80023e6 <__exponent+0x5e>
 80023d0:	f10d 0309 	add.w	r3, sp, #9
 80023d4:	1a9b      	subs	r3, r3, r2
 80023d6:	42ac      	cmp	r4, r5
 80023d8:	bf88      	it	hi
 80023da:	2300      	movhi	r3, #0
 80023dc:	3302      	adds	r3, #2
 80023de:	4403      	add	r3, r0
 80023e0:	1a18      	subs	r0, r3, r0
 80023e2:	b003      	add	sp, #12
 80023e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023e6:	f813 6b01 	ldrb.w	r6, [r3], #1
 80023ea:	f801 6f01 	strb.w	r6, [r1, #1]!
 80023ee:	e7ed      	b.n	80023cc <__exponent+0x44>
 80023f0:	2330      	movs	r3, #48	@ 0x30
 80023f2:	3130      	adds	r1, #48	@ 0x30
 80023f4:	7083      	strb	r3, [r0, #2]
 80023f6:	70c1      	strb	r1, [r0, #3]
 80023f8:	1d03      	adds	r3, r0, #4
 80023fa:	e7f1      	b.n	80023e0 <__exponent+0x58>

080023fc <_printf_float>:
 80023fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002400:	b091      	sub	sp, #68	@ 0x44
 8002402:	460c      	mov	r4, r1
 8002404:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8002408:	4616      	mov	r6, r2
 800240a:	461f      	mov	r7, r3
 800240c:	4605      	mov	r5, r0
 800240e:	f000 feeb 	bl	80031e8 <_localeconv_r>
 8002412:	6803      	ldr	r3, [r0, #0]
 8002414:	9308      	str	r3, [sp, #32]
 8002416:	4618      	mov	r0, r3
 8002418:	f7fd ff4a 	bl	80002b0 <strlen>
 800241c:	2300      	movs	r3, #0
 800241e:	930e      	str	r3, [sp, #56]	@ 0x38
 8002420:	f8d8 3000 	ldr.w	r3, [r8]
 8002424:	9009      	str	r0, [sp, #36]	@ 0x24
 8002426:	3307      	adds	r3, #7
 8002428:	f023 0307 	bic.w	r3, r3, #7
 800242c:	f103 0208 	add.w	r2, r3, #8
 8002430:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002434:	f8d4 b000 	ldr.w	fp, [r4]
 8002438:	f8c8 2000 	str.w	r2, [r8]
 800243c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002440:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8002444:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002446:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800244a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800244e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002452:	4b9d      	ldr	r3, [pc, #628]	@ (80026c8 <_printf_float+0x2cc>)
 8002454:	f04f 32ff 	mov.w	r2, #4294967295
 8002458:	f7fe fb88 	bl	8000b6c <__aeabi_dcmpun>
 800245c:	bb70      	cbnz	r0, 80024bc <_printf_float+0xc0>
 800245e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002462:	4b99      	ldr	r3, [pc, #612]	@ (80026c8 <_printf_float+0x2cc>)
 8002464:	f04f 32ff 	mov.w	r2, #4294967295
 8002468:	f7fe fb62 	bl	8000b30 <__aeabi_dcmple>
 800246c:	bb30      	cbnz	r0, 80024bc <_printf_float+0xc0>
 800246e:	2200      	movs	r2, #0
 8002470:	2300      	movs	r3, #0
 8002472:	4640      	mov	r0, r8
 8002474:	4649      	mov	r1, r9
 8002476:	f7fe fb51 	bl	8000b1c <__aeabi_dcmplt>
 800247a:	b110      	cbz	r0, 8002482 <_printf_float+0x86>
 800247c:	232d      	movs	r3, #45	@ 0x2d
 800247e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002482:	4a92      	ldr	r2, [pc, #584]	@ (80026cc <_printf_float+0x2d0>)
 8002484:	4b92      	ldr	r3, [pc, #584]	@ (80026d0 <_printf_float+0x2d4>)
 8002486:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800248a:	bf94      	ite	ls
 800248c:	4690      	movls	r8, r2
 800248e:	4698      	movhi	r8, r3
 8002490:	2303      	movs	r3, #3
 8002492:	6123      	str	r3, [r4, #16]
 8002494:	f02b 0304 	bic.w	r3, fp, #4
 8002498:	6023      	str	r3, [r4, #0]
 800249a:	f04f 0900 	mov.w	r9, #0
 800249e:	9700      	str	r7, [sp, #0]
 80024a0:	4633      	mov	r3, r6
 80024a2:	aa0f      	add	r2, sp, #60	@ 0x3c
 80024a4:	4621      	mov	r1, r4
 80024a6:	4628      	mov	r0, r5
 80024a8:	f000 f9d4 	bl	8002854 <_printf_common>
 80024ac:	3001      	adds	r0, #1
 80024ae:	f040 808f 	bne.w	80025d0 <_printf_float+0x1d4>
 80024b2:	f04f 30ff 	mov.w	r0, #4294967295
 80024b6:	b011      	add	sp, #68	@ 0x44
 80024b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024bc:	4642      	mov	r2, r8
 80024be:	464b      	mov	r3, r9
 80024c0:	4640      	mov	r0, r8
 80024c2:	4649      	mov	r1, r9
 80024c4:	f7fe fb52 	bl	8000b6c <__aeabi_dcmpun>
 80024c8:	b140      	cbz	r0, 80024dc <_printf_float+0xe0>
 80024ca:	464b      	mov	r3, r9
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	bfbc      	itt	lt
 80024d0:	232d      	movlt	r3, #45	@ 0x2d
 80024d2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80024d6:	4a7f      	ldr	r2, [pc, #508]	@ (80026d4 <_printf_float+0x2d8>)
 80024d8:	4b7f      	ldr	r3, [pc, #508]	@ (80026d8 <_printf_float+0x2dc>)
 80024da:	e7d4      	b.n	8002486 <_printf_float+0x8a>
 80024dc:	6863      	ldr	r3, [r4, #4]
 80024de:	1c5a      	adds	r2, r3, #1
 80024e0:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80024e4:	d13f      	bne.n	8002566 <_printf_float+0x16a>
 80024e6:	2306      	movs	r3, #6
 80024e8:	6063      	str	r3, [r4, #4]
 80024ea:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80024ee:	2200      	movs	r2, #0
 80024f0:	6023      	str	r3, [r4, #0]
 80024f2:	9206      	str	r2, [sp, #24]
 80024f4:	aa0e      	add	r2, sp, #56	@ 0x38
 80024f6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80024fa:	aa0d      	add	r2, sp, #52	@ 0x34
 80024fc:	9203      	str	r2, [sp, #12]
 80024fe:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002502:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002506:	6863      	ldr	r3, [r4, #4]
 8002508:	9300      	str	r3, [sp, #0]
 800250a:	4642      	mov	r2, r8
 800250c:	464b      	mov	r3, r9
 800250e:	4628      	mov	r0, r5
 8002510:	910a      	str	r1, [sp, #40]	@ 0x28
 8002512:	f7ff fed5 	bl	80022c0 <__cvt>
 8002516:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002518:	2947      	cmp	r1, #71	@ 0x47
 800251a:	4680      	mov	r8, r0
 800251c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800251e:	d128      	bne.n	8002572 <_printf_float+0x176>
 8002520:	1cc8      	adds	r0, r1, #3
 8002522:	db02      	blt.n	800252a <_printf_float+0x12e>
 8002524:	6863      	ldr	r3, [r4, #4]
 8002526:	4299      	cmp	r1, r3
 8002528:	dd40      	ble.n	80025ac <_printf_float+0x1b0>
 800252a:	f1aa 0a02 	sub.w	sl, sl, #2
 800252e:	fa5f fa8a 	uxtb.w	sl, sl
 8002532:	3901      	subs	r1, #1
 8002534:	4652      	mov	r2, sl
 8002536:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800253a:	910d      	str	r1, [sp, #52]	@ 0x34
 800253c:	f7ff ff24 	bl	8002388 <__exponent>
 8002540:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002542:	1813      	adds	r3, r2, r0
 8002544:	2a01      	cmp	r2, #1
 8002546:	4681      	mov	r9, r0
 8002548:	6123      	str	r3, [r4, #16]
 800254a:	dc02      	bgt.n	8002552 <_printf_float+0x156>
 800254c:	6822      	ldr	r2, [r4, #0]
 800254e:	07d2      	lsls	r2, r2, #31
 8002550:	d501      	bpl.n	8002556 <_printf_float+0x15a>
 8002552:	3301      	adds	r3, #1
 8002554:	6123      	str	r3, [r4, #16]
 8002556:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 800255a:	2b00      	cmp	r3, #0
 800255c:	d09f      	beq.n	800249e <_printf_float+0xa2>
 800255e:	232d      	movs	r3, #45	@ 0x2d
 8002560:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002564:	e79b      	b.n	800249e <_printf_float+0xa2>
 8002566:	2947      	cmp	r1, #71	@ 0x47
 8002568:	d1bf      	bne.n	80024ea <_printf_float+0xee>
 800256a:	2b00      	cmp	r3, #0
 800256c:	d1bd      	bne.n	80024ea <_printf_float+0xee>
 800256e:	2301      	movs	r3, #1
 8002570:	e7ba      	b.n	80024e8 <_printf_float+0xec>
 8002572:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002576:	d9dc      	bls.n	8002532 <_printf_float+0x136>
 8002578:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800257c:	d118      	bne.n	80025b0 <_printf_float+0x1b4>
 800257e:	2900      	cmp	r1, #0
 8002580:	6863      	ldr	r3, [r4, #4]
 8002582:	dd0b      	ble.n	800259c <_printf_float+0x1a0>
 8002584:	6121      	str	r1, [r4, #16]
 8002586:	b913      	cbnz	r3, 800258e <_printf_float+0x192>
 8002588:	6822      	ldr	r2, [r4, #0]
 800258a:	07d0      	lsls	r0, r2, #31
 800258c:	d502      	bpl.n	8002594 <_printf_float+0x198>
 800258e:	3301      	adds	r3, #1
 8002590:	440b      	add	r3, r1
 8002592:	6123      	str	r3, [r4, #16]
 8002594:	65a1      	str	r1, [r4, #88]	@ 0x58
 8002596:	f04f 0900 	mov.w	r9, #0
 800259a:	e7dc      	b.n	8002556 <_printf_float+0x15a>
 800259c:	b913      	cbnz	r3, 80025a4 <_printf_float+0x1a8>
 800259e:	6822      	ldr	r2, [r4, #0]
 80025a0:	07d2      	lsls	r2, r2, #31
 80025a2:	d501      	bpl.n	80025a8 <_printf_float+0x1ac>
 80025a4:	3302      	adds	r3, #2
 80025a6:	e7f4      	b.n	8002592 <_printf_float+0x196>
 80025a8:	2301      	movs	r3, #1
 80025aa:	e7f2      	b.n	8002592 <_printf_float+0x196>
 80025ac:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80025b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80025b2:	4299      	cmp	r1, r3
 80025b4:	db05      	blt.n	80025c2 <_printf_float+0x1c6>
 80025b6:	6823      	ldr	r3, [r4, #0]
 80025b8:	6121      	str	r1, [r4, #16]
 80025ba:	07d8      	lsls	r0, r3, #31
 80025bc:	d5ea      	bpl.n	8002594 <_printf_float+0x198>
 80025be:	1c4b      	adds	r3, r1, #1
 80025c0:	e7e7      	b.n	8002592 <_printf_float+0x196>
 80025c2:	2900      	cmp	r1, #0
 80025c4:	bfd4      	ite	le
 80025c6:	f1c1 0202 	rsble	r2, r1, #2
 80025ca:	2201      	movgt	r2, #1
 80025cc:	4413      	add	r3, r2
 80025ce:	e7e0      	b.n	8002592 <_printf_float+0x196>
 80025d0:	6823      	ldr	r3, [r4, #0]
 80025d2:	055a      	lsls	r2, r3, #21
 80025d4:	d407      	bmi.n	80025e6 <_printf_float+0x1ea>
 80025d6:	6923      	ldr	r3, [r4, #16]
 80025d8:	4642      	mov	r2, r8
 80025da:	4631      	mov	r1, r6
 80025dc:	4628      	mov	r0, r5
 80025de:	47b8      	blx	r7
 80025e0:	3001      	adds	r0, #1
 80025e2:	d12b      	bne.n	800263c <_printf_float+0x240>
 80025e4:	e765      	b.n	80024b2 <_printf_float+0xb6>
 80025e6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80025ea:	f240 80dd 	bls.w	80027a8 <_printf_float+0x3ac>
 80025ee:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80025f2:	2200      	movs	r2, #0
 80025f4:	2300      	movs	r3, #0
 80025f6:	f7fe fa87 	bl	8000b08 <__aeabi_dcmpeq>
 80025fa:	2800      	cmp	r0, #0
 80025fc:	d033      	beq.n	8002666 <_printf_float+0x26a>
 80025fe:	4a37      	ldr	r2, [pc, #220]	@ (80026dc <_printf_float+0x2e0>)
 8002600:	2301      	movs	r3, #1
 8002602:	4631      	mov	r1, r6
 8002604:	4628      	mov	r0, r5
 8002606:	47b8      	blx	r7
 8002608:	3001      	adds	r0, #1
 800260a:	f43f af52 	beq.w	80024b2 <_printf_float+0xb6>
 800260e:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8002612:	4543      	cmp	r3, r8
 8002614:	db02      	blt.n	800261c <_printf_float+0x220>
 8002616:	6823      	ldr	r3, [r4, #0]
 8002618:	07d8      	lsls	r0, r3, #31
 800261a:	d50f      	bpl.n	800263c <_printf_float+0x240>
 800261c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002620:	4631      	mov	r1, r6
 8002622:	4628      	mov	r0, r5
 8002624:	47b8      	blx	r7
 8002626:	3001      	adds	r0, #1
 8002628:	f43f af43 	beq.w	80024b2 <_printf_float+0xb6>
 800262c:	f04f 0900 	mov.w	r9, #0
 8002630:	f108 38ff 	add.w	r8, r8, #4294967295
 8002634:	f104 0a1a 	add.w	sl, r4, #26
 8002638:	45c8      	cmp	r8, r9
 800263a:	dc09      	bgt.n	8002650 <_printf_float+0x254>
 800263c:	6823      	ldr	r3, [r4, #0]
 800263e:	079b      	lsls	r3, r3, #30
 8002640:	f100 8103 	bmi.w	800284a <_printf_float+0x44e>
 8002644:	68e0      	ldr	r0, [r4, #12]
 8002646:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002648:	4298      	cmp	r0, r3
 800264a:	bfb8      	it	lt
 800264c:	4618      	movlt	r0, r3
 800264e:	e732      	b.n	80024b6 <_printf_float+0xba>
 8002650:	2301      	movs	r3, #1
 8002652:	4652      	mov	r2, sl
 8002654:	4631      	mov	r1, r6
 8002656:	4628      	mov	r0, r5
 8002658:	47b8      	blx	r7
 800265a:	3001      	adds	r0, #1
 800265c:	f43f af29 	beq.w	80024b2 <_printf_float+0xb6>
 8002660:	f109 0901 	add.w	r9, r9, #1
 8002664:	e7e8      	b.n	8002638 <_printf_float+0x23c>
 8002666:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002668:	2b00      	cmp	r3, #0
 800266a:	dc39      	bgt.n	80026e0 <_printf_float+0x2e4>
 800266c:	4a1b      	ldr	r2, [pc, #108]	@ (80026dc <_printf_float+0x2e0>)
 800266e:	2301      	movs	r3, #1
 8002670:	4631      	mov	r1, r6
 8002672:	4628      	mov	r0, r5
 8002674:	47b8      	blx	r7
 8002676:	3001      	adds	r0, #1
 8002678:	f43f af1b 	beq.w	80024b2 <_printf_float+0xb6>
 800267c:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8002680:	ea59 0303 	orrs.w	r3, r9, r3
 8002684:	d102      	bne.n	800268c <_printf_float+0x290>
 8002686:	6823      	ldr	r3, [r4, #0]
 8002688:	07d9      	lsls	r1, r3, #31
 800268a:	d5d7      	bpl.n	800263c <_printf_float+0x240>
 800268c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002690:	4631      	mov	r1, r6
 8002692:	4628      	mov	r0, r5
 8002694:	47b8      	blx	r7
 8002696:	3001      	adds	r0, #1
 8002698:	f43f af0b 	beq.w	80024b2 <_printf_float+0xb6>
 800269c:	f04f 0a00 	mov.w	sl, #0
 80026a0:	f104 0b1a 	add.w	fp, r4, #26
 80026a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80026a6:	425b      	negs	r3, r3
 80026a8:	4553      	cmp	r3, sl
 80026aa:	dc01      	bgt.n	80026b0 <_printf_float+0x2b4>
 80026ac:	464b      	mov	r3, r9
 80026ae:	e793      	b.n	80025d8 <_printf_float+0x1dc>
 80026b0:	2301      	movs	r3, #1
 80026b2:	465a      	mov	r2, fp
 80026b4:	4631      	mov	r1, r6
 80026b6:	4628      	mov	r0, r5
 80026b8:	47b8      	blx	r7
 80026ba:	3001      	adds	r0, #1
 80026bc:	f43f aef9 	beq.w	80024b2 <_printf_float+0xb6>
 80026c0:	f10a 0a01 	add.w	sl, sl, #1
 80026c4:	e7ee      	b.n	80026a4 <_printf_float+0x2a8>
 80026c6:	bf00      	nop
 80026c8:	7fefffff 	.word	0x7fefffff
 80026cc:	08006977 	.word	0x08006977
 80026d0:	0800697b 	.word	0x0800697b
 80026d4:	0800697f 	.word	0x0800697f
 80026d8:	08006983 	.word	0x08006983
 80026dc:	08006987 	.word	0x08006987
 80026e0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80026e2:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80026e6:	4553      	cmp	r3, sl
 80026e8:	bfa8      	it	ge
 80026ea:	4653      	movge	r3, sl
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	4699      	mov	r9, r3
 80026f0:	dc36      	bgt.n	8002760 <_printf_float+0x364>
 80026f2:	f04f 0b00 	mov.w	fp, #0
 80026f6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80026fa:	f104 021a 	add.w	r2, r4, #26
 80026fe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002700:	930a      	str	r3, [sp, #40]	@ 0x28
 8002702:	eba3 0309 	sub.w	r3, r3, r9
 8002706:	455b      	cmp	r3, fp
 8002708:	dc31      	bgt.n	800276e <_printf_float+0x372>
 800270a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800270c:	459a      	cmp	sl, r3
 800270e:	dc3a      	bgt.n	8002786 <_printf_float+0x38a>
 8002710:	6823      	ldr	r3, [r4, #0]
 8002712:	07da      	lsls	r2, r3, #31
 8002714:	d437      	bmi.n	8002786 <_printf_float+0x38a>
 8002716:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002718:	ebaa 0903 	sub.w	r9, sl, r3
 800271c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800271e:	ebaa 0303 	sub.w	r3, sl, r3
 8002722:	4599      	cmp	r9, r3
 8002724:	bfa8      	it	ge
 8002726:	4699      	movge	r9, r3
 8002728:	f1b9 0f00 	cmp.w	r9, #0
 800272c:	dc33      	bgt.n	8002796 <_printf_float+0x39a>
 800272e:	f04f 0800 	mov.w	r8, #0
 8002732:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002736:	f104 0b1a 	add.w	fp, r4, #26
 800273a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800273c:	ebaa 0303 	sub.w	r3, sl, r3
 8002740:	eba3 0309 	sub.w	r3, r3, r9
 8002744:	4543      	cmp	r3, r8
 8002746:	f77f af79 	ble.w	800263c <_printf_float+0x240>
 800274a:	2301      	movs	r3, #1
 800274c:	465a      	mov	r2, fp
 800274e:	4631      	mov	r1, r6
 8002750:	4628      	mov	r0, r5
 8002752:	47b8      	blx	r7
 8002754:	3001      	adds	r0, #1
 8002756:	f43f aeac 	beq.w	80024b2 <_printf_float+0xb6>
 800275a:	f108 0801 	add.w	r8, r8, #1
 800275e:	e7ec      	b.n	800273a <_printf_float+0x33e>
 8002760:	4642      	mov	r2, r8
 8002762:	4631      	mov	r1, r6
 8002764:	4628      	mov	r0, r5
 8002766:	47b8      	blx	r7
 8002768:	3001      	adds	r0, #1
 800276a:	d1c2      	bne.n	80026f2 <_printf_float+0x2f6>
 800276c:	e6a1      	b.n	80024b2 <_printf_float+0xb6>
 800276e:	2301      	movs	r3, #1
 8002770:	4631      	mov	r1, r6
 8002772:	4628      	mov	r0, r5
 8002774:	920a      	str	r2, [sp, #40]	@ 0x28
 8002776:	47b8      	blx	r7
 8002778:	3001      	adds	r0, #1
 800277a:	f43f ae9a 	beq.w	80024b2 <_printf_float+0xb6>
 800277e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002780:	f10b 0b01 	add.w	fp, fp, #1
 8002784:	e7bb      	b.n	80026fe <_printf_float+0x302>
 8002786:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800278a:	4631      	mov	r1, r6
 800278c:	4628      	mov	r0, r5
 800278e:	47b8      	blx	r7
 8002790:	3001      	adds	r0, #1
 8002792:	d1c0      	bne.n	8002716 <_printf_float+0x31a>
 8002794:	e68d      	b.n	80024b2 <_printf_float+0xb6>
 8002796:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002798:	464b      	mov	r3, r9
 800279a:	4442      	add	r2, r8
 800279c:	4631      	mov	r1, r6
 800279e:	4628      	mov	r0, r5
 80027a0:	47b8      	blx	r7
 80027a2:	3001      	adds	r0, #1
 80027a4:	d1c3      	bne.n	800272e <_printf_float+0x332>
 80027a6:	e684      	b.n	80024b2 <_printf_float+0xb6>
 80027a8:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80027ac:	f1ba 0f01 	cmp.w	sl, #1
 80027b0:	dc01      	bgt.n	80027b6 <_printf_float+0x3ba>
 80027b2:	07db      	lsls	r3, r3, #31
 80027b4:	d536      	bpl.n	8002824 <_printf_float+0x428>
 80027b6:	2301      	movs	r3, #1
 80027b8:	4642      	mov	r2, r8
 80027ba:	4631      	mov	r1, r6
 80027bc:	4628      	mov	r0, r5
 80027be:	47b8      	blx	r7
 80027c0:	3001      	adds	r0, #1
 80027c2:	f43f ae76 	beq.w	80024b2 <_printf_float+0xb6>
 80027c6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80027ca:	4631      	mov	r1, r6
 80027cc:	4628      	mov	r0, r5
 80027ce:	47b8      	blx	r7
 80027d0:	3001      	adds	r0, #1
 80027d2:	f43f ae6e 	beq.w	80024b2 <_printf_float+0xb6>
 80027d6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80027da:	2200      	movs	r2, #0
 80027dc:	2300      	movs	r3, #0
 80027de:	f10a 3aff 	add.w	sl, sl, #4294967295
 80027e2:	f7fe f991 	bl	8000b08 <__aeabi_dcmpeq>
 80027e6:	b9c0      	cbnz	r0, 800281a <_printf_float+0x41e>
 80027e8:	4653      	mov	r3, sl
 80027ea:	f108 0201 	add.w	r2, r8, #1
 80027ee:	4631      	mov	r1, r6
 80027f0:	4628      	mov	r0, r5
 80027f2:	47b8      	blx	r7
 80027f4:	3001      	adds	r0, #1
 80027f6:	d10c      	bne.n	8002812 <_printf_float+0x416>
 80027f8:	e65b      	b.n	80024b2 <_printf_float+0xb6>
 80027fa:	2301      	movs	r3, #1
 80027fc:	465a      	mov	r2, fp
 80027fe:	4631      	mov	r1, r6
 8002800:	4628      	mov	r0, r5
 8002802:	47b8      	blx	r7
 8002804:	3001      	adds	r0, #1
 8002806:	f43f ae54 	beq.w	80024b2 <_printf_float+0xb6>
 800280a:	f108 0801 	add.w	r8, r8, #1
 800280e:	45d0      	cmp	r8, sl
 8002810:	dbf3      	blt.n	80027fa <_printf_float+0x3fe>
 8002812:	464b      	mov	r3, r9
 8002814:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002818:	e6df      	b.n	80025da <_printf_float+0x1de>
 800281a:	f04f 0800 	mov.w	r8, #0
 800281e:	f104 0b1a 	add.w	fp, r4, #26
 8002822:	e7f4      	b.n	800280e <_printf_float+0x412>
 8002824:	2301      	movs	r3, #1
 8002826:	4642      	mov	r2, r8
 8002828:	e7e1      	b.n	80027ee <_printf_float+0x3f2>
 800282a:	2301      	movs	r3, #1
 800282c:	464a      	mov	r2, r9
 800282e:	4631      	mov	r1, r6
 8002830:	4628      	mov	r0, r5
 8002832:	47b8      	blx	r7
 8002834:	3001      	adds	r0, #1
 8002836:	f43f ae3c 	beq.w	80024b2 <_printf_float+0xb6>
 800283a:	f108 0801 	add.w	r8, r8, #1
 800283e:	68e3      	ldr	r3, [r4, #12]
 8002840:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002842:	1a5b      	subs	r3, r3, r1
 8002844:	4543      	cmp	r3, r8
 8002846:	dcf0      	bgt.n	800282a <_printf_float+0x42e>
 8002848:	e6fc      	b.n	8002644 <_printf_float+0x248>
 800284a:	f04f 0800 	mov.w	r8, #0
 800284e:	f104 0919 	add.w	r9, r4, #25
 8002852:	e7f4      	b.n	800283e <_printf_float+0x442>

08002854 <_printf_common>:
 8002854:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002858:	4616      	mov	r6, r2
 800285a:	4698      	mov	r8, r3
 800285c:	688a      	ldr	r2, [r1, #8]
 800285e:	690b      	ldr	r3, [r1, #16]
 8002860:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002864:	4293      	cmp	r3, r2
 8002866:	bfb8      	it	lt
 8002868:	4613      	movlt	r3, r2
 800286a:	6033      	str	r3, [r6, #0]
 800286c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002870:	4607      	mov	r7, r0
 8002872:	460c      	mov	r4, r1
 8002874:	b10a      	cbz	r2, 800287a <_printf_common+0x26>
 8002876:	3301      	adds	r3, #1
 8002878:	6033      	str	r3, [r6, #0]
 800287a:	6823      	ldr	r3, [r4, #0]
 800287c:	0699      	lsls	r1, r3, #26
 800287e:	bf42      	ittt	mi
 8002880:	6833      	ldrmi	r3, [r6, #0]
 8002882:	3302      	addmi	r3, #2
 8002884:	6033      	strmi	r3, [r6, #0]
 8002886:	6825      	ldr	r5, [r4, #0]
 8002888:	f015 0506 	ands.w	r5, r5, #6
 800288c:	d106      	bne.n	800289c <_printf_common+0x48>
 800288e:	f104 0a19 	add.w	sl, r4, #25
 8002892:	68e3      	ldr	r3, [r4, #12]
 8002894:	6832      	ldr	r2, [r6, #0]
 8002896:	1a9b      	subs	r3, r3, r2
 8002898:	42ab      	cmp	r3, r5
 800289a:	dc26      	bgt.n	80028ea <_printf_common+0x96>
 800289c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80028a0:	6822      	ldr	r2, [r4, #0]
 80028a2:	3b00      	subs	r3, #0
 80028a4:	bf18      	it	ne
 80028a6:	2301      	movne	r3, #1
 80028a8:	0692      	lsls	r2, r2, #26
 80028aa:	d42b      	bmi.n	8002904 <_printf_common+0xb0>
 80028ac:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80028b0:	4641      	mov	r1, r8
 80028b2:	4638      	mov	r0, r7
 80028b4:	47c8      	blx	r9
 80028b6:	3001      	adds	r0, #1
 80028b8:	d01e      	beq.n	80028f8 <_printf_common+0xa4>
 80028ba:	6823      	ldr	r3, [r4, #0]
 80028bc:	6922      	ldr	r2, [r4, #16]
 80028be:	f003 0306 	and.w	r3, r3, #6
 80028c2:	2b04      	cmp	r3, #4
 80028c4:	bf02      	ittt	eq
 80028c6:	68e5      	ldreq	r5, [r4, #12]
 80028c8:	6833      	ldreq	r3, [r6, #0]
 80028ca:	1aed      	subeq	r5, r5, r3
 80028cc:	68a3      	ldr	r3, [r4, #8]
 80028ce:	bf0c      	ite	eq
 80028d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80028d4:	2500      	movne	r5, #0
 80028d6:	4293      	cmp	r3, r2
 80028d8:	bfc4      	itt	gt
 80028da:	1a9b      	subgt	r3, r3, r2
 80028dc:	18ed      	addgt	r5, r5, r3
 80028de:	2600      	movs	r6, #0
 80028e0:	341a      	adds	r4, #26
 80028e2:	42b5      	cmp	r5, r6
 80028e4:	d11a      	bne.n	800291c <_printf_common+0xc8>
 80028e6:	2000      	movs	r0, #0
 80028e8:	e008      	b.n	80028fc <_printf_common+0xa8>
 80028ea:	2301      	movs	r3, #1
 80028ec:	4652      	mov	r2, sl
 80028ee:	4641      	mov	r1, r8
 80028f0:	4638      	mov	r0, r7
 80028f2:	47c8      	blx	r9
 80028f4:	3001      	adds	r0, #1
 80028f6:	d103      	bne.n	8002900 <_printf_common+0xac>
 80028f8:	f04f 30ff 	mov.w	r0, #4294967295
 80028fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002900:	3501      	adds	r5, #1
 8002902:	e7c6      	b.n	8002892 <_printf_common+0x3e>
 8002904:	18e1      	adds	r1, r4, r3
 8002906:	1c5a      	adds	r2, r3, #1
 8002908:	2030      	movs	r0, #48	@ 0x30
 800290a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800290e:	4422      	add	r2, r4
 8002910:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002914:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002918:	3302      	adds	r3, #2
 800291a:	e7c7      	b.n	80028ac <_printf_common+0x58>
 800291c:	2301      	movs	r3, #1
 800291e:	4622      	mov	r2, r4
 8002920:	4641      	mov	r1, r8
 8002922:	4638      	mov	r0, r7
 8002924:	47c8      	blx	r9
 8002926:	3001      	adds	r0, #1
 8002928:	d0e6      	beq.n	80028f8 <_printf_common+0xa4>
 800292a:	3601      	adds	r6, #1
 800292c:	e7d9      	b.n	80028e2 <_printf_common+0x8e>
	...

08002930 <_printf_i>:
 8002930:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002934:	7e0f      	ldrb	r7, [r1, #24]
 8002936:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002938:	2f78      	cmp	r7, #120	@ 0x78
 800293a:	4691      	mov	r9, r2
 800293c:	4680      	mov	r8, r0
 800293e:	460c      	mov	r4, r1
 8002940:	469a      	mov	sl, r3
 8002942:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002946:	d807      	bhi.n	8002958 <_printf_i+0x28>
 8002948:	2f62      	cmp	r7, #98	@ 0x62
 800294a:	d80a      	bhi.n	8002962 <_printf_i+0x32>
 800294c:	2f00      	cmp	r7, #0
 800294e:	f000 80d2 	beq.w	8002af6 <_printf_i+0x1c6>
 8002952:	2f58      	cmp	r7, #88	@ 0x58
 8002954:	f000 80b9 	beq.w	8002aca <_printf_i+0x19a>
 8002958:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800295c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002960:	e03a      	b.n	80029d8 <_printf_i+0xa8>
 8002962:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002966:	2b15      	cmp	r3, #21
 8002968:	d8f6      	bhi.n	8002958 <_printf_i+0x28>
 800296a:	a101      	add	r1, pc, #4	@ (adr r1, 8002970 <_printf_i+0x40>)
 800296c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002970:	080029c9 	.word	0x080029c9
 8002974:	080029dd 	.word	0x080029dd
 8002978:	08002959 	.word	0x08002959
 800297c:	08002959 	.word	0x08002959
 8002980:	08002959 	.word	0x08002959
 8002984:	08002959 	.word	0x08002959
 8002988:	080029dd 	.word	0x080029dd
 800298c:	08002959 	.word	0x08002959
 8002990:	08002959 	.word	0x08002959
 8002994:	08002959 	.word	0x08002959
 8002998:	08002959 	.word	0x08002959
 800299c:	08002add 	.word	0x08002add
 80029a0:	08002a07 	.word	0x08002a07
 80029a4:	08002a97 	.word	0x08002a97
 80029a8:	08002959 	.word	0x08002959
 80029ac:	08002959 	.word	0x08002959
 80029b0:	08002aff 	.word	0x08002aff
 80029b4:	08002959 	.word	0x08002959
 80029b8:	08002a07 	.word	0x08002a07
 80029bc:	08002959 	.word	0x08002959
 80029c0:	08002959 	.word	0x08002959
 80029c4:	08002a9f 	.word	0x08002a9f
 80029c8:	6833      	ldr	r3, [r6, #0]
 80029ca:	1d1a      	adds	r2, r3, #4
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	6032      	str	r2, [r6, #0]
 80029d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80029d4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80029d8:	2301      	movs	r3, #1
 80029da:	e09d      	b.n	8002b18 <_printf_i+0x1e8>
 80029dc:	6833      	ldr	r3, [r6, #0]
 80029de:	6820      	ldr	r0, [r4, #0]
 80029e0:	1d19      	adds	r1, r3, #4
 80029e2:	6031      	str	r1, [r6, #0]
 80029e4:	0606      	lsls	r6, r0, #24
 80029e6:	d501      	bpl.n	80029ec <_printf_i+0xbc>
 80029e8:	681d      	ldr	r5, [r3, #0]
 80029ea:	e003      	b.n	80029f4 <_printf_i+0xc4>
 80029ec:	0645      	lsls	r5, r0, #25
 80029ee:	d5fb      	bpl.n	80029e8 <_printf_i+0xb8>
 80029f0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80029f4:	2d00      	cmp	r5, #0
 80029f6:	da03      	bge.n	8002a00 <_printf_i+0xd0>
 80029f8:	232d      	movs	r3, #45	@ 0x2d
 80029fa:	426d      	negs	r5, r5
 80029fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002a00:	4859      	ldr	r0, [pc, #356]	@ (8002b68 <_printf_i+0x238>)
 8002a02:	230a      	movs	r3, #10
 8002a04:	e011      	b.n	8002a2a <_printf_i+0xfa>
 8002a06:	6821      	ldr	r1, [r4, #0]
 8002a08:	6833      	ldr	r3, [r6, #0]
 8002a0a:	0608      	lsls	r0, r1, #24
 8002a0c:	f853 5b04 	ldr.w	r5, [r3], #4
 8002a10:	d402      	bmi.n	8002a18 <_printf_i+0xe8>
 8002a12:	0649      	lsls	r1, r1, #25
 8002a14:	bf48      	it	mi
 8002a16:	b2ad      	uxthmi	r5, r5
 8002a18:	2f6f      	cmp	r7, #111	@ 0x6f
 8002a1a:	4853      	ldr	r0, [pc, #332]	@ (8002b68 <_printf_i+0x238>)
 8002a1c:	6033      	str	r3, [r6, #0]
 8002a1e:	bf14      	ite	ne
 8002a20:	230a      	movne	r3, #10
 8002a22:	2308      	moveq	r3, #8
 8002a24:	2100      	movs	r1, #0
 8002a26:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002a2a:	6866      	ldr	r6, [r4, #4]
 8002a2c:	60a6      	str	r6, [r4, #8]
 8002a2e:	2e00      	cmp	r6, #0
 8002a30:	bfa2      	ittt	ge
 8002a32:	6821      	ldrge	r1, [r4, #0]
 8002a34:	f021 0104 	bicge.w	r1, r1, #4
 8002a38:	6021      	strge	r1, [r4, #0]
 8002a3a:	b90d      	cbnz	r5, 8002a40 <_printf_i+0x110>
 8002a3c:	2e00      	cmp	r6, #0
 8002a3e:	d04b      	beq.n	8002ad8 <_printf_i+0x1a8>
 8002a40:	4616      	mov	r6, r2
 8002a42:	fbb5 f1f3 	udiv	r1, r5, r3
 8002a46:	fb03 5711 	mls	r7, r3, r1, r5
 8002a4a:	5dc7      	ldrb	r7, [r0, r7]
 8002a4c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002a50:	462f      	mov	r7, r5
 8002a52:	42bb      	cmp	r3, r7
 8002a54:	460d      	mov	r5, r1
 8002a56:	d9f4      	bls.n	8002a42 <_printf_i+0x112>
 8002a58:	2b08      	cmp	r3, #8
 8002a5a:	d10b      	bne.n	8002a74 <_printf_i+0x144>
 8002a5c:	6823      	ldr	r3, [r4, #0]
 8002a5e:	07df      	lsls	r7, r3, #31
 8002a60:	d508      	bpl.n	8002a74 <_printf_i+0x144>
 8002a62:	6923      	ldr	r3, [r4, #16]
 8002a64:	6861      	ldr	r1, [r4, #4]
 8002a66:	4299      	cmp	r1, r3
 8002a68:	bfde      	ittt	le
 8002a6a:	2330      	movle	r3, #48	@ 0x30
 8002a6c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002a70:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002a74:	1b92      	subs	r2, r2, r6
 8002a76:	6122      	str	r2, [r4, #16]
 8002a78:	f8cd a000 	str.w	sl, [sp]
 8002a7c:	464b      	mov	r3, r9
 8002a7e:	aa03      	add	r2, sp, #12
 8002a80:	4621      	mov	r1, r4
 8002a82:	4640      	mov	r0, r8
 8002a84:	f7ff fee6 	bl	8002854 <_printf_common>
 8002a88:	3001      	adds	r0, #1
 8002a8a:	d14a      	bne.n	8002b22 <_printf_i+0x1f2>
 8002a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8002a90:	b004      	add	sp, #16
 8002a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a96:	6823      	ldr	r3, [r4, #0]
 8002a98:	f043 0320 	orr.w	r3, r3, #32
 8002a9c:	6023      	str	r3, [r4, #0]
 8002a9e:	4833      	ldr	r0, [pc, #204]	@ (8002b6c <_printf_i+0x23c>)
 8002aa0:	2778      	movs	r7, #120	@ 0x78
 8002aa2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002aa6:	6823      	ldr	r3, [r4, #0]
 8002aa8:	6831      	ldr	r1, [r6, #0]
 8002aaa:	061f      	lsls	r7, r3, #24
 8002aac:	f851 5b04 	ldr.w	r5, [r1], #4
 8002ab0:	d402      	bmi.n	8002ab8 <_printf_i+0x188>
 8002ab2:	065f      	lsls	r7, r3, #25
 8002ab4:	bf48      	it	mi
 8002ab6:	b2ad      	uxthmi	r5, r5
 8002ab8:	6031      	str	r1, [r6, #0]
 8002aba:	07d9      	lsls	r1, r3, #31
 8002abc:	bf44      	itt	mi
 8002abe:	f043 0320 	orrmi.w	r3, r3, #32
 8002ac2:	6023      	strmi	r3, [r4, #0]
 8002ac4:	b11d      	cbz	r5, 8002ace <_printf_i+0x19e>
 8002ac6:	2310      	movs	r3, #16
 8002ac8:	e7ac      	b.n	8002a24 <_printf_i+0xf4>
 8002aca:	4827      	ldr	r0, [pc, #156]	@ (8002b68 <_printf_i+0x238>)
 8002acc:	e7e9      	b.n	8002aa2 <_printf_i+0x172>
 8002ace:	6823      	ldr	r3, [r4, #0]
 8002ad0:	f023 0320 	bic.w	r3, r3, #32
 8002ad4:	6023      	str	r3, [r4, #0]
 8002ad6:	e7f6      	b.n	8002ac6 <_printf_i+0x196>
 8002ad8:	4616      	mov	r6, r2
 8002ada:	e7bd      	b.n	8002a58 <_printf_i+0x128>
 8002adc:	6833      	ldr	r3, [r6, #0]
 8002ade:	6825      	ldr	r5, [r4, #0]
 8002ae0:	6961      	ldr	r1, [r4, #20]
 8002ae2:	1d18      	adds	r0, r3, #4
 8002ae4:	6030      	str	r0, [r6, #0]
 8002ae6:	062e      	lsls	r6, r5, #24
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	d501      	bpl.n	8002af0 <_printf_i+0x1c0>
 8002aec:	6019      	str	r1, [r3, #0]
 8002aee:	e002      	b.n	8002af6 <_printf_i+0x1c6>
 8002af0:	0668      	lsls	r0, r5, #25
 8002af2:	d5fb      	bpl.n	8002aec <_printf_i+0x1bc>
 8002af4:	8019      	strh	r1, [r3, #0]
 8002af6:	2300      	movs	r3, #0
 8002af8:	6123      	str	r3, [r4, #16]
 8002afa:	4616      	mov	r6, r2
 8002afc:	e7bc      	b.n	8002a78 <_printf_i+0x148>
 8002afe:	6833      	ldr	r3, [r6, #0]
 8002b00:	1d1a      	adds	r2, r3, #4
 8002b02:	6032      	str	r2, [r6, #0]
 8002b04:	681e      	ldr	r6, [r3, #0]
 8002b06:	6862      	ldr	r2, [r4, #4]
 8002b08:	2100      	movs	r1, #0
 8002b0a:	4630      	mov	r0, r6
 8002b0c:	f7fd fb80 	bl	8000210 <memchr>
 8002b10:	b108      	cbz	r0, 8002b16 <_printf_i+0x1e6>
 8002b12:	1b80      	subs	r0, r0, r6
 8002b14:	6060      	str	r0, [r4, #4]
 8002b16:	6863      	ldr	r3, [r4, #4]
 8002b18:	6123      	str	r3, [r4, #16]
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002b20:	e7aa      	b.n	8002a78 <_printf_i+0x148>
 8002b22:	6923      	ldr	r3, [r4, #16]
 8002b24:	4632      	mov	r2, r6
 8002b26:	4649      	mov	r1, r9
 8002b28:	4640      	mov	r0, r8
 8002b2a:	47d0      	blx	sl
 8002b2c:	3001      	adds	r0, #1
 8002b2e:	d0ad      	beq.n	8002a8c <_printf_i+0x15c>
 8002b30:	6823      	ldr	r3, [r4, #0]
 8002b32:	079b      	lsls	r3, r3, #30
 8002b34:	d413      	bmi.n	8002b5e <_printf_i+0x22e>
 8002b36:	68e0      	ldr	r0, [r4, #12]
 8002b38:	9b03      	ldr	r3, [sp, #12]
 8002b3a:	4298      	cmp	r0, r3
 8002b3c:	bfb8      	it	lt
 8002b3e:	4618      	movlt	r0, r3
 8002b40:	e7a6      	b.n	8002a90 <_printf_i+0x160>
 8002b42:	2301      	movs	r3, #1
 8002b44:	4632      	mov	r2, r6
 8002b46:	4649      	mov	r1, r9
 8002b48:	4640      	mov	r0, r8
 8002b4a:	47d0      	blx	sl
 8002b4c:	3001      	adds	r0, #1
 8002b4e:	d09d      	beq.n	8002a8c <_printf_i+0x15c>
 8002b50:	3501      	adds	r5, #1
 8002b52:	68e3      	ldr	r3, [r4, #12]
 8002b54:	9903      	ldr	r1, [sp, #12]
 8002b56:	1a5b      	subs	r3, r3, r1
 8002b58:	42ab      	cmp	r3, r5
 8002b5a:	dcf2      	bgt.n	8002b42 <_printf_i+0x212>
 8002b5c:	e7eb      	b.n	8002b36 <_printf_i+0x206>
 8002b5e:	2500      	movs	r5, #0
 8002b60:	f104 0619 	add.w	r6, r4, #25
 8002b64:	e7f5      	b.n	8002b52 <_printf_i+0x222>
 8002b66:	bf00      	nop
 8002b68:	08006989 	.word	0x08006989
 8002b6c:	0800699a 	.word	0x0800699a

08002b70 <_scanf_float>:
 8002b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b74:	b087      	sub	sp, #28
 8002b76:	4617      	mov	r7, r2
 8002b78:	9303      	str	r3, [sp, #12]
 8002b7a:	688b      	ldr	r3, [r1, #8]
 8002b7c:	1e5a      	subs	r2, r3, #1
 8002b7e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002b82:	bf81      	itttt	hi
 8002b84:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002b88:	eb03 0b05 	addhi.w	fp, r3, r5
 8002b8c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002b90:	608b      	strhi	r3, [r1, #8]
 8002b92:	680b      	ldr	r3, [r1, #0]
 8002b94:	460a      	mov	r2, r1
 8002b96:	f04f 0500 	mov.w	r5, #0
 8002b9a:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002b9e:	f842 3b1c 	str.w	r3, [r2], #28
 8002ba2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002ba6:	4680      	mov	r8, r0
 8002ba8:	460c      	mov	r4, r1
 8002baa:	bf98      	it	ls
 8002bac:	f04f 0b00 	movls.w	fp, #0
 8002bb0:	9201      	str	r2, [sp, #4]
 8002bb2:	4616      	mov	r6, r2
 8002bb4:	46aa      	mov	sl, r5
 8002bb6:	46a9      	mov	r9, r5
 8002bb8:	9502      	str	r5, [sp, #8]
 8002bba:	68a2      	ldr	r2, [r4, #8]
 8002bbc:	b152      	cbz	r2, 8002bd4 <_scanf_float+0x64>
 8002bbe:	683b      	ldr	r3, [r7, #0]
 8002bc0:	781b      	ldrb	r3, [r3, #0]
 8002bc2:	2b4e      	cmp	r3, #78	@ 0x4e
 8002bc4:	d864      	bhi.n	8002c90 <_scanf_float+0x120>
 8002bc6:	2b40      	cmp	r3, #64	@ 0x40
 8002bc8:	d83c      	bhi.n	8002c44 <_scanf_float+0xd4>
 8002bca:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002bce:	b2c8      	uxtb	r0, r1
 8002bd0:	280e      	cmp	r0, #14
 8002bd2:	d93a      	bls.n	8002c4a <_scanf_float+0xda>
 8002bd4:	f1b9 0f00 	cmp.w	r9, #0
 8002bd8:	d003      	beq.n	8002be2 <_scanf_float+0x72>
 8002bda:	6823      	ldr	r3, [r4, #0]
 8002bdc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002be0:	6023      	str	r3, [r4, #0]
 8002be2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002be6:	f1ba 0f01 	cmp.w	sl, #1
 8002bea:	f200 8117 	bhi.w	8002e1c <_scanf_float+0x2ac>
 8002bee:	9b01      	ldr	r3, [sp, #4]
 8002bf0:	429e      	cmp	r6, r3
 8002bf2:	f200 8108 	bhi.w	8002e06 <_scanf_float+0x296>
 8002bf6:	2001      	movs	r0, #1
 8002bf8:	b007      	add	sp, #28
 8002bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bfe:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002c02:	2a0d      	cmp	r2, #13
 8002c04:	d8e6      	bhi.n	8002bd4 <_scanf_float+0x64>
 8002c06:	a101      	add	r1, pc, #4	@ (adr r1, 8002c0c <_scanf_float+0x9c>)
 8002c08:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002c0c:	08002d53 	.word	0x08002d53
 8002c10:	08002bd5 	.word	0x08002bd5
 8002c14:	08002bd5 	.word	0x08002bd5
 8002c18:	08002bd5 	.word	0x08002bd5
 8002c1c:	08002db3 	.word	0x08002db3
 8002c20:	08002d8b 	.word	0x08002d8b
 8002c24:	08002bd5 	.word	0x08002bd5
 8002c28:	08002bd5 	.word	0x08002bd5
 8002c2c:	08002d61 	.word	0x08002d61
 8002c30:	08002bd5 	.word	0x08002bd5
 8002c34:	08002bd5 	.word	0x08002bd5
 8002c38:	08002bd5 	.word	0x08002bd5
 8002c3c:	08002bd5 	.word	0x08002bd5
 8002c40:	08002d19 	.word	0x08002d19
 8002c44:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8002c48:	e7db      	b.n	8002c02 <_scanf_float+0x92>
 8002c4a:	290e      	cmp	r1, #14
 8002c4c:	d8c2      	bhi.n	8002bd4 <_scanf_float+0x64>
 8002c4e:	a001      	add	r0, pc, #4	@ (adr r0, 8002c54 <_scanf_float+0xe4>)
 8002c50:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002c54:	08002d09 	.word	0x08002d09
 8002c58:	08002bd5 	.word	0x08002bd5
 8002c5c:	08002d09 	.word	0x08002d09
 8002c60:	08002d9f 	.word	0x08002d9f
 8002c64:	08002bd5 	.word	0x08002bd5
 8002c68:	08002cb1 	.word	0x08002cb1
 8002c6c:	08002cef 	.word	0x08002cef
 8002c70:	08002cef 	.word	0x08002cef
 8002c74:	08002cef 	.word	0x08002cef
 8002c78:	08002cef 	.word	0x08002cef
 8002c7c:	08002cef 	.word	0x08002cef
 8002c80:	08002cef 	.word	0x08002cef
 8002c84:	08002cef 	.word	0x08002cef
 8002c88:	08002cef 	.word	0x08002cef
 8002c8c:	08002cef 	.word	0x08002cef
 8002c90:	2b6e      	cmp	r3, #110	@ 0x6e
 8002c92:	d809      	bhi.n	8002ca8 <_scanf_float+0x138>
 8002c94:	2b60      	cmp	r3, #96	@ 0x60
 8002c96:	d8b2      	bhi.n	8002bfe <_scanf_float+0x8e>
 8002c98:	2b54      	cmp	r3, #84	@ 0x54
 8002c9a:	d07b      	beq.n	8002d94 <_scanf_float+0x224>
 8002c9c:	2b59      	cmp	r3, #89	@ 0x59
 8002c9e:	d199      	bne.n	8002bd4 <_scanf_float+0x64>
 8002ca0:	2d07      	cmp	r5, #7
 8002ca2:	d197      	bne.n	8002bd4 <_scanf_float+0x64>
 8002ca4:	2508      	movs	r5, #8
 8002ca6:	e02c      	b.n	8002d02 <_scanf_float+0x192>
 8002ca8:	2b74      	cmp	r3, #116	@ 0x74
 8002caa:	d073      	beq.n	8002d94 <_scanf_float+0x224>
 8002cac:	2b79      	cmp	r3, #121	@ 0x79
 8002cae:	e7f6      	b.n	8002c9e <_scanf_float+0x12e>
 8002cb0:	6821      	ldr	r1, [r4, #0]
 8002cb2:	05c8      	lsls	r0, r1, #23
 8002cb4:	d51b      	bpl.n	8002cee <_scanf_float+0x17e>
 8002cb6:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002cba:	6021      	str	r1, [r4, #0]
 8002cbc:	f109 0901 	add.w	r9, r9, #1
 8002cc0:	f1bb 0f00 	cmp.w	fp, #0
 8002cc4:	d003      	beq.n	8002cce <_scanf_float+0x15e>
 8002cc6:	3201      	adds	r2, #1
 8002cc8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002ccc:	60a2      	str	r2, [r4, #8]
 8002cce:	68a3      	ldr	r3, [r4, #8]
 8002cd0:	3b01      	subs	r3, #1
 8002cd2:	60a3      	str	r3, [r4, #8]
 8002cd4:	6923      	ldr	r3, [r4, #16]
 8002cd6:	3301      	adds	r3, #1
 8002cd8:	6123      	str	r3, [r4, #16]
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	3b01      	subs	r3, #1
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	607b      	str	r3, [r7, #4]
 8002ce2:	f340 8087 	ble.w	8002df4 <_scanf_float+0x284>
 8002ce6:	683b      	ldr	r3, [r7, #0]
 8002ce8:	3301      	adds	r3, #1
 8002cea:	603b      	str	r3, [r7, #0]
 8002cec:	e765      	b.n	8002bba <_scanf_float+0x4a>
 8002cee:	eb1a 0105 	adds.w	r1, sl, r5
 8002cf2:	f47f af6f 	bne.w	8002bd4 <_scanf_float+0x64>
 8002cf6:	6822      	ldr	r2, [r4, #0]
 8002cf8:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8002cfc:	6022      	str	r2, [r4, #0]
 8002cfe:	460d      	mov	r5, r1
 8002d00:	468a      	mov	sl, r1
 8002d02:	f806 3b01 	strb.w	r3, [r6], #1
 8002d06:	e7e2      	b.n	8002cce <_scanf_float+0x15e>
 8002d08:	6822      	ldr	r2, [r4, #0]
 8002d0a:	0610      	lsls	r0, r2, #24
 8002d0c:	f57f af62 	bpl.w	8002bd4 <_scanf_float+0x64>
 8002d10:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002d14:	6022      	str	r2, [r4, #0]
 8002d16:	e7f4      	b.n	8002d02 <_scanf_float+0x192>
 8002d18:	f1ba 0f00 	cmp.w	sl, #0
 8002d1c:	d10e      	bne.n	8002d3c <_scanf_float+0x1cc>
 8002d1e:	f1b9 0f00 	cmp.w	r9, #0
 8002d22:	d10e      	bne.n	8002d42 <_scanf_float+0x1d2>
 8002d24:	6822      	ldr	r2, [r4, #0]
 8002d26:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002d2a:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002d2e:	d108      	bne.n	8002d42 <_scanf_float+0x1d2>
 8002d30:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002d34:	6022      	str	r2, [r4, #0]
 8002d36:	f04f 0a01 	mov.w	sl, #1
 8002d3a:	e7e2      	b.n	8002d02 <_scanf_float+0x192>
 8002d3c:	f1ba 0f02 	cmp.w	sl, #2
 8002d40:	d055      	beq.n	8002dee <_scanf_float+0x27e>
 8002d42:	2d01      	cmp	r5, #1
 8002d44:	d002      	beq.n	8002d4c <_scanf_float+0x1dc>
 8002d46:	2d04      	cmp	r5, #4
 8002d48:	f47f af44 	bne.w	8002bd4 <_scanf_float+0x64>
 8002d4c:	3501      	adds	r5, #1
 8002d4e:	b2ed      	uxtb	r5, r5
 8002d50:	e7d7      	b.n	8002d02 <_scanf_float+0x192>
 8002d52:	f1ba 0f01 	cmp.w	sl, #1
 8002d56:	f47f af3d 	bne.w	8002bd4 <_scanf_float+0x64>
 8002d5a:	f04f 0a02 	mov.w	sl, #2
 8002d5e:	e7d0      	b.n	8002d02 <_scanf_float+0x192>
 8002d60:	b97d      	cbnz	r5, 8002d82 <_scanf_float+0x212>
 8002d62:	f1b9 0f00 	cmp.w	r9, #0
 8002d66:	f47f af38 	bne.w	8002bda <_scanf_float+0x6a>
 8002d6a:	6822      	ldr	r2, [r4, #0]
 8002d6c:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002d70:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002d74:	f040 8103 	bne.w	8002f7e <_scanf_float+0x40e>
 8002d78:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002d7c:	6022      	str	r2, [r4, #0]
 8002d7e:	2501      	movs	r5, #1
 8002d80:	e7bf      	b.n	8002d02 <_scanf_float+0x192>
 8002d82:	2d03      	cmp	r5, #3
 8002d84:	d0e2      	beq.n	8002d4c <_scanf_float+0x1dc>
 8002d86:	2d05      	cmp	r5, #5
 8002d88:	e7de      	b.n	8002d48 <_scanf_float+0x1d8>
 8002d8a:	2d02      	cmp	r5, #2
 8002d8c:	f47f af22 	bne.w	8002bd4 <_scanf_float+0x64>
 8002d90:	2503      	movs	r5, #3
 8002d92:	e7b6      	b.n	8002d02 <_scanf_float+0x192>
 8002d94:	2d06      	cmp	r5, #6
 8002d96:	f47f af1d 	bne.w	8002bd4 <_scanf_float+0x64>
 8002d9a:	2507      	movs	r5, #7
 8002d9c:	e7b1      	b.n	8002d02 <_scanf_float+0x192>
 8002d9e:	6822      	ldr	r2, [r4, #0]
 8002da0:	0591      	lsls	r1, r2, #22
 8002da2:	f57f af17 	bpl.w	8002bd4 <_scanf_float+0x64>
 8002da6:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002daa:	6022      	str	r2, [r4, #0]
 8002dac:	f8cd 9008 	str.w	r9, [sp, #8]
 8002db0:	e7a7      	b.n	8002d02 <_scanf_float+0x192>
 8002db2:	6822      	ldr	r2, [r4, #0]
 8002db4:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002db8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002dbc:	d006      	beq.n	8002dcc <_scanf_float+0x25c>
 8002dbe:	0550      	lsls	r0, r2, #21
 8002dc0:	f57f af08 	bpl.w	8002bd4 <_scanf_float+0x64>
 8002dc4:	f1b9 0f00 	cmp.w	r9, #0
 8002dc8:	f000 80d9 	beq.w	8002f7e <_scanf_float+0x40e>
 8002dcc:	0591      	lsls	r1, r2, #22
 8002dce:	bf58      	it	pl
 8002dd0:	9902      	ldrpl	r1, [sp, #8]
 8002dd2:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002dd6:	bf58      	it	pl
 8002dd8:	eba9 0101 	subpl.w	r1, r9, r1
 8002ddc:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002de0:	bf58      	it	pl
 8002de2:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002de6:	6022      	str	r2, [r4, #0]
 8002de8:	f04f 0900 	mov.w	r9, #0
 8002dec:	e789      	b.n	8002d02 <_scanf_float+0x192>
 8002dee:	f04f 0a03 	mov.w	sl, #3
 8002df2:	e786      	b.n	8002d02 <_scanf_float+0x192>
 8002df4:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8002df8:	4639      	mov	r1, r7
 8002dfa:	4640      	mov	r0, r8
 8002dfc:	4798      	blx	r3
 8002dfe:	2800      	cmp	r0, #0
 8002e00:	f43f aedb 	beq.w	8002bba <_scanf_float+0x4a>
 8002e04:	e6e6      	b.n	8002bd4 <_scanf_float+0x64>
 8002e06:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002e0a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002e0e:	463a      	mov	r2, r7
 8002e10:	4640      	mov	r0, r8
 8002e12:	4798      	blx	r3
 8002e14:	6923      	ldr	r3, [r4, #16]
 8002e16:	3b01      	subs	r3, #1
 8002e18:	6123      	str	r3, [r4, #16]
 8002e1a:	e6e8      	b.n	8002bee <_scanf_float+0x7e>
 8002e1c:	1e6b      	subs	r3, r5, #1
 8002e1e:	2b06      	cmp	r3, #6
 8002e20:	d824      	bhi.n	8002e6c <_scanf_float+0x2fc>
 8002e22:	2d02      	cmp	r5, #2
 8002e24:	d836      	bhi.n	8002e94 <_scanf_float+0x324>
 8002e26:	9b01      	ldr	r3, [sp, #4]
 8002e28:	429e      	cmp	r6, r3
 8002e2a:	f67f aee4 	bls.w	8002bf6 <_scanf_float+0x86>
 8002e2e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002e32:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002e36:	463a      	mov	r2, r7
 8002e38:	4640      	mov	r0, r8
 8002e3a:	4798      	blx	r3
 8002e3c:	6923      	ldr	r3, [r4, #16]
 8002e3e:	3b01      	subs	r3, #1
 8002e40:	6123      	str	r3, [r4, #16]
 8002e42:	e7f0      	b.n	8002e26 <_scanf_float+0x2b6>
 8002e44:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002e48:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8002e4c:	463a      	mov	r2, r7
 8002e4e:	4640      	mov	r0, r8
 8002e50:	4798      	blx	r3
 8002e52:	6923      	ldr	r3, [r4, #16]
 8002e54:	3b01      	subs	r3, #1
 8002e56:	6123      	str	r3, [r4, #16]
 8002e58:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002e5c:	fa5f fa8a 	uxtb.w	sl, sl
 8002e60:	f1ba 0f02 	cmp.w	sl, #2
 8002e64:	d1ee      	bne.n	8002e44 <_scanf_float+0x2d4>
 8002e66:	3d03      	subs	r5, #3
 8002e68:	b2ed      	uxtb	r5, r5
 8002e6a:	1b76      	subs	r6, r6, r5
 8002e6c:	6823      	ldr	r3, [r4, #0]
 8002e6e:	05da      	lsls	r2, r3, #23
 8002e70:	d530      	bpl.n	8002ed4 <_scanf_float+0x364>
 8002e72:	055b      	lsls	r3, r3, #21
 8002e74:	d511      	bpl.n	8002e9a <_scanf_float+0x32a>
 8002e76:	9b01      	ldr	r3, [sp, #4]
 8002e78:	429e      	cmp	r6, r3
 8002e7a:	f67f aebc 	bls.w	8002bf6 <_scanf_float+0x86>
 8002e7e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002e82:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002e86:	463a      	mov	r2, r7
 8002e88:	4640      	mov	r0, r8
 8002e8a:	4798      	blx	r3
 8002e8c:	6923      	ldr	r3, [r4, #16]
 8002e8e:	3b01      	subs	r3, #1
 8002e90:	6123      	str	r3, [r4, #16]
 8002e92:	e7f0      	b.n	8002e76 <_scanf_float+0x306>
 8002e94:	46aa      	mov	sl, r5
 8002e96:	46b3      	mov	fp, r6
 8002e98:	e7de      	b.n	8002e58 <_scanf_float+0x2e8>
 8002e9a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002e9e:	6923      	ldr	r3, [r4, #16]
 8002ea0:	2965      	cmp	r1, #101	@ 0x65
 8002ea2:	f103 33ff 	add.w	r3, r3, #4294967295
 8002ea6:	f106 35ff 	add.w	r5, r6, #4294967295
 8002eaa:	6123      	str	r3, [r4, #16]
 8002eac:	d00c      	beq.n	8002ec8 <_scanf_float+0x358>
 8002eae:	2945      	cmp	r1, #69	@ 0x45
 8002eb0:	d00a      	beq.n	8002ec8 <_scanf_float+0x358>
 8002eb2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002eb6:	463a      	mov	r2, r7
 8002eb8:	4640      	mov	r0, r8
 8002eba:	4798      	blx	r3
 8002ebc:	6923      	ldr	r3, [r4, #16]
 8002ebe:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002ec2:	3b01      	subs	r3, #1
 8002ec4:	1eb5      	subs	r5, r6, #2
 8002ec6:	6123      	str	r3, [r4, #16]
 8002ec8:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002ecc:	463a      	mov	r2, r7
 8002ece:	4640      	mov	r0, r8
 8002ed0:	4798      	blx	r3
 8002ed2:	462e      	mov	r6, r5
 8002ed4:	6822      	ldr	r2, [r4, #0]
 8002ed6:	f012 0210 	ands.w	r2, r2, #16
 8002eda:	d001      	beq.n	8002ee0 <_scanf_float+0x370>
 8002edc:	2000      	movs	r0, #0
 8002ede:	e68b      	b.n	8002bf8 <_scanf_float+0x88>
 8002ee0:	7032      	strb	r2, [r6, #0]
 8002ee2:	6823      	ldr	r3, [r4, #0]
 8002ee4:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002ee8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002eec:	d11c      	bne.n	8002f28 <_scanf_float+0x3b8>
 8002eee:	9b02      	ldr	r3, [sp, #8]
 8002ef0:	454b      	cmp	r3, r9
 8002ef2:	eba3 0209 	sub.w	r2, r3, r9
 8002ef6:	d123      	bne.n	8002f40 <_scanf_float+0x3d0>
 8002ef8:	2200      	movs	r2, #0
 8002efa:	9901      	ldr	r1, [sp, #4]
 8002efc:	4640      	mov	r0, r8
 8002efe:	f002 fbdf 	bl	80056c0 <_strtod_r>
 8002f02:	9b03      	ldr	r3, [sp, #12]
 8002f04:	6825      	ldr	r5, [r4, #0]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f015 0f02 	tst.w	r5, #2
 8002f0c:	4606      	mov	r6, r0
 8002f0e:	460f      	mov	r7, r1
 8002f10:	f103 0204 	add.w	r2, r3, #4
 8002f14:	d01f      	beq.n	8002f56 <_scanf_float+0x3e6>
 8002f16:	9903      	ldr	r1, [sp, #12]
 8002f18:	600a      	str	r2, [r1, #0]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	e9c3 6700 	strd	r6, r7, [r3]
 8002f20:	68e3      	ldr	r3, [r4, #12]
 8002f22:	3301      	adds	r3, #1
 8002f24:	60e3      	str	r3, [r4, #12]
 8002f26:	e7d9      	b.n	8002edc <_scanf_float+0x36c>
 8002f28:	9b04      	ldr	r3, [sp, #16]
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d0e4      	beq.n	8002ef8 <_scanf_float+0x388>
 8002f2e:	9905      	ldr	r1, [sp, #20]
 8002f30:	230a      	movs	r3, #10
 8002f32:	3101      	adds	r1, #1
 8002f34:	4640      	mov	r0, r8
 8002f36:	f002 fc43 	bl	80057c0 <_strtol_r>
 8002f3a:	9b04      	ldr	r3, [sp, #16]
 8002f3c:	9e05      	ldr	r6, [sp, #20]
 8002f3e:	1ac2      	subs	r2, r0, r3
 8002f40:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002f44:	429e      	cmp	r6, r3
 8002f46:	bf28      	it	cs
 8002f48:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002f4c:	490d      	ldr	r1, [pc, #52]	@ (8002f84 <_scanf_float+0x414>)
 8002f4e:	4630      	mov	r0, r6
 8002f50:	f000 f8de 	bl	8003110 <siprintf>
 8002f54:	e7d0      	b.n	8002ef8 <_scanf_float+0x388>
 8002f56:	076d      	lsls	r5, r5, #29
 8002f58:	d4dd      	bmi.n	8002f16 <_scanf_float+0x3a6>
 8002f5a:	9d03      	ldr	r5, [sp, #12]
 8002f5c:	602a      	str	r2, [r5, #0]
 8002f5e:	681d      	ldr	r5, [r3, #0]
 8002f60:	4602      	mov	r2, r0
 8002f62:	460b      	mov	r3, r1
 8002f64:	f7fd fe02 	bl	8000b6c <__aeabi_dcmpun>
 8002f68:	b120      	cbz	r0, 8002f74 <_scanf_float+0x404>
 8002f6a:	4807      	ldr	r0, [pc, #28]	@ (8002f88 <_scanf_float+0x418>)
 8002f6c:	f000 f9b4 	bl	80032d8 <nanf>
 8002f70:	6028      	str	r0, [r5, #0]
 8002f72:	e7d5      	b.n	8002f20 <_scanf_float+0x3b0>
 8002f74:	4630      	mov	r0, r6
 8002f76:	4639      	mov	r1, r7
 8002f78:	f7fd fe56 	bl	8000c28 <__aeabi_d2f>
 8002f7c:	e7f8      	b.n	8002f70 <_scanf_float+0x400>
 8002f7e:	f04f 0900 	mov.w	r9, #0
 8002f82:	e62e      	b.n	8002be2 <_scanf_float+0x72>
 8002f84:	080069ab 	.word	0x080069ab
 8002f88:	08006d45 	.word	0x08006d45

08002f8c <std>:
 8002f8c:	2300      	movs	r3, #0
 8002f8e:	b510      	push	{r4, lr}
 8002f90:	4604      	mov	r4, r0
 8002f92:	e9c0 3300 	strd	r3, r3, [r0]
 8002f96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002f9a:	6083      	str	r3, [r0, #8]
 8002f9c:	8181      	strh	r1, [r0, #12]
 8002f9e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002fa0:	81c2      	strh	r2, [r0, #14]
 8002fa2:	6183      	str	r3, [r0, #24]
 8002fa4:	4619      	mov	r1, r3
 8002fa6:	2208      	movs	r2, #8
 8002fa8:	305c      	adds	r0, #92	@ 0x5c
 8002faa:	f000 f914 	bl	80031d6 <memset>
 8002fae:	4b0d      	ldr	r3, [pc, #52]	@ (8002fe4 <std+0x58>)
 8002fb0:	6263      	str	r3, [r4, #36]	@ 0x24
 8002fb2:	4b0d      	ldr	r3, [pc, #52]	@ (8002fe8 <std+0x5c>)
 8002fb4:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002fb6:	4b0d      	ldr	r3, [pc, #52]	@ (8002fec <std+0x60>)
 8002fb8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002fba:	4b0d      	ldr	r3, [pc, #52]	@ (8002ff0 <std+0x64>)
 8002fbc:	6323      	str	r3, [r4, #48]	@ 0x30
 8002fbe:	4b0d      	ldr	r3, [pc, #52]	@ (8002ff4 <std+0x68>)
 8002fc0:	6224      	str	r4, [r4, #32]
 8002fc2:	429c      	cmp	r4, r3
 8002fc4:	d006      	beq.n	8002fd4 <std+0x48>
 8002fc6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002fca:	4294      	cmp	r4, r2
 8002fcc:	d002      	beq.n	8002fd4 <std+0x48>
 8002fce:	33d0      	adds	r3, #208	@ 0xd0
 8002fd0:	429c      	cmp	r4, r3
 8002fd2:	d105      	bne.n	8002fe0 <std+0x54>
 8002fd4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002fd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002fdc:	f000 b978 	b.w	80032d0 <__retarget_lock_init_recursive>
 8002fe0:	bd10      	pop	{r4, pc}
 8002fe2:	bf00      	nop
 8002fe4:	08003151 	.word	0x08003151
 8002fe8:	08003173 	.word	0x08003173
 8002fec:	080031ab 	.word	0x080031ab
 8002ff0:	080031cf 	.word	0x080031cf
 8002ff4:	20000274 	.word	0x20000274

08002ff8 <stdio_exit_handler>:
 8002ff8:	4a02      	ldr	r2, [pc, #8]	@ (8003004 <stdio_exit_handler+0xc>)
 8002ffa:	4903      	ldr	r1, [pc, #12]	@ (8003008 <stdio_exit_handler+0x10>)
 8002ffc:	4803      	ldr	r0, [pc, #12]	@ (800300c <stdio_exit_handler+0x14>)
 8002ffe:	f000 b869 	b.w	80030d4 <_fwalk_sglue>
 8003002:	bf00      	nop
 8003004:	20000020 	.word	0x20000020
 8003008:	08005b75 	.word	0x08005b75
 800300c:	20000030 	.word	0x20000030

08003010 <cleanup_stdio>:
 8003010:	6841      	ldr	r1, [r0, #4]
 8003012:	4b0c      	ldr	r3, [pc, #48]	@ (8003044 <cleanup_stdio+0x34>)
 8003014:	4299      	cmp	r1, r3
 8003016:	b510      	push	{r4, lr}
 8003018:	4604      	mov	r4, r0
 800301a:	d001      	beq.n	8003020 <cleanup_stdio+0x10>
 800301c:	f002 fdaa 	bl	8005b74 <_fflush_r>
 8003020:	68a1      	ldr	r1, [r4, #8]
 8003022:	4b09      	ldr	r3, [pc, #36]	@ (8003048 <cleanup_stdio+0x38>)
 8003024:	4299      	cmp	r1, r3
 8003026:	d002      	beq.n	800302e <cleanup_stdio+0x1e>
 8003028:	4620      	mov	r0, r4
 800302a:	f002 fda3 	bl	8005b74 <_fflush_r>
 800302e:	68e1      	ldr	r1, [r4, #12]
 8003030:	4b06      	ldr	r3, [pc, #24]	@ (800304c <cleanup_stdio+0x3c>)
 8003032:	4299      	cmp	r1, r3
 8003034:	d004      	beq.n	8003040 <cleanup_stdio+0x30>
 8003036:	4620      	mov	r0, r4
 8003038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800303c:	f002 bd9a 	b.w	8005b74 <_fflush_r>
 8003040:	bd10      	pop	{r4, pc}
 8003042:	bf00      	nop
 8003044:	20000274 	.word	0x20000274
 8003048:	200002dc 	.word	0x200002dc
 800304c:	20000344 	.word	0x20000344

08003050 <global_stdio_init.part.0>:
 8003050:	b510      	push	{r4, lr}
 8003052:	4b0b      	ldr	r3, [pc, #44]	@ (8003080 <global_stdio_init.part.0+0x30>)
 8003054:	4c0b      	ldr	r4, [pc, #44]	@ (8003084 <global_stdio_init.part.0+0x34>)
 8003056:	4a0c      	ldr	r2, [pc, #48]	@ (8003088 <global_stdio_init.part.0+0x38>)
 8003058:	601a      	str	r2, [r3, #0]
 800305a:	4620      	mov	r0, r4
 800305c:	2200      	movs	r2, #0
 800305e:	2104      	movs	r1, #4
 8003060:	f7ff ff94 	bl	8002f8c <std>
 8003064:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8003068:	2201      	movs	r2, #1
 800306a:	2109      	movs	r1, #9
 800306c:	f7ff ff8e 	bl	8002f8c <std>
 8003070:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8003074:	2202      	movs	r2, #2
 8003076:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800307a:	2112      	movs	r1, #18
 800307c:	f7ff bf86 	b.w	8002f8c <std>
 8003080:	200003ac 	.word	0x200003ac
 8003084:	20000274 	.word	0x20000274
 8003088:	08002ff9 	.word	0x08002ff9

0800308c <__sfp_lock_acquire>:
 800308c:	4801      	ldr	r0, [pc, #4]	@ (8003094 <__sfp_lock_acquire+0x8>)
 800308e:	f000 b920 	b.w	80032d2 <__retarget_lock_acquire_recursive>
 8003092:	bf00      	nop
 8003094:	200003b5 	.word	0x200003b5

08003098 <__sfp_lock_release>:
 8003098:	4801      	ldr	r0, [pc, #4]	@ (80030a0 <__sfp_lock_release+0x8>)
 800309a:	f000 b91b 	b.w	80032d4 <__retarget_lock_release_recursive>
 800309e:	bf00      	nop
 80030a0:	200003b5 	.word	0x200003b5

080030a4 <__sinit>:
 80030a4:	b510      	push	{r4, lr}
 80030a6:	4604      	mov	r4, r0
 80030a8:	f7ff fff0 	bl	800308c <__sfp_lock_acquire>
 80030ac:	6a23      	ldr	r3, [r4, #32]
 80030ae:	b11b      	cbz	r3, 80030b8 <__sinit+0x14>
 80030b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030b4:	f7ff bff0 	b.w	8003098 <__sfp_lock_release>
 80030b8:	4b04      	ldr	r3, [pc, #16]	@ (80030cc <__sinit+0x28>)
 80030ba:	6223      	str	r3, [r4, #32]
 80030bc:	4b04      	ldr	r3, [pc, #16]	@ (80030d0 <__sinit+0x2c>)
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d1f5      	bne.n	80030b0 <__sinit+0xc>
 80030c4:	f7ff ffc4 	bl	8003050 <global_stdio_init.part.0>
 80030c8:	e7f2      	b.n	80030b0 <__sinit+0xc>
 80030ca:	bf00      	nop
 80030cc:	08003011 	.word	0x08003011
 80030d0:	200003ac 	.word	0x200003ac

080030d4 <_fwalk_sglue>:
 80030d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80030d8:	4607      	mov	r7, r0
 80030da:	4688      	mov	r8, r1
 80030dc:	4614      	mov	r4, r2
 80030de:	2600      	movs	r6, #0
 80030e0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80030e4:	f1b9 0901 	subs.w	r9, r9, #1
 80030e8:	d505      	bpl.n	80030f6 <_fwalk_sglue+0x22>
 80030ea:	6824      	ldr	r4, [r4, #0]
 80030ec:	2c00      	cmp	r4, #0
 80030ee:	d1f7      	bne.n	80030e0 <_fwalk_sglue+0xc>
 80030f0:	4630      	mov	r0, r6
 80030f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80030f6:	89ab      	ldrh	r3, [r5, #12]
 80030f8:	2b01      	cmp	r3, #1
 80030fa:	d907      	bls.n	800310c <_fwalk_sglue+0x38>
 80030fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003100:	3301      	adds	r3, #1
 8003102:	d003      	beq.n	800310c <_fwalk_sglue+0x38>
 8003104:	4629      	mov	r1, r5
 8003106:	4638      	mov	r0, r7
 8003108:	47c0      	blx	r8
 800310a:	4306      	orrs	r6, r0
 800310c:	3568      	adds	r5, #104	@ 0x68
 800310e:	e7e9      	b.n	80030e4 <_fwalk_sglue+0x10>

08003110 <siprintf>:
 8003110:	b40e      	push	{r1, r2, r3}
 8003112:	b500      	push	{lr}
 8003114:	b09c      	sub	sp, #112	@ 0x70
 8003116:	ab1d      	add	r3, sp, #116	@ 0x74
 8003118:	9002      	str	r0, [sp, #8]
 800311a:	9006      	str	r0, [sp, #24]
 800311c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003120:	4809      	ldr	r0, [pc, #36]	@ (8003148 <siprintf+0x38>)
 8003122:	9107      	str	r1, [sp, #28]
 8003124:	9104      	str	r1, [sp, #16]
 8003126:	4909      	ldr	r1, [pc, #36]	@ (800314c <siprintf+0x3c>)
 8003128:	f853 2b04 	ldr.w	r2, [r3], #4
 800312c:	9105      	str	r1, [sp, #20]
 800312e:	6800      	ldr	r0, [r0, #0]
 8003130:	9301      	str	r3, [sp, #4]
 8003132:	a902      	add	r1, sp, #8
 8003134:	f002 fba2 	bl	800587c <_svfiprintf_r>
 8003138:	9b02      	ldr	r3, [sp, #8]
 800313a:	2200      	movs	r2, #0
 800313c:	701a      	strb	r2, [r3, #0]
 800313e:	b01c      	add	sp, #112	@ 0x70
 8003140:	f85d eb04 	ldr.w	lr, [sp], #4
 8003144:	b003      	add	sp, #12
 8003146:	4770      	bx	lr
 8003148:	2000002c 	.word	0x2000002c
 800314c:	ffff0208 	.word	0xffff0208

08003150 <__sread>:
 8003150:	b510      	push	{r4, lr}
 8003152:	460c      	mov	r4, r1
 8003154:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003158:	f000 f86c 	bl	8003234 <_read_r>
 800315c:	2800      	cmp	r0, #0
 800315e:	bfab      	itete	ge
 8003160:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003162:	89a3      	ldrhlt	r3, [r4, #12]
 8003164:	181b      	addge	r3, r3, r0
 8003166:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800316a:	bfac      	ite	ge
 800316c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800316e:	81a3      	strhlt	r3, [r4, #12]
 8003170:	bd10      	pop	{r4, pc}

08003172 <__swrite>:
 8003172:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003176:	461f      	mov	r7, r3
 8003178:	898b      	ldrh	r3, [r1, #12]
 800317a:	05db      	lsls	r3, r3, #23
 800317c:	4605      	mov	r5, r0
 800317e:	460c      	mov	r4, r1
 8003180:	4616      	mov	r6, r2
 8003182:	d505      	bpl.n	8003190 <__swrite+0x1e>
 8003184:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003188:	2302      	movs	r3, #2
 800318a:	2200      	movs	r2, #0
 800318c:	f000 f840 	bl	8003210 <_lseek_r>
 8003190:	89a3      	ldrh	r3, [r4, #12]
 8003192:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003196:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800319a:	81a3      	strh	r3, [r4, #12]
 800319c:	4632      	mov	r2, r6
 800319e:	463b      	mov	r3, r7
 80031a0:	4628      	mov	r0, r5
 80031a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80031a6:	f000 b857 	b.w	8003258 <_write_r>

080031aa <__sseek>:
 80031aa:	b510      	push	{r4, lr}
 80031ac:	460c      	mov	r4, r1
 80031ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80031b2:	f000 f82d 	bl	8003210 <_lseek_r>
 80031b6:	1c43      	adds	r3, r0, #1
 80031b8:	89a3      	ldrh	r3, [r4, #12]
 80031ba:	bf15      	itete	ne
 80031bc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80031be:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80031c2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80031c6:	81a3      	strheq	r3, [r4, #12]
 80031c8:	bf18      	it	ne
 80031ca:	81a3      	strhne	r3, [r4, #12]
 80031cc:	bd10      	pop	{r4, pc}

080031ce <__sclose>:
 80031ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80031d2:	f000 b80d 	b.w	80031f0 <_close_r>

080031d6 <memset>:
 80031d6:	4402      	add	r2, r0
 80031d8:	4603      	mov	r3, r0
 80031da:	4293      	cmp	r3, r2
 80031dc:	d100      	bne.n	80031e0 <memset+0xa>
 80031de:	4770      	bx	lr
 80031e0:	f803 1b01 	strb.w	r1, [r3], #1
 80031e4:	e7f9      	b.n	80031da <memset+0x4>
	...

080031e8 <_localeconv_r>:
 80031e8:	4800      	ldr	r0, [pc, #0]	@ (80031ec <_localeconv_r+0x4>)
 80031ea:	4770      	bx	lr
 80031ec:	2000016c 	.word	0x2000016c

080031f0 <_close_r>:
 80031f0:	b538      	push	{r3, r4, r5, lr}
 80031f2:	4d06      	ldr	r5, [pc, #24]	@ (800320c <_close_r+0x1c>)
 80031f4:	2300      	movs	r3, #0
 80031f6:	4604      	mov	r4, r0
 80031f8:	4608      	mov	r0, r1
 80031fa:	602b      	str	r3, [r5, #0]
 80031fc:	f7fe f9d7 	bl	80015ae <_close>
 8003200:	1c43      	adds	r3, r0, #1
 8003202:	d102      	bne.n	800320a <_close_r+0x1a>
 8003204:	682b      	ldr	r3, [r5, #0]
 8003206:	b103      	cbz	r3, 800320a <_close_r+0x1a>
 8003208:	6023      	str	r3, [r4, #0]
 800320a:	bd38      	pop	{r3, r4, r5, pc}
 800320c:	200003b0 	.word	0x200003b0

08003210 <_lseek_r>:
 8003210:	b538      	push	{r3, r4, r5, lr}
 8003212:	4d07      	ldr	r5, [pc, #28]	@ (8003230 <_lseek_r+0x20>)
 8003214:	4604      	mov	r4, r0
 8003216:	4608      	mov	r0, r1
 8003218:	4611      	mov	r1, r2
 800321a:	2200      	movs	r2, #0
 800321c:	602a      	str	r2, [r5, #0]
 800321e:	461a      	mov	r2, r3
 8003220:	f7fe f9e9 	bl	80015f6 <_lseek>
 8003224:	1c43      	adds	r3, r0, #1
 8003226:	d102      	bne.n	800322e <_lseek_r+0x1e>
 8003228:	682b      	ldr	r3, [r5, #0]
 800322a:	b103      	cbz	r3, 800322e <_lseek_r+0x1e>
 800322c:	6023      	str	r3, [r4, #0]
 800322e:	bd38      	pop	{r3, r4, r5, pc}
 8003230:	200003b0 	.word	0x200003b0

08003234 <_read_r>:
 8003234:	b538      	push	{r3, r4, r5, lr}
 8003236:	4d07      	ldr	r5, [pc, #28]	@ (8003254 <_read_r+0x20>)
 8003238:	4604      	mov	r4, r0
 800323a:	4608      	mov	r0, r1
 800323c:	4611      	mov	r1, r2
 800323e:	2200      	movs	r2, #0
 8003240:	602a      	str	r2, [r5, #0]
 8003242:	461a      	mov	r2, r3
 8003244:	f7fe f97a 	bl	800153c <_read>
 8003248:	1c43      	adds	r3, r0, #1
 800324a:	d102      	bne.n	8003252 <_read_r+0x1e>
 800324c:	682b      	ldr	r3, [r5, #0]
 800324e:	b103      	cbz	r3, 8003252 <_read_r+0x1e>
 8003250:	6023      	str	r3, [r4, #0]
 8003252:	bd38      	pop	{r3, r4, r5, pc}
 8003254:	200003b0 	.word	0x200003b0

08003258 <_write_r>:
 8003258:	b538      	push	{r3, r4, r5, lr}
 800325a:	4d07      	ldr	r5, [pc, #28]	@ (8003278 <_write_r+0x20>)
 800325c:	4604      	mov	r4, r0
 800325e:	4608      	mov	r0, r1
 8003260:	4611      	mov	r1, r2
 8003262:	2200      	movs	r2, #0
 8003264:	602a      	str	r2, [r5, #0]
 8003266:	461a      	mov	r2, r3
 8003268:	f7fe f985 	bl	8001576 <_write>
 800326c:	1c43      	adds	r3, r0, #1
 800326e:	d102      	bne.n	8003276 <_write_r+0x1e>
 8003270:	682b      	ldr	r3, [r5, #0]
 8003272:	b103      	cbz	r3, 8003276 <_write_r+0x1e>
 8003274:	6023      	str	r3, [r4, #0]
 8003276:	bd38      	pop	{r3, r4, r5, pc}
 8003278:	200003b0 	.word	0x200003b0

0800327c <__errno>:
 800327c:	4b01      	ldr	r3, [pc, #4]	@ (8003284 <__errno+0x8>)
 800327e:	6818      	ldr	r0, [r3, #0]
 8003280:	4770      	bx	lr
 8003282:	bf00      	nop
 8003284:	2000002c 	.word	0x2000002c

08003288 <__libc_init_array>:
 8003288:	b570      	push	{r4, r5, r6, lr}
 800328a:	4d0d      	ldr	r5, [pc, #52]	@ (80032c0 <__libc_init_array+0x38>)
 800328c:	4c0d      	ldr	r4, [pc, #52]	@ (80032c4 <__libc_init_array+0x3c>)
 800328e:	1b64      	subs	r4, r4, r5
 8003290:	10a4      	asrs	r4, r4, #2
 8003292:	2600      	movs	r6, #0
 8003294:	42a6      	cmp	r6, r4
 8003296:	d109      	bne.n	80032ac <__libc_init_array+0x24>
 8003298:	4d0b      	ldr	r5, [pc, #44]	@ (80032c8 <__libc_init_array+0x40>)
 800329a:	4c0c      	ldr	r4, [pc, #48]	@ (80032cc <__libc_init_array+0x44>)
 800329c:	f003 fb56 	bl	800694c <_init>
 80032a0:	1b64      	subs	r4, r4, r5
 80032a2:	10a4      	asrs	r4, r4, #2
 80032a4:	2600      	movs	r6, #0
 80032a6:	42a6      	cmp	r6, r4
 80032a8:	d105      	bne.n	80032b6 <__libc_init_array+0x2e>
 80032aa:	bd70      	pop	{r4, r5, r6, pc}
 80032ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80032b0:	4798      	blx	r3
 80032b2:	3601      	adds	r6, #1
 80032b4:	e7ee      	b.n	8003294 <__libc_init_array+0xc>
 80032b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80032ba:	4798      	blx	r3
 80032bc:	3601      	adds	r6, #1
 80032be:	e7f2      	b.n	80032a6 <__libc_init_array+0x1e>
 80032c0:	08006db0 	.word	0x08006db0
 80032c4:	08006db0 	.word	0x08006db0
 80032c8:	08006db0 	.word	0x08006db0
 80032cc:	08006db4 	.word	0x08006db4

080032d0 <__retarget_lock_init_recursive>:
 80032d0:	4770      	bx	lr

080032d2 <__retarget_lock_acquire_recursive>:
 80032d2:	4770      	bx	lr

080032d4 <__retarget_lock_release_recursive>:
 80032d4:	4770      	bx	lr
	...

080032d8 <nanf>:
 80032d8:	4800      	ldr	r0, [pc, #0]	@ (80032dc <nanf+0x4>)
 80032da:	4770      	bx	lr
 80032dc:	7fc00000 	.word	0x7fc00000

080032e0 <quorem>:
 80032e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032e4:	6903      	ldr	r3, [r0, #16]
 80032e6:	690c      	ldr	r4, [r1, #16]
 80032e8:	42a3      	cmp	r3, r4
 80032ea:	4607      	mov	r7, r0
 80032ec:	db7e      	blt.n	80033ec <quorem+0x10c>
 80032ee:	3c01      	subs	r4, #1
 80032f0:	f101 0814 	add.w	r8, r1, #20
 80032f4:	00a3      	lsls	r3, r4, #2
 80032f6:	f100 0514 	add.w	r5, r0, #20
 80032fa:	9300      	str	r3, [sp, #0]
 80032fc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003300:	9301      	str	r3, [sp, #4]
 8003302:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003306:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800330a:	3301      	adds	r3, #1
 800330c:	429a      	cmp	r2, r3
 800330e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003312:	fbb2 f6f3 	udiv	r6, r2, r3
 8003316:	d32e      	bcc.n	8003376 <quorem+0x96>
 8003318:	f04f 0a00 	mov.w	sl, #0
 800331c:	46c4      	mov	ip, r8
 800331e:	46ae      	mov	lr, r5
 8003320:	46d3      	mov	fp, sl
 8003322:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003326:	b298      	uxth	r0, r3
 8003328:	fb06 a000 	mla	r0, r6, r0, sl
 800332c:	0c02      	lsrs	r2, r0, #16
 800332e:	0c1b      	lsrs	r3, r3, #16
 8003330:	fb06 2303 	mla	r3, r6, r3, r2
 8003334:	f8de 2000 	ldr.w	r2, [lr]
 8003338:	b280      	uxth	r0, r0
 800333a:	b292      	uxth	r2, r2
 800333c:	1a12      	subs	r2, r2, r0
 800333e:	445a      	add	r2, fp
 8003340:	f8de 0000 	ldr.w	r0, [lr]
 8003344:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003348:	b29b      	uxth	r3, r3
 800334a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800334e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8003352:	b292      	uxth	r2, r2
 8003354:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003358:	45e1      	cmp	r9, ip
 800335a:	f84e 2b04 	str.w	r2, [lr], #4
 800335e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8003362:	d2de      	bcs.n	8003322 <quorem+0x42>
 8003364:	9b00      	ldr	r3, [sp, #0]
 8003366:	58eb      	ldr	r3, [r5, r3]
 8003368:	b92b      	cbnz	r3, 8003376 <quorem+0x96>
 800336a:	9b01      	ldr	r3, [sp, #4]
 800336c:	3b04      	subs	r3, #4
 800336e:	429d      	cmp	r5, r3
 8003370:	461a      	mov	r2, r3
 8003372:	d32f      	bcc.n	80033d4 <quorem+0xf4>
 8003374:	613c      	str	r4, [r7, #16]
 8003376:	4638      	mov	r0, r7
 8003378:	f001 f9c6 	bl	8004708 <__mcmp>
 800337c:	2800      	cmp	r0, #0
 800337e:	db25      	blt.n	80033cc <quorem+0xec>
 8003380:	4629      	mov	r1, r5
 8003382:	2000      	movs	r0, #0
 8003384:	f858 2b04 	ldr.w	r2, [r8], #4
 8003388:	f8d1 c000 	ldr.w	ip, [r1]
 800338c:	fa1f fe82 	uxth.w	lr, r2
 8003390:	fa1f f38c 	uxth.w	r3, ip
 8003394:	eba3 030e 	sub.w	r3, r3, lr
 8003398:	4403      	add	r3, r0
 800339a:	0c12      	lsrs	r2, r2, #16
 800339c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80033a0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80033a4:	b29b      	uxth	r3, r3
 80033a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80033aa:	45c1      	cmp	r9, r8
 80033ac:	f841 3b04 	str.w	r3, [r1], #4
 80033b0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80033b4:	d2e6      	bcs.n	8003384 <quorem+0xa4>
 80033b6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80033ba:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80033be:	b922      	cbnz	r2, 80033ca <quorem+0xea>
 80033c0:	3b04      	subs	r3, #4
 80033c2:	429d      	cmp	r5, r3
 80033c4:	461a      	mov	r2, r3
 80033c6:	d30b      	bcc.n	80033e0 <quorem+0x100>
 80033c8:	613c      	str	r4, [r7, #16]
 80033ca:	3601      	adds	r6, #1
 80033cc:	4630      	mov	r0, r6
 80033ce:	b003      	add	sp, #12
 80033d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033d4:	6812      	ldr	r2, [r2, #0]
 80033d6:	3b04      	subs	r3, #4
 80033d8:	2a00      	cmp	r2, #0
 80033da:	d1cb      	bne.n	8003374 <quorem+0x94>
 80033dc:	3c01      	subs	r4, #1
 80033de:	e7c6      	b.n	800336e <quorem+0x8e>
 80033e0:	6812      	ldr	r2, [r2, #0]
 80033e2:	3b04      	subs	r3, #4
 80033e4:	2a00      	cmp	r2, #0
 80033e6:	d1ef      	bne.n	80033c8 <quorem+0xe8>
 80033e8:	3c01      	subs	r4, #1
 80033ea:	e7ea      	b.n	80033c2 <quorem+0xe2>
 80033ec:	2000      	movs	r0, #0
 80033ee:	e7ee      	b.n	80033ce <quorem+0xee>

080033f0 <_dtoa_r>:
 80033f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033f4:	69c7      	ldr	r7, [r0, #28]
 80033f6:	b097      	sub	sp, #92	@ 0x5c
 80033f8:	4614      	mov	r4, r2
 80033fa:	461d      	mov	r5, r3
 80033fc:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8003400:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8003402:	4683      	mov	fp, r0
 8003404:	b97f      	cbnz	r7, 8003426 <_dtoa_r+0x36>
 8003406:	2010      	movs	r0, #16
 8003408:	f000 fe04 	bl	8004014 <malloc>
 800340c:	4602      	mov	r2, r0
 800340e:	f8cb 001c 	str.w	r0, [fp, #28]
 8003412:	b920      	cbnz	r0, 800341e <_dtoa_r+0x2e>
 8003414:	4ba8      	ldr	r3, [pc, #672]	@ (80036b8 <_dtoa_r+0x2c8>)
 8003416:	21ef      	movs	r1, #239	@ 0xef
 8003418:	48a8      	ldr	r0, [pc, #672]	@ (80036bc <_dtoa_r+0x2cc>)
 800341a:	f002 fc23 	bl	8005c64 <__assert_func>
 800341e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8003422:	6007      	str	r7, [r0, #0]
 8003424:	60c7      	str	r7, [r0, #12]
 8003426:	f8db 301c 	ldr.w	r3, [fp, #28]
 800342a:	6819      	ldr	r1, [r3, #0]
 800342c:	b159      	cbz	r1, 8003446 <_dtoa_r+0x56>
 800342e:	685a      	ldr	r2, [r3, #4]
 8003430:	604a      	str	r2, [r1, #4]
 8003432:	2301      	movs	r3, #1
 8003434:	4093      	lsls	r3, r2
 8003436:	608b      	str	r3, [r1, #8]
 8003438:	4658      	mov	r0, fp
 800343a:	f000 fee1 	bl	8004200 <_Bfree>
 800343e:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003442:	2200      	movs	r2, #0
 8003444:	601a      	str	r2, [r3, #0]
 8003446:	1e2b      	subs	r3, r5, #0
 8003448:	bfb9      	ittee	lt
 800344a:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800344e:	9303      	strlt	r3, [sp, #12]
 8003450:	2300      	movge	r3, #0
 8003452:	6033      	strge	r3, [r6, #0]
 8003454:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003458:	4b99      	ldr	r3, [pc, #612]	@ (80036c0 <_dtoa_r+0x2d0>)
 800345a:	bfbc      	itt	lt
 800345c:	2201      	movlt	r2, #1
 800345e:	6032      	strlt	r2, [r6, #0]
 8003460:	ea33 0308 	bics.w	r3, r3, r8
 8003464:	d112      	bne.n	800348c <_dtoa_r+0x9c>
 8003466:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8003468:	f242 730f 	movw	r3, #9999	@ 0x270f
 800346c:	6013      	str	r3, [r2, #0]
 800346e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8003472:	4323      	orrs	r3, r4
 8003474:	f000 8551 	beq.w	8003f1a <_dtoa_r+0xb2a>
 8003478:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800347a:	f8df a248 	ldr.w	sl, [pc, #584]	@ 80036c4 <_dtoa_r+0x2d4>
 800347e:	2b00      	cmp	r3, #0
 8003480:	f000 8553 	beq.w	8003f2a <_dtoa_r+0xb3a>
 8003484:	f10a 0303 	add.w	r3, sl, #3
 8003488:	f000 bd4d 	b.w	8003f26 <_dtoa_r+0xb36>
 800348c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003490:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8003494:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003498:	2200      	movs	r2, #0
 800349a:	2300      	movs	r3, #0
 800349c:	f7fd fb34 	bl	8000b08 <__aeabi_dcmpeq>
 80034a0:	4607      	mov	r7, r0
 80034a2:	b158      	cbz	r0, 80034bc <_dtoa_r+0xcc>
 80034a4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80034a6:	2301      	movs	r3, #1
 80034a8:	6013      	str	r3, [r2, #0]
 80034aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80034ac:	b113      	cbz	r3, 80034b4 <_dtoa_r+0xc4>
 80034ae:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80034b0:	4b85      	ldr	r3, [pc, #532]	@ (80036c8 <_dtoa_r+0x2d8>)
 80034b2:	6013      	str	r3, [r2, #0]
 80034b4:	f8df a214 	ldr.w	sl, [pc, #532]	@ 80036cc <_dtoa_r+0x2dc>
 80034b8:	f000 bd37 	b.w	8003f2a <_dtoa_r+0xb3a>
 80034bc:	ab14      	add	r3, sp, #80	@ 0x50
 80034be:	9301      	str	r3, [sp, #4]
 80034c0:	ab15      	add	r3, sp, #84	@ 0x54
 80034c2:	9300      	str	r3, [sp, #0]
 80034c4:	4658      	mov	r0, fp
 80034c6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80034ca:	f001 fa35 	bl	8004938 <__d2b>
 80034ce:	f3c8 560a 	ubfx	r6, r8, #20, #11
 80034d2:	4681      	mov	r9, r0
 80034d4:	2e00      	cmp	r6, #0
 80034d6:	d076      	beq.n	80035c6 <_dtoa_r+0x1d6>
 80034d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80034da:	9712      	str	r7, [sp, #72]	@ 0x48
 80034dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80034e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80034e4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80034e8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80034ec:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80034f0:	4619      	mov	r1, r3
 80034f2:	2200      	movs	r2, #0
 80034f4:	4b76      	ldr	r3, [pc, #472]	@ (80036d0 <_dtoa_r+0x2e0>)
 80034f6:	f7fc fee7 	bl	80002c8 <__aeabi_dsub>
 80034fa:	a369      	add	r3, pc, #420	@ (adr r3, 80036a0 <_dtoa_r+0x2b0>)
 80034fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003500:	f7fd f89a 	bl	8000638 <__aeabi_dmul>
 8003504:	a368      	add	r3, pc, #416	@ (adr r3, 80036a8 <_dtoa_r+0x2b8>)
 8003506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800350a:	f7fc fedf 	bl	80002cc <__adddf3>
 800350e:	4604      	mov	r4, r0
 8003510:	4630      	mov	r0, r6
 8003512:	460d      	mov	r5, r1
 8003514:	f7fd f826 	bl	8000564 <__aeabi_i2d>
 8003518:	a365      	add	r3, pc, #404	@ (adr r3, 80036b0 <_dtoa_r+0x2c0>)
 800351a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800351e:	f7fd f88b 	bl	8000638 <__aeabi_dmul>
 8003522:	4602      	mov	r2, r0
 8003524:	460b      	mov	r3, r1
 8003526:	4620      	mov	r0, r4
 8003528:	4629      	mov	r1, r5
 800352a:	f7fc fecf 	bl	80002cc <__adddf3>
 800352e:	4604      	mov	r4, r0
 8003530:	460d      	mov	r5, r1
 8003532:	f7fd fb31 	bl	8000b98 <__aeabi_d2iz>
 8003536:	2200      	movs	r2, #0
 8003538:	4607      	mov	r7, r0
 800353a:	2300      	movs	r3, #0
 800353c:	4620      	mov	r0, r4
 800353e:	4629      	mov	r1, r5
 8003540:	f7fd faec 	bl	8000b1c <__aeabi_dcmplt>
 8003544:	b140      	cbz	r0, 8003558 <_dtoa_r+0x168>
 8003546:	4638      	mov	r0, r7
 8003548:	f7fd f80c 	bl	8000564 <__aeabi_i2d>
 800354c:	4622      	mov	r2, r4
 800354e:	462b      	mov	r3, r5
 8003550:	f7fd fada 	bl	8000b08 <__aeabi_dcmpeq>
 8003554:	b900      	cbnz	r0, 8003558 <_dtoa_r+0x168>
 8003556:	3f01      	subs	r7, #1
 8003558:	2f16      	cmp	r7, #22
 800355a:	d852      	bhi.n	8003602 <_dtoa_r+0x212>
 800355c:	4b5d      	ldr	r3, [pc, #372]	@ (80036d4 <_dtoa_r+0x2e4>)
 800355e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003566:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800356a:	f7fd fad7 	bl	8000b1c <__aeabi_dcmplt>
 800356e:	2800      	cmp	r0, #0
 8003570:	d049      	beq.n	8003606 <_dtoa_r+0x216>
 8003572:	3f01      	subs	r7, #1
 8003574:	2300      	movs	r3, #0
 8003576:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003578:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800357a:	1b9b      	subs	r3, r3, r6
 800357c:	1e5a      	subs	r2, r3, #1
 800357e:	bf44      	itt	mi
 8003580:	f1c3 0801 	rsbmi	r8, r3, #1
 8003584:	2300      	movmi	r3, #0
 8003586:	9209      	str	r2, [sp, #36]	@ 0x24
 8003588:	bf54      	ite	pl
 800358a:	f04f 0800 	movpl.w	r8, #0
 800358e:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8003590:	2f00      	cmp	r7, #0
 8003592:	db3a      	blt.n	800360a <_dtoa_r+0x21a>
 8003594:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003596:	970e      	str	r7, [sp, #56]	@ 0x38
 8003598:	443b      	add	r3, r7
 800359a:	9309      	str	r3, [sp, #36]	@ 0x24
 800359c:	2300      	movs	r3, #0
 800359e:	930a      	str	r3, [sp, #40]	@ 0x28
 80035a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80035a2:	2b09      	cmp	r3, #9
 80035a4:	d865      	bhi.n	8003672 <_dtoa_r+0x282>
 80035a6:	2b05      	cmp	r3, #5
 80035a8:	bfc4      	itt	gt
 80035aa:	3b04      	subgt	r3, #4
 80035ac:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80035ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80035b0:	f1a3 0302 	sub.w	r3, r3, #2
 80035b4:	bfcc      	ite	gt
 80035b6:	2400      	movgt	r4, #0
 80035b8:	2401      	movle	r4, #1
 80035ba:	2b03      	cmp	r3, #3
 80035bc:	d864      	bhi.n	8003688 <_dtoa_r+0x298>
 80035be:	e8df f003 	tbb	[pc, r3]
 80035c2:	382b      	.short	0x382b
 80035c4:	5636      	.short	0x5636
 80035c6:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80035ca:	441e      	add	r6, r3
 80035cc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80035d0:	2b20      	cmp	r3, #32
 80035d2:	bfc1      	itttt	gt
 80035d4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80035d8:	fa08 f803 	lslgt.w	r8, r8, r3
 80035dc:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80035e0:	fa24 f303 	lsrgt.w	r3, r4, r3
 80035e4:	bfd6      	itet	le
 80035e6:	f1c3 0320 	rsble	r3, r3, #32
 80035ea:	ea48 0003 	orrgt.w	r0, r8, r3
 80035ee:	fa04 f003 	lslle.w	r0, r4, r3
 80035f2:	f7fc ffa7 	bl	8000544 <__aeabi_ui2d>
 80035f6:	2201      	movs	r2, #1
 80035f8:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80035fc:	3e01      	subs	r6, #1
 80035fe:	9212      	str	r2, [sp, #72]	@ 0x48
 8003600:	e776      	b.n	80034f0 <_dtoa_r+0x100>
 8003602:	2301      	movs	r3, #1
 8003604:	e7b7      	b.n	8003576 <_dtoa_r+0x186>
 8003606:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003608:	e7b6      	b.n	8003578 <_dtoa_r+0x188>
 800360a:	427b      	negs	r3, r7
 800360c:	930a      	str	r3, [sp, #40]	@ 0x28
 800360e:	2300      	movs	r3, #0
 8003610:	eba8 0807 	sub.w	r8, r8, r7
 8003614:	930e      	str	r3, [sp, #56]	@ 0x38
 8003616:	e7c3      	b.n	80035a0 <_dtoa_r+0x1b0>
 8003618:	2300      	movs	r3, #0
 800361a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800361c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800361e:	2b00      	cmp	r3, #0
 8003620:	dc35      	bgt.n	800368e <_dtoa_r+0x29e>
 8003622:	2301      	movs	r3, #1
 8003624:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003628:	461a      	mov	r2, r3
 800362a:	9221      	str	r2, [sp, #132]	@ 0x84
 800362c:	e00b      	b.n	8003646 <_dtoa_r+0x256>
 800362e:	2301      	movs	r3, #1
 8003630:	e7f3      	b.n	800361a <_dtoa_r+0x22a>
 8003632:	2300      	movs	r3, #0
 8003634:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003636:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003638:	18fb      	adds	r3, r7, r3
 800363a:	9308      	str	r3, [sp, #32]
 800363c:	3301      	adds	r3, #1
 800363e:	2b01      	cmp	r3, #1
 8003640:	9307      	str	r3, [sp, #28]
 8003642:	bfb8      	it	lt
 8003644:	2301      	movlt	r3, #1
 8003646:	f8db 001c 	ldr.w	r0, [fp, #28]
 800364a:	2100      	movs	r1, #0
 800364c:	2204      	movs	r2, #4
 800364e:	f102 0514 	add.w	r5, r2, #20
 8003652:	429d      	cmp	r5, r3
 8003654:	d91f      	bls.n	8003696 <_dtoa_r+0x2a6>
 8003656:	6041      	str	r1, [r0, #4]
 8003658:	4658      	mov	r0, fp
 800365a:	f000 fd91 	bl	8004180 <_Balloc>
 800365e:	4682      	mov	sl, r0
 8003660:	2800      	cmp	r0, #0
 8003662:	d13b      	bne.n	80036dc <_dtoa_r+0x2ec>
 8003664:	4b1c      	ldr	r3, [pc, #112]	@ (80036d8 <_dtoa_r+0x2e8>)
 8003666:	4602      	mov	r2, r0
 8003668:	f240 11af 	movw	r1, #431	@ 0x1af
 800366c:	e6d4      	b.n	8003418 <_dtoa_r+0x28>
 800366e:	2301      	movs	r3, #1
 8003670:	e7e0      	b.n	8003634 <_dtoa_r+0x244>
 8003672:	2401      	movs	r4, #1
 8003674:	2300      	movs	r3, #0
 8003676:	9320      	str	r3, [sp, #128]	@ 0x80
 8003678:	940b      	str	r4, [sp, #44]	@ 0x2c
 800367a:	f04f 33ff 	mov.w	r3, #4294967295
 800367e:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003682:	2200      	movs	r2, #0
 8003684:	2312      	movs	r3, #18
 8003686:	e7d0      	b.n	800362a <_dtoa_r+0x23a>
 8003688:	2301      	movs	r3, #1
 800368a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800368c:	e7f5      	b.n	800367a <_dtoa_r+0x28a>
 800368e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003690:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003694:	e7d7      	b.n	8003646 <_dtoa_r+0x256>
 8003696:	3101      	adds	r1, #1
 8003698:	0052      	lsls	r2, r2, #1
 800369a:	e7d8      	b.n	800364e <_dtoa_r+0x25e>
 800369c:	f3af 8000 	nop.w
 80036a0:	636f4361 	.word	0x636f4361
 80036a4:	3fd287a7 	.word	0x3fd287a7
 80036a8:	8b60c8b3 	.word	0x8b60c8b3
 80036ac:	3fc68a28 	.word	0x3fc68a28
 80036b0:	509f79fb 	.word	0x509f79fb
 80036b4:	3fd34413 	.word	0x3fd34413
 80036b8:	080069bd 	.word	0x080069bd
 80036bc:	080069d4 	.word	0x080069d4
 80036c0:	7ff00000 	.word	0x7ff00000
 80036c4:	080069b9 	.word	0x080069b9
 80036c8:	08006988 	.word	0x08006988
 80036cc:	08006987 	.word	0x08006987
 80036d0:	3ff80000 	.word	0x3ff80000
 80036d4:	08006ad0 	.word	0x08006ad0
 80036d8:	08006a2c 	.word	0x08006a2c
 80036dc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80036e0:	6018      	str	r0, [r3, #0]
 80036e2:	9b07      	ldr	r3, [sp, #28]
 80036e4:	2b0e      	cmp	r3, #14
 80036e6:	f200 80a4 	bhi.w	8003832 <_dtoa_r+0x442>
 80036ea:	2c00      	cmp	r4, #0
 80036ec:	f000 80a1 	beq.w	8003832 <_dtoa_r+0x442>
 80036f0:	2f00      	cmp	r7, #0
 80036f2:	dd33      	ble.n	800375c <_dtoa_r+0x36c>
 80036f4:	4b86      	ldr	r3, [pc, #536]	@ (8003910 <_dtoa_r+0x520>)
 80036f6:	f007 020f 	and.w	r2, r7, #15
 80036fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80036fe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003702:	05f8      	lsls	r0, r7, #23
 8003704:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003708:	ea4f 1427 	mov.w	r4, r7, asr #4
 800370c:	d516      	bpl.n	800373c <_dtoa_r+0x34c>
 800370e:	4b81      	ldr	r3, [pc, #516]	@ (8003914 <_dtoa_r+0x524>)
 8003710:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003714:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003718:	f7fd f8b8 	bl	800088c <__aeabi_ddiv>
 800371c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003720:	f004 040f 	and.w	r4, r4, #15
 8003724:	2603      	movs	r6, #3
 8003726:	4d7b      	ldr	r5, [pc, #492]	@ (8003914 <_dtoa_r+0x524>)
 8003728:	b954      	cbnz	r4, 8003740 <_dtoa_r+0x350>
 800372a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800372e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003732:	f7fd f8ab 	bl	800088c <__aeabi_ddiv>
 8003736:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800373a:	e028      	b.n	800378e <_dtoa_r+0x39e>
 800373c:	2602      	movs	r6, #2
 800373e:	e7f2      	b.n	8003726 <_dtoa_r+0x336>
 8003740:	07e1      	lsls	r1, r4, #31
 8003742:	d508      	bpl.n	8003756 <_dtoa_r+0x366>
 8003744:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003748:	e9d5 2300 	ldrd	r2, r3, [r5]
 800374c:	f7fc ff74 	bl	8000638 <__aeabi_dmul>
 8003750:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003754:	3601      	adds	r6, #1
 8003756:	1064      	asrs	r4, r4, #1
 8003758:	3508      	adds	r5, #8
 800375a:	e7e5      	b.n	8003728 <_dtoa_r+0x338>
 800375c:	f000 80d2 	beq.w	8003904 <_dtoa_r+0x514>
 8003760:	427c      	negs	r4, r7
 8003762:	4b6b      	ldr	r3, [pc, #428]	@ (8003910 <_dtoa_r+0x520>)
 8003764:	4d6b      	ldr	r5, [pc, #428]	@ (8003914 <_dtoa_r+0x524>)
 8003766:	f004 020f 	and.w	r2, r4, #15
 800376a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800376e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003772:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003776:	f7fc ff5f 	bl	8000638 <__aeabi_dmul>
 800377a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800377e:	1124      	asrs	r4, r4, #4
 8003780:	2300      	movs	r3, #0
 8003782:	2602      	movs	r6, #2
 8003784:	2c00      	cmp	r4, #0
 8003786:	f040 80b2 	bne.w	80038ee <_dtoa_r+0x4fe>
 800378a:	2b00      	cmp	r3, #0
 800378c:	d1d3      	bne.n	8003736 <_dtoa_r+0x346>
 800378e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003790:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003794:	2b00      	cmp	r3, #0
 8003796:	f000 80b7 	beq.w	8003908 <_dtoa_r+0x518>
 800379a:	4b5f      	ldr	r3, [pc, #380]	@ (8003918 <_dtoa_r+0x528>)
 800379c:	2200      	movs	r2, #0
 800379e:	4620      	mov	r0, r4
 80037a0:	4629      	mov	r1, r5
 80037a2:	f7fd f9bb 	bl	8000b1c <__aeabi_dcmplt>
 80037a6:	2800      	cmp	r0, #0
 80037a8:	f000 80ae 	beq.w	8003908 <_dtoa_r+0x518>
 80037ac:	9b07      	ldr	r3, [sp, #28]
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	f000 80aa 	beq.w	8003908 <_dtoa_r+0x518>
 80037b4:	9b08      	ldr	r3, [sp, #32]
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	dd37      	ble.n	800382a <_dtoa_r+0x43a>
 80037ba:	1e7b      	subs	r3, r7, #1
 80037bc:	9304      	str	r3, [sp, #16]
 80037be:	4620      	mov	r0, r4
 80037c0:	4b56      	ldr	r3, [pc, #344]	@ (800391c <_dtoa_r+0x52c>)
 80037c2:	2200      	movs	r2, #0
 80037c4:	4629      	mov	r1, r5
 80037c6:	f7fc ff37 	bl	8000638 <__aeabi_dmul>
 80037ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80037ce:	9c08      	ldr	r4, [sp, #32]
 80037d0:	3601      	adds	r6, #1
 80037d2:	4630      	mov	r0, r6
 80037d4:	f7fc fec6 	bl	8000564 <__aeabi_i2d>
 80037d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80037dc:	f7fc ff2c 	bl	8000638 <__aeabi_dmul>
 80037e0:	4b4f      	ldr	r3, [pc, #316]	@ (8003920 <_dtoa_r+0x530>)
 80037e2:	2200      	movs	r2, #0
 80037e4:	f7fc fd72 	bl	80002cc <__adddf3>
 80037e8:	4605      	mov	r5, r0
 80037ea:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80037ee:	2c00      	cmp	r4, #0
 80037f0:	f040 809a 	bne.w	8003928 <_dtoa_r+0x538>
 80037f4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80037f8:	4b4a      	ldr	r3, [pc, #296]	@ (8003924 <_dtoa_r+0x534>)
 80037fa:	2200      	movs	r2, #0
 80037fc:	f7fc fd64 	bl	80002c8 <__aeabi_dsub>
 8003800:	4602      	mov	r2, r0
 8003802:	460b      	mov	r3, r1
 8003804:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003808:	462a      	mov	r2, r5
 800380a:	4633      	mov	r3, r6
 800380c:	f7fd f9a4 	bl	8000b58 <__aeabi_dcmpgt>
 8003810:	2800      	cmp	r0, #0
 8003812:	f040 828e 	bne.w	8003d32 <_dtoa_r+0x942>
 8003816:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800381a:	462a      	mov	r2, r5
 800381c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003820:	f7fd f97c 	bl	8000b1c <__aeabi_dcmplt>
 8003824:	2800      	cmp	r0, #0
 8003826:	f040 8127 	bne.w	8003a78 <_dtoa_r+0x688>
 800382a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800382e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8003832:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003834:	2b00      	cmp	r3, #0
 8003836:	f2c0 8163 	blt.w	8003b00 <_dtoa_r+0x710>
 800383a:	2f0e      	cmp	r7, #14
 800383c:	f300 8160 	bgt.w	8003b00 <_dtoa_r+0x710>
 8003840:	4b33      	ldr	r3, [pc, #204]	@ (8003910 <_dtoa_r+0x520>)
 8003842:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003846:	e9d3 3400 	ldrd	r3, r4, [r3]
 800384a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800384e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003850:	2b00      	cmp	r3, #0
 8003852:	da03      	bge.n	800385c <_dtoa_r+0x46c>
 8003854:	9b07      	ldr	r3, [sp, #28]
 8003856:	2b00      	cmp	r3, #0
 8003858:	f340 8100 	ble.w	8003a5c <_dtoa_r+0x66c>
 800385c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003860:	4656      	mov	r6, sl
 8003862:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003866:	4620      	mov	r0, r4
 8003868:	4629      	mov	r1, r5
 800386a:	f7fd f80f 	bl	800088c <__aeabi_ddiv>
 800386e:	f7fd f993 	bl	8000b98 <__aeabi_d2iz>
 8003872:	4680      	mov	r8, r0
 8003874:	f7fc fe76 	bl	8000564 <__aeabi_i2d>
 8003878:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800387c:	f7fc fedc 	bl	8000638 <__aeabi_dmul>
 8003880:	4602      	mov	r2, r0
 8003882:	460b      	mov	r3, r1
 8003884:	4620      	mov	r0, r4
 8003886:	4629      	mov	r1, r5
 8003888:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800388c:	f7fc fd1c 	bl	80002c8 <__aeabi_dsub>
 8003890:	f806 4b01 	strb.w	r4, [r6], #1
 8003894:	9d07      	ldr	r5, [sp, #28]
 8003896:	eba6 040a 	sub.w	r4, r6, sl
 800389a:	42a5      	cmp	r5, r4
 800389c:	4602      	mov	r2, r0
 800389e:	460b      	mov	r3, r1
 80038a0:	f040 8116 	bne.w	8003ad0 <_dtoa_r+0x6e0>
 80038a4:	f7fc fd12 	bl	80002cc <__adddf3>
 80038a8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038ac:	4604      	mov	r4, r0
 80038ae:	460d      	mov	r5, r1
 80038b0:	f7fd f952 	bl	8000b58 <__aeabi_dcmpgt>
 80038b4:	2800      	cmp	r0, #0
 80038b6:	f040 80f8 	bne.w	8003aaa <_dtoa_r+0x6ba>
 80038ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80038be:	4620      	mov	r0, r4
 80038c0:	4629      	mov	r1, r5
 80038c2:	f7fd f921 	bl	8000b08 <__aeabi_dcmpeq>
 80038c6:	b118      	cbz	r0, 80038d0 <_dtoa_r+0x4e0>
 80038c8:	f018 0f01 	tst.w	r8, #1
 80038cc:	f040 80ed 	bne.w	8003aaa <_dtoa_r+0x6ba>
 80038d0:	4649      	mov	r1, r9
 80038d2:	4658      	mov	r0, fp
 80038d4:	f000 fc94 	bl	8004200 <_Bfree>
 80038d8:	2300      	movs	r3, #0
 80038da:	7033      	strb	r3, [r6, #0]
 80038dc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80038de:	3701      	adds	r7, #1
 80038e0:	601f      	str	r7, [r3, #0]
 80038e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	f000 8320 	beq.w	8003f2a <_dtoa_r+0xb3a>
 80038ea:	601e      	str	r6, [r3, #0]
 80038ec:	e31d      	b.n	8003f2a <_dtoa_r+0xb3a>
 80038ee:	07e2      	lsls	r2, r4, #31
 80038f0:	d505      	bpl.n	80038fe <_dtoa_r+0x50e>
 80038f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80038f6:	f7fc fe9f 	bl	8000638 <__aeabi_dmul>
 80038fa:	3601      	adds	r6, #1
 80038fc:	2301      	movs	r3, #1
 80038fe:	1064      	asrs	r4, r4, #1
 8003900:	3508      	adds	r5, #8
 8003902:	e73f      	b.n	8003784 <_dtoa_r+0x394>
 8003904:	2602      	movs	r6, #2
 8003906:	e742      	b.n	800378e <_dtoa_r+0x39e>
 8003908:	9c07      	ldr	r4, [sp, #28]
 800390a:	9704      	str	r7, [sp, #16]
 800390c:	e761      	b.n	80037d2 <_dtoa_r+0x3e2>
 800390e:	bf00      	nop
 8003910:	08006ad0 	.word	0x08006ad0
 8003914:	08006aa8 	.word	0x08006aa8
 8003918:	3ff00000 	.word	0x3ff00000
 800391c:	40240000 	.word	0x40240000
 8003920:	401c0000 	.word	0x401c0000
 8003924:	40140000 	.word	0x40140000
 8003928:	4b70      	ldr	r3, [pc, #448]	@ (8003aec <_dtoa_r+0x6fc>)
 800392a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800392c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003930:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003934:	4454      	add	r4, sl
 8003936:	2900      	cmp	r1, #0
 8003938:	d045      	beq.n	80039c6 <_dtoa_r+0x5d6>
 800393a:	496d      	ldr	r1, [pc, #436]	@ (8003af0 <_dtoa_r+0x700>)
 800393c:	2000      	movs	r0, #0
 800393e:	f7fc ffa5 	bl	800088c <__aeabi_ddiv>
 8003942:	4633      	mov	r3, r6
 8003944:	462a      	mov	r2, r5
 8003946:	f7fc fcbf 	bl	80002c8 <__aeabi_dsub>
 800394a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800394e:	4656      	mov	r6, sl
 8003950:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003954:	f7fd f920 	bl	8000b98 <__aeabi_d2iz>
 8003958:	4605      	mov	r5, r0
 800395a:	f7fc fe03 	bl	8000564 <__aeabi_i2d>
 800395e:	4602      	mov	r2, r0
 8003960:	460b      	mov	r3, r1
 8003962:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003966:	f7fc fcaf 	bl	80002c8 <__aeabi_dsub>
 800396a:	3530      	adds	r5, #48	@ 0x30
 800396c:	4602      	mov	r2, r0
 800396e:	460b      	mov	r3, r1
 8003970:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003974:	f806 5b01 	strb.w	r5, [r6], #1
 8003978:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800397c:	f7fd f8ce 	bl	8000b1c <__aeabi_dcmplt>
 8003980:	2800      	cmp	r0, #0
 8003982:	d163      	bne.n	8003a4c <_dtoa_r+0x65c>
 8003984:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003988:	495a      	ldr	r1, [pc, #360]	@ (8003af4 <_dtoa_r+0x704>)
 800398a:	2000      	movs	r0, #0
 800398c:	f7fc fc9c 	bl	80002c8 <__aeabi_dsub>
 8003990:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003994:	f7fd f8c2 	bl	8000b1c <__aeabi_dcmplt>
 8003998:	2800      	cmp	r0, #0
 800399a:	f040 8087 	bne.w	8003aac <_dtoa_r+0x6bc>
 800399e:	42a6      	cmp	r6, r4
 80039a0:	f43f af43 	beq.w	800382a <_dtoa_r+0x43a>
 80039a4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80039a8:	4b53      	ldr	r3, [pc, #332]	@ (8003af8 <_dtoa_r+0x708>)
 80039aa:	2200      	movs	r2, #0
 80039ac:	f7fc fe44 	bl	8000638 <__aeabi_dmul>
 80039b0:	4b51      	ldr	r3, [pc, #324]	@ (8003af8 <_dtoa_r+0x708>)
 80039b2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80039b6:	2200      	movs	r2, #0
 80039b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80039bc:	f7fc fe3c 	bl	8000638 <__aeabi_dmul>
 80039c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80039c4:	e7c4      	b.n	8003950 <_dtoa_r+0x560>
 80039c6:	4631      	mov	r1, r6
 80039c8:	4628      	mov	r0, r5
 80039ca:	f7fc fe35 	bl	8000638 <__aeabi_dmul>
 80039ce:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80039d2:	9413      	str	r4, [sp, #76]	@ 0x4c
 80039d4:	4656      	mov	r6, sl
 80039d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80039da:	f7fd f8dd 	bl	8000b98 <__aeabi_d2iz>
 80039de:	4605      	mov	r5, r0
 80039e0:	f7fc fdc0 	bl	8000564 <__aeabi_i2d>
 80039e4:	4602      	mov	r2, r0
 80039e6:	460b      	mov	r3, r1
 80039e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80039ec:	f7fc fc6c 	bl	80002c8 <__aeabi_dsub>
 80039f0:	3530      	adds	r5, #48	@ 0x30
 80039f2:	f806 5b01 	strb.w	r5, [r6], #1
 80039f6:	4602      	mov	r2, r0
 80039f8:	460b      	mov	r3, r1
 80039fa:	42a6      	cmp	r6, r4
 80039fc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003a00:	f04f 0200 	mov.w	r2, #0
 8003a04:	d124      	bne.n	8003a50 <_dtoa_r+0x660>
 8003a06:	4b3a      	ldr	r3, [pc, #232]	@ (8003af0 <_dtoa_r+0x700>)
 8003a08:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003a0c:	f7fc fc5e 	bl	80002cc <__adddf3>
 8003a10:	4602      	mov	r2, r0
 8003a12:	460b      	mov	r3, r1
 8003a14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003a18:	f7fd f89e 	bl	8000b58 <__aeabi_dcmpgt>
 8003a1c:	2800      	cmp	r0, #0
 8003a1e:	d145      	bne.n	8003aac <_dtoa_r+0x6bc>
 8003a20:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003a24:	4932      	ldr	r1, [pc, #200]	@ (8003af0 <_dtoa_r+0x700>)
 8003a26:	2000      	movs	r0, #0
 8003a28:	f7fc fc4e 	bl	80002c8 <__aeabi_dsub>
 8003a2c:	4602      	mov	r2, r0
 8003a2e:	460b      	mov	r3, r1
 8003a30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003a34:	f7fd f872 	bl	8000b1c <__aeabi_dcmplt>
 8003a38:	2800      	cmp	r0, #0
 8003a3a:	f43f aef6 	beq.w	800382a <_dtoa_r+0x43a>
 8003a3e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8003a40:	1e73      	subs	r3, r6, #1
 8003a42:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003a44:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003a48:	2b30      	cmp	r3, #48	@ 0x30
 8003a4a:	d0f8      	beq.n	8003a3e <_dtoa_r+0x64e>
 8003a4c:	9f04      	ldr	r7, [sp, #16]
 8003a4e:	e73f      	b.n	80038d0 <_dtoa_r+0x4e0>
 8003a50:	4b29      	ldr	r3, [pc, #164]	@ (8003af8 <_dtoa_r+0x708>)
 8003a52:	f7fc fdf1 	bl	8000638 <__aeabi_dmul>
 8003a56:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003a5a:	e7bc      	b.n	80039d6 <_dtoa_r+0x5e6>
 8003a5c:	d10c      	bne.n	8003a78 <_dtoa_r+0x688>
 8003a5e:	4b27      	ldr	r3, [pc, #156]	@ (8003afc <_dtoa_r+0x70c>)
 8003a60:	2200      	movs	r2, #0
 8003a62:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003a66:	f7fc fde7 	bl	8000638 <__aeabi_dmul>
 8003a6a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003a6e:	f7fd f869 	bl	8000b44 <__aeabi_dcmpge>
 8003a72:	2800      	cmp	r0, #0
 8003a74:	f000 815b 	beq.w	8003d2e <_dtoa_r+0x93e>
 8003a78:	2400      	movs	r4, #0
 8003a7a:	4625      	mov	r5, r4
 8003a7c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003a7e:	43db      	mvns	r3, r3
 8003a80:	9304      	str	r3, [sp, #16]
 8003a82:	4656      	mov	r6, sl
 8003a84:	2700      	movs	r7, #0
 8003a86:	4621      	mov	r1, r4
 8003a88:	4658      	mov	r0, fp
 8003a8a:	f000 fbb9 	bl	8004200 <_Bfree>
 8003a8e:	2d00      	cmp	r5, #0
 8003a90:	d0dc      	beq.n	8003a4c <_dtoa_r+0x65c>
 8003a92:	b12f      	cbz	r7, 8003aa0 <_dtoa_r+0x6b0>
 8003a94:	42af      	cmp	r7, r5
 8003a96:	d003      	beq.n	8003aa0 <_dtoa_r+0x6b0>
 8003a98:	4639      	mov	r1, r7
 8003a9a:	4658      	mov	r0, fp
 8003a9c:	f000 fbb0 	bl	8004200 <_Bfree>
 8003aa0:	4629      	mov	r1, r5
 8003aa2:	4658      	mov	r0, fp
 8003aa4:	f000 fbac 	bl	8004200 <_Bfree>
 8003aa8:	e7d0      	b.n	8003a4c <_dtoa_r+0x65c>
 8003aaa:	9704      	str	r7, [sp, #16]
 8003aac:	4633      	mov	r3, r6
 8003aae:	461e      	mov	r6, r3
 8003ab0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003ab4:	2a39      	cmp	r2, #57	@ 0x39
 8003ab6:	d107      	bne.n	8003ac8 <_dtoa_r+0x6d8>
 8003ab8:	459a      	cmp	sl, r3
 8003aba:	d1f8      	bne.n	8003aae <_dtoa_r+0x6be>
 8003abc:	9a04      	ldr	r2, [sp, #16]
 8003abe:	3201      	adds	r2, #1
 8003ac0:	9204      	str	r2, [sp, #16]
 8003ac2:	2230      	movs	r2, #48	@ 0x30
 8003ac4:	f88a 2000 	strb.w	r2, [sl]
 8003ac8:	781a      	ldrb	r2, [r3, #0]
 8003aca:	3201      	adds	r2, #1
 8003acc:	701a      	strb	r2, [r3, #0]
 8003ace:	e7bd      	b.n	8003a4c <_dtoa_r+0x65c>
 8003ad0:	4b09      	ldr	r3, [pc, #36]	@ (8003af8 <_dtoa_r+0x708>)
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	f7fc fdb0 	bl	8000638 <__aeabi_dmul>
 8003ad8:	2200      	movs	r2, #0
 8003ada:	2300      	movs	r3, #0
 8003adc:	4604      	mov	r4, r0
 8003ade:	460d      	mov	r5, r1
 8003ae0:	f7fd f812 	bl	8000b08 <__aeabi_dcmpeq>
 8003ae4:	2800      	cmp	r0, #0
 8003ae6:	f43f aebc 	beq.w	8003862 <_dtoa_r+0x472>
 8003aea:	e6f1      	b.n	80038d0 <_dtoa_r+0x4e0>
 8003aec:	08006ad0 	.word	0x08006ad0
 8003af0:	3fe00000 	.word	0x3fe00000
 8003af4:	3ff00000 	.word	0x3ff00000
 8003af8:	40240000 	.word	0x40240000
 8003afc:	40140000 	.word	0x40140000
 8003b00:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003b02:	2a00      	cmp	r2, #0
 8003b04:	f000 80db 	beq.w	8003cbe <_dtoa_r+0x8ce>
 8003b08:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003b0a:	2a01      	cmp	r2, #1
 8003b0c:	f300 80bf 	bgt.w	8003c8e <_dtoa_r+0x89e>
 8003b10:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003b12:	2a00      	cmp	r2, #0
 8003b14:	f000 80b7 	beq.w	8003c86 <_dtoa_r+0x896>
 8003b18:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003b1c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003b1e:	4646      	mov	r6, r8
 8003b20:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b22:	2101      	movs	r1, #1
 8003b24:	441a      	add	r2, r3
 8003b26:	4658      	mov	r0, fp
 8003b28:	4498      	add	r8, r3
 8003b2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b2c:	f000 fc66 	bl	80043fc <__i2b>
 8003b30:	4605      	mov	r5, r0
 8003b32:	b15e      	cbz	r6, 8003b4c <_dtoa_r+0x75c>
 8003b34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	dd08      	ble.n	8003b4c <_dtoa_r+0x75c>
 8003b3a:	42b3      	cmp	r3, r6
 8003b3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b3e:	bfa8      	it	ge
 8003b40:	4633      	movge	r3, r6
 8003b42:	eba8 0803 	sub.w	r8, r8, r3
 8003b46:	1af6      	subs	r6, r6, r3
 8003b48:	1ad3      	subs	r3, r2, r3
 8003b4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8003b4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b4e:	b1f3      	cbz	r3, 8003b8e <_dtoa_r+0x79e>
 8003b50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	f000 80b7 	beq.w	8003cc6 <_dtoa_r+0x8d6>
 8003b58:	b18c      	cbz	r4, 8003b7e <_dtoa_r+0x78e>
 8003b5a:	4629      	mov	r1, r5
 8003b5c:	4622      	mov	r2, r4
 8003b5e:	4658      	mov	r0, fp
 8003b60:	f000 fd0c 	bl	800457c <__pow5mult>
 8003b64:	464a      	mov	r2, r9
 8003b66:	4601      	mov	r1, r0
 8003b68:	4605      	mov	r5, r0
 8003b6a:	4658      	mov	r0, fp
 8003b6c:	f000 fc5c 	bl	8004428 <__multiply>
 8003b70:	4649      	mov	r1, r9
 8003b72:	9004      	str	r0, [sp, #16]
 8003b74:	4658      	mov	r0, fp
 8003b76:	f000 fb43 	bl	8004200 <_Bfree>
 8003b7a:	9b04      	ldr	r3, [sp, #16]
 8003b7c:	4699      	mov	r9, r3
 8003b7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003b80:	1b1a      	subs	r2, r3, r4
 8003b82:	d004      	beq.n	8003b8e <_dtoa_r+0x79e>
 8003b84:	4649      	mov	r1, r9
 8003b86:	4658      	mov	r0, fp
 8003b88:	f000 fcf8 	bl	800457c <__pow5mult>
 8003b8c:	4681      	mov	r9, r0
 8003b8e:	2101      	movs	r1, #1
 8003b90:	4658      	mov	r0, fp
 8003b92:	f000 fc33 	bl	80043fc <__i2b>
 8003b96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003b98:	4604      	mov	r4, r0
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	f000 81c9 	beq.w	8003f32 <_dtoa_r+0xb42>
 8003ba0:	461a      	mov	r2, r3
 8003ba2:	4601      	mov	r1, r0
 8003ba4:	4658      	mov	r0, fp
 8003ba6:	f000 fce9 	bl	800457c <__pow5mult>
 8003baa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003bac:	2b01      	cmp	r3, #1
 8003bae:	4604      	mov	r4, r0
 8003bb0:	f300 808f 	bgt.w	8003cd2 <_dtoa_r+0x8e2>
 8003bb4:	9b02      	ldr	r3, [sp, #8]
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	f040 8087 	bne.w	8003cca <_dtoa_r+0x8da>
 8003bbc:	9b03      	ldr	r3, [sp, #12]
 8003bbe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	f040 8083 	bne.w	8003cce <_dtoa_r+0x8de>
 8003bc8:	9b03      	ldr	r3, [sp, #12]
 8003bca:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003bce:	0d1b      	lsrs	r3, r3, #20
 8003bd0:	051b      	lsls	r3, r3, #20
 8003bd2:	b12b      	cbz	r3, 8003be0 <_dtoa_r+0x7f0>
 8003bd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003bd6:	3301      	adds	r3, #1
 8003bd8:	9309      	str	r3, [sp, #36]	@ 0x24
 8003bda:	f108 0801 	add.w	r8, r8, #1
 8003bde:	2301      	movs	r3, #1
 8003be0:	930a      	str	r3, [sp, #40]	@ 0x28
 8003be2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	f000 81aa 	beq.w	8003f3e <_dtoa_r+0xb4e>
 8003bea:	6923      	ldr	r3, [r4, #16]
 8003bec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003bf0:	6918      	ldr	r0, [r3, #16]
 8003bf2:	f000 fbb7 	bl	8004364 <__hi0bits>
 8003bf6:	f1c0 0020 	rsb	r0, r0, #32
 8003bfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003bfc:	4418      	add	r0, r3
 8003bfe:	f010 001f 	ands.w	r0, r0, #31
 8003c02:	d071      	beq.n	8003ce8 <_dtoa_r+0x8f8>
 8003c04:	f1c0 0320 	rsb	r3, r0, #32
 8003c08:	2b04      	cmp	r3, #4
 8003c0a:	dd65      	ble.n	8003cd8 <_dtoa_r+0x8e8>
 8003c0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c0e:	f1c0 001c 	rsb	r0, r0, #28
 8003c12:	4403      	add	r3, r0
 8003c14:	4480      	add	r8, r0
 8003c16:	4406      	add	r6, r0
 8003c18:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c1a:	f1b8 0f00 	cmp.w	r8, #0
 8003c1e:	dd05      	ble.n	8003c2c <_dtoa_r+0x83c>
 8003c20:	4649      	mov	r1, r9
 8003c22:	4642      	mov	r2, r8
 8003c24:	4658      	mov	r0, fp
 8003c26:	f000 fd03 	bl	8004630 <__lshift>
 8003c2a:	4681      	mov	r9, r0
 8003c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	dd05      	ble.n	8003c3e <_dtoa_r+0x84e>
 8003c32:	4621      	mov	r1, r4
 8003c34:	461a      	mov	r2, r3
 8003c36:	4658      	mov	r0, fp
 8003c38:	f000 fcfa 	bl	8004630 <__lshift>
 8003c3c:	4604      	mov	r4, r0
 8003c3e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d053      	beq.n	8003cec <_dtoa_r+0x8fc>
 8003c44:	4621      	mov	r1, r4
 8003c46:	4648      	mov	r0, r9
 8003c48:	f000 fd5e 	bl	8004708 <__mcmp>
 8003c4c:	2800      	cmp	r0, #0
 8003c4e:	da4d      	bge.n	8003cec <_dtoa_r+0x8fc>
 8003c50:	1e7b      	subs	r3, r7, #1
 8003c52:	9304      	str	r3, [sp, #16]
 8003c54:	4649      	mov	r1, r9
 8003c56:	2300      	movs	r3, #0
 8003c58:	220a      	movs	r2, #10
 8003c5a:	4658      	mov	r0, fp
 8003c5c:	f000 faf2 	bl	8004244 <__multadd>
 8003c60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003c62:	4681      	mov	r9, r0
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	f000 816c 	beq.w	8003f42 <_dtoa_r+0xb52>
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	4629      	mov	r1, r5
 8003c6e:	220a      	movs	r2, #10
 8003c70:	4658      	mov	r0, fp
 8003c72:	f000 fae7 	bl	8004244 <__multadd>
 8003c76:	9b08      	ldr	r3, [sp, #32]
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	4605      	mov	r5, r0
 8003c7c:	dc61      	bgt.n	8003d42 <_dtoa_r+0x952>
 8003c7e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003c80:	2b02      	cmp	r3, #2
 8003c82:	dc3b      	bgt.n	8003cfc <_dtoa_r+0x90c>
 8003c84:	e05d      	b.n	8003d42 <_dtoa_r+0x952>
 8003c86:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003c88:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003c8c:	e746      	b.n	8003b1c <_dtoa_r+0x72c>
 8003c8e:	9b07      	ldr	r3, [sp, #28]
 8003c90:	1e5c      	subs	r4, r3, #1
 8003c92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003c94:	42a3      	cmp	r3, r4
 8003c96:	bfbf      	itttt	lt
 8003c98:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003c9a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8003c9c:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003c9e:	1ae3      	sublt	r3, r4, r3
 8003ca0:	bfb4      	ite	lt
 8003ca2:	18d2      	addlt	r2, r2, r3
 8003ca4:	1b1c      	subge	r4, r3, r4
 8003ca6:	9b07      	ldr	r3, [sp, #28]
 8003ca8:	bfbc      	itt	lt
 8003caa:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8003cac:	2400      	movlt	r4, #0
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	bfb5      	itete	lt
 8003cb2:	eba8 0603 	sublt.w	r6, r8, r3
 8003cb6:	9b07      	ldrge	r3, [sp, #28]
 8003cb8:	2300      	movlt	r3, #0
 8003cba:	4646      	movge	r6, r8
 8003cbc:	e730      	b.n	8003b20 <_dtoa_r+0x730>
 8003cbe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003cc0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003cc2:	4646      	mov	r6, r8
 8003cc4:	e735      	b.n	8003b32 <_dtoa_r+0x742>
 8003cc6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003cc8:	e75c      	b.n	8003b84 <_dtoa_r+0x794>
 8003cca:	2300      	movs	r3, #0
 8003ccc:	e788      	b.n	8003be0 <_dtoa_r+0x7f0>
 8003cce:	9b02      	ldr	r3, [sp, #8]
 8003cd0:	e786      	b.n	8003be0 <_dtoa_r+0x7f0>
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	930a      	str	r3, [sp, #40]	@ 0x28
 8003cd6:	e788      	b.n	8003bea <_dtoa_r+0x7fa>
 8003cd8:	d09f      	beq.n	8003c1a <_dtoa_r+0x82a>
 8003cda:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003cdc:	331c      	adds	r3, #28
 8003cde:	441a      	add	r2, r3
 8003ce0:	4498      	add	r8, r3
 8003ce2:	441e      	add	r6, r3
 8003ce4:	9209      	str	r2, [sp, #36]	@ 0x24
 8003ce6:	e798      	b.n	8003c1a <_dtoa_r+0x82a>
 8003ce8:	4603      	mov	r3, r0
 8003cea:	e7f6      	b.n	8003cda <_dtoa_r+0x8ea>
 8003cec:	9b07      	ldr	r3, [sp, #28]
 8003cee:	9704      	str	r7, [sp, #16]
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	dc20      	bgt.n	8003d36 <_dtoa_r+0x946>
 8003cf4:	9308      	str	r3, [sp, #32]
 8003cf6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003cf8:	2b02      	cmp	r3, #2
 8003cfa:	dd1e      	ble.n	8003d3a <_dtoa_r+0x94a>
 8003cfc:	9b08      	ldr	r3, [sp, #32]
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	f47f aebc 	bne.w	8003a7c <_dtoa_r+0x68c>
 8003d04:	4621      	mov	r1, r4
 8003d06:	2205      	movs	r2, #5
 8003d08:	4658      	mov	r0, fp
 8003d0a:	f000 fa9b 	bl	8004244 <__multadd>
 8003d0e:	4601      	mov	r1, r0
 8003d10:	4604      	mov	r4, r0
 8003d12:	4648      	mov	r0, r9
 8003d14:	f000 fcf8 	bl	8004708 <__mcmp>
 8003d18:	2800      	cmp	r0, #0
 8003d1a:	f77f aeaf 	ble.w	8003a7c <_dtoa_r+0x68c>
 8003d1e:	4656      	mov	r6, sl
 8003d20:	2331      	movs	r3, #49	@ 0x31
 8003d22:	f806 3b01 	strb.w	r3, [r6], #1
 8003d26:	9b04      	ldr	r3, [sp, #16]
 8003d28:	3301      	adds	r3, #1
 8003d2a:	9304      	str	r3, [sp, #16]
 8003d2c:	e6aa      	b.n	8003a84 <_dtoa_r+0x694>
 8003d2e:	9c07      	ldr	r4, [sp, #28]
 8003d30:	9704      	str	r7, [sp, #16]
 8003d32:	4625      	mov	r5, r4
 8003d34:	e7f3      	b.n	8003d1e <_dtoa_r+0x92e>
 8003d36:	9b07      	ldr	r3, [sp, #28]
 8003d38:	9308      	str	r3, [sp, #32]
 8003d3a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	f000 8104 	beq.w	8003f4a <_dtoa_r+0xb5a>
 8003d42:	2e00      	cmp	r6, #0
 8003d44:	dd05      	ble.n	8003d52 <_dtoa_r+0x962>
 8003d46:	4629      	mov	r1, r5
 8003d48:	4632      	mov	r2, r6
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f000 fc70 	bl	8004630 <__lshift>
 8003d50:	4605      	mov	r5, r0
 8003d52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d05a      	beq.n	8003e0e <_dtoa_r+0xa1e>
 8003d58:	6869      	ldr	r1, [r5, #4]
 8003d5a:	4658      	mov	r0, fp
 8003d5c:	f000 fa10 	bl	8004180 <_Balloc>
 8003d60:	4606      	mov	r6, r0
 8003d62:	b928      	cbnz	r0, 8003d70 <_dtoa_r+0x980>
 8003d64:	4b84      	ldr	r3, [pc, #528]	@ (8003f78 <_dtoa_r+0xb88>)
 8003d66:	4602      	mov	r2, r0
 8003d68:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8003d6c:	f7ff bb54 	b.w	8003418 <_dtoa_r+0x28>
 8003d70:	692a      	ldr	r2, [r5, #16]
 8003d72:	3202      	adds	r2, #2
 8003d74:	0092      	lsls	r2, r2, #2
 8003d76:	f105 010c 	add.w	r1, r5, #12
 8003d7a:	300c      	adds	r0, #12
 8003d7c:	f001 ff5e 	bl	8005c3c <memcpy>
 8003d80:	2201      	movs	r2, #1
 8003d82:	4631      	mov	r1, r6
 8003d84:	4658      	mov	r0, fp
 8003d86:	f000 fc53 	bl	8004630 <__lshift>
 8003d8a:	f10a 0301 	add.w	r3, sl, #1
 8003d8e:	9307      	str	r3, [sp, #28]
 8003d90:	9b08      	ldr	r3, [sp, #32]
 8003d92:	4453      	add	r3, sl
 8003d94:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003d96:	9b02      	ldr	r3, [sp, #8]
 8003d98:	f003 0301 	and.w	r3, r3, #1
 8003d9c:	462f      	mov	r7, r5
 8003d9e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003da0:	4605      	mov	r5, r0
 8003da2:	9b07      	ldr	r3, [sp, #28]
 8003da4:	4621      	mov	r1, r4
 8003da6:	3b01      	subs	r3, #1
 8003da8:	4648      	mov	r0, r9
 8003daa:	9302      	str	r3, [sp, #8]
 8003dac:	f7ff fa98 	bl	80032e0 <quorem>
 8003db0:	4639      	mov	r1, r7
 8003db2:	9008      	str	r0, [sp, #32]
 8003db4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003db8:	4648      	mov	r0, r9
 8003dba:	f000 fca5 	bl	8004708 <__mcmp>
 8003dbe:	462a      	mov	r2, r5
 8003dc0:	9009      	str	r0, [sp, #36]	@ 0x24
 8003dc2:	4621      	mov	r1, r4
 8003dc4:	4658      	mov	r0, fp
 8003dc6:	f000 fcbb 	bl	8004740 <__mdiff>
 8003dca:	68c2      	ldr	r2, [r0, #12]
 8003dcc:	4606      	mov	r6, r0
 8003dce:	bb02      	cbnz	r2, 8003e12 <_dtoa_r+0xa22>
 8003dd0:	4601      	mov	r1, r0
 8003dd2:	4648      	mov	r0, r9
 8003dd4:	f000 fc98 	bl	8004708 <__mcmp>
 8003dd8:	4602      	mov	r2, r0
 8003dda:	4631      	mov	r1, r6
 8003ddc:	4658      	mov	r0, fp
 8003dde:	920c      	str	r2, [sp, #48]	@ 0x30
 8003de0:	f000 fa0e 	bl	8004200 <_Bfree>
 8003de4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003de6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003de8:	9e07      	ldr	r6, [sp, #28]
 8003dea:	ea43 0102 	orr.w	r1, r3, r2
 8003dee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003df0:	4319      	orrs	r1, r3
 8003df2:	d110      	bne.n	8003e16 <_dtoa_r+0xa26>
 8003df4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003df8:	d029      	beq.n	8003e4e <_dtoa_r+0xa5e>
 8003dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	dd02      	ble.n	8003e06 <_dtoa_r+0xa16>
 8003e00:	9b08      	ldr	r3, [sp, #32]
 8003e02:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003e06:	9b02      	ldr	r3, [sp, #8]
 8003e08:	f883 8000 	strb.w	r8, [r3]
 8003e0c:	e63b      	b.n	8003a86 <_dtoa_r+0x696>
 8003e0e:	4628      	mov	r0, r5
 8003e10:	e7bb      	b.n	8003d8a <_dtoa_r+0x99a>
 8003e12:	2201      	movs	r2, #1
 8003e14:	e7e1      	b.n	8003dda <_dtoa_r+0x9ea>
 8003e16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	db04      	blt.n	8003e26 <_dtoa_r+0xa36>
 8003e1c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8003e1e:	430b      	orrs	r3, r1
 8003e20:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003e22:	430b      	orrs	r3, r1
 8003e24:	d120      	bne.n	8003e68 <_dtoa_r+0xa78>
 8003e26:	2a00      	cmp	r2, #0
 8003e28:	dded      	ble.n	8003e06 <_dtoa_r+0xa16>
 8003e2a:	4649      	mov	r1, r9
 8003e2c:	2201      	movs	r2, #1
 8003e2e:	4658      	mov	r0, fp
 8003e30:	f000 fbfe 	bl	8004630 <__lshift>
 8003e34:	4621      	mov	r1, r4
 8003e36:	4681      	mov	r9, r0
 8003e38:	f000 fc66 	bl	8004708 <__mcmp>
 8003e3c:	2800      	cmp	r0, #0
 8003e3e:	dc03      	bgt.n	8003e48 <_dtoa_r+0xa58>
 8003e40:	d1e1      	bne.n	8003e06 <_dtoa_r+0xa16>
 8003e42:	f018 0f01 	tst.w	r8, #1
 8003e46:	d0de      	beq.n	8003e06 <_dtoa_r+0xa16>
 8003e48:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003e4c:	d1d8      	bne.n	8003e00 <_dtoa_r+0xa10>
 8003e4e:	9a02      	ldr	r2, [sp, #8]
 8003e50:	2339      	movs	r3, #57	@ 0x39
 8003e52:	7013      	strb	r3, [r2, #0]
 8003e54:	4633      	mov	r3, r6
 8003e56:	461e      	mov	r6, r3
 8003e58:	3b01      	subs	r3, #1
 8003e5a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003e5e:	2a39      	cmp	r2, #57	@ 0x39
 8003e60:	d052      	beq.n	8003f08 <_dtoa_r+0xb18>
 8003e62:	3201      	adds	r2, #1
 8003e64:	701a      	strb	r2, [r3, #0]
 8003e66:	e60e      	b.n	8003a86 <_dtoa_r+0x696>
 8003e68:	2a00      	cmp	r2, #0
 8003e6a:	dd07      	ble.n	8003e7c <_dtoa_r+0xa8c>
 8003e6c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003e70:	d0ed      	beq.n	8003e4e <_dtoa_r+0xa5e>
 8003e72:	9a02      	ldr	r2, [sp, #8]
 8003e74:	f108 0301 	add.w	r3, r8, #1
 8003e78:	7013      	strb	r3, [r2, #0]
 8003e7a:	e604      	b.n	8003a86 <_dtoa_r+0x696>
 8003e7c:	9b07      	ldr	r3, [sp, #28]
 8003e7e:	9a07      	ldr	r2, [sp, #28]
 8003e80:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003e84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003e86:	4293      	cmp	r3, r2
 8003e88:	d028      	beq.n	8003edc <_dtoa_r+0xaec>
 8003e8a:	4649      	mov	r1, r9
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	220a      	movs	r2, #10
 8003e90:	4658      	mov	r0, fp
 8003e92:	f000 f9d7 	bl	8004244 <__multadd>
 8003e96:	42af      	cmp	r7, r5
 8003e98:	4681      	mov	r9, r0
 8003e9a:	f04f 0300 	mov.w	r3, #0
 8003e9e:	f04f 020a 	mov.w	r2, #10
 8003ea2:	4639      	mov	r1, r7
 8003ea4:	4658      	mov	r0, fp
 8003ea6:	d107      	bne.n	8003eb8 <_dtoa_r+0xac8>
 8003ea8:	f000 f9cc 	bl	8004244 <__multadd>
 8003eac:	4607      	mov	r7, r0
 8003eae:	4605      	mov	r5, r0
 8003eb0:	9b07      	ldr	r3, [sp, #28]
 8003eb2:	3301      	adds	r3, #1
 8003eb4:	9307      	str	r3, [sp, #28]
 8003eb6:	e774      	b.n	8003da2 <_dtoa_r+0x9b2>
 8003eb8:	f000 f9c4 	bl	8004244 <__multadd>
 8003ebc:	4629      	mov	r1, r5
 8003ebe:	4607      	mov	r7, r0
 8003ec0:	2300      	movs	r3, #0
 8003ec2:	220a      	movs	r2, #10
 8003ec4:	4658      	mov	r0, fp
 8003ec6:	f000 f9bd 	bl	8004244 <__multadd>
 8003eca:	4605      	mov	r5, r0
 8003ecc:	e7f0      	b.n	8003eb0 <_dtoa_r+0xac0>
 8003ece:	9b08      	ldr	r3, [sp, #32]
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	bfcc      	ite	gt
 8003ed4:	461e      	movgt	r6, r3
 8003ed6:	2601      	movle	r6, #1
 8003ed8:	4456      	add	r6, sl
 8003eda:	2700      	movs	r7, #0
 8003edc:	4649      	mov	r1, r9
 8003ede:	2201      	movs	r2, #1
 8003ee0:	4658      	mov	r0, fp
 8003ee2:	f000 fba5 	bl	8004630 <__lshift>
 8003ee6:	4621      	mov	r1, r4
 8003ee8:	4681      	mov	r9, r0
 8003eea:	f000 fc0d 	bl	8004708 <__mcmp>
 8003eee:	2800      	cmp	r0, #0
 8003ef0:	dcb0      	bgt.n	8003e54 <_dtoa_r+0xa64>
 8003ef2:	d102      	bne.n	8003efa <_dtoa_r+0xb0a>
 8003ef4:	f018 0f01 	tst.w	r8, #1
 8003ef8:	d1ac      	bne.n	8003e54 <_dtoa_r+0xa64>
 8003efa:	4633      	mov	r3, r6
 8003efc:	461e      	mov	r6, r3
 8003efe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003f02:	2a30      	cmp	r2, #48	@ 0x30
 8003f04:	d0fa      	beq.n	8003efc <_dtoa_r+0xb0c>
 8003f06:	e5be      	b.n	8003a86 <_dtoa_r+0x696>
 8003f08:	459a      	cmp	sl, r3
 8003f0a:	d1a4      	bne.n	8003e56 <_dtoa_r+0xa66>
 8003f0c:	9b04      	ldr	r3, [sp, #16]
 8003f0e:	3301      	adds	r3, #1
 8003f10:	9304      	str	r3, [sp, #16]
 8003f12:	2331      	movs	r3, #49	@ 0x31
 8003f14:	f88a 3000 	strb.w	r3, [sl]
 8003f18:	e5b5      	b.n	8003a86 <_dtoa_r+0x696>
 8003f1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003f1c:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003f7c <_dtoa_r+0xb8c>
 8003f20:	b11b      	cbz	r3, 8003f2a <_dtoa_r+0xb3a>
 8003f22:	f10a 0308 	add.w	r3, sl, #8
 8003f26:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003f28:	6013      	str	r3, [r2, #0]
 8003f2a:	4650      	mov	r0, sl
 8003f2c:	b017      	add	sp, #92	@ 0x5c
 8003f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003f34:	2b01      	cmp	r3, #1
 8003f36:	f77f ae3d 	ble.w	8003bb4 <_dtoa_r+0x7c4>
 8003f3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003f3c:	930a      	str	r3, [sp, #40]	@ 0x28
 8003f3e:	2001      	movs	r0, #1
 8003f40:	e65b      	b.n	8003bfa <_dtoa_r+0x80a>
 8003f42:	9b08      	ldr	r3, [sp, #32]
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	f77f aed6 	ble.w	8003cf6 <_dtoa_r+0x906>
 8003f4a:	4656      	mov	r6, sl
 8003f4c:	4621      	mov	r1, r4
 8003f4e:	4648      	mov	r0, r9
 8003f50:	f7ff f9c6 	bl	80032e0 <quorem>
 8003f54:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003f58:	f806 8b01 	strb.w	r8, [r6], #1
 8003f5c:	9b08      	ldr	r3, [sp, #32]
 8003f5e:	eba6 020a 	sub.w	r2, r6, sl
 8003f62:	4293      	cmp	r3, r2
 8003f64:	ddb3      	ble.n	8003ece <_dtoa_r+0xade>
 8003f66:	4649      	mov	r1, r9
 8003f68:	2300      	movs	r3, #0
 8003f6a:	220a      	movs	r2, #10
 8003f6c:	4658      	mov	r0, fp
 8003f6e:	f000 f969 	bl	8004244 <__multadd>
 8003f72:	4681      	mov	r9, r0
 8003f74:	e7ea      	b.n	8003f4c <_dtoa_r+0xb5c>
 8003f76:	bf00      	nop
 8003f78:	08006a2c 	.word	0x08006a2c
 8003f7c:	080069b0 	.word	0x080069b0

08003f80 <_free_r>:
 8003f80:	b538      	push	{r3, r4, r5, lr}
 8003f82:	4605      	mov	r5, r0
 8003f84:	2900      	cmp	r1, #0
 8003f86:	d041      	beq.n	800400c <_free_r+0x8c>
 8003f88:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003f8c:	1f0c      	subs	r4, r1, #4
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	bfb8      	it	lt
 8003f92:	18e4      	addlt	r4, r4, r3
 8003f94:	f000 f8e8 	bl	8004168 <__malloc_lock>
 8003f98:	4a1d      	ldr	r2, [pc, #116]	@ (8004010 <_free_r+0x90>)
 8003f9a:	6813      	ldr	r3, [r2, #0]
 8003f9c:	b933      	cbnz	r3, 8003fac <_free_r+0x2c>
 8003f9e:	6063      	str	r3, [r4, #4]
 8003fa0:	6014      	str	r4, [r2, #0]
 8003fa2:	4628      	mov	r0, r5
 8003fa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003fa8:	f000 b8e4 	b.w	8004174 <__malloc_unlock>
 8003fac:	42a3      	cmp	r3, r4
 8003fae:	d908      	bls.n	8003fc2 <_free_r+0x42>
 8003fb0:	6820      	ldr	r0, [r4, #0]
 8003fb2:	1821      	adds	r1, r4, r0
 8003fb4:	428b      	cmp	r3, r1
 8003fb6:	bf01      	itttt	eq
 8003fb8:	6819      	ldreq	r1, [r3, #0]
 8003fba:	685b      	ldreq	r3, [r3, #4]
 8003fbc:	1809      	addeq	r1, r1, r0
 8003fbe:	6021      	streq	r1, [r4, #0]
 8003fc0:	e7ed      	b.n	8003f9e <_free_r+0x1e>
 8003fc2:	461a      	mov	r2, r3
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	b10b      	cbz	r3, 8003fcc <_free_r+0x4c>
 8003fc8:	42a3      	cmp	r3, r4
 8003fca:	d9fa      	bls.n	8003fc2 <_free_r+0x42>
 8003fcc:	6811      	ldr	r1, [r2, #0]
 8003fce:	1850      	adds	r0, r2, r1
 8003fd0:	42a0      	cmp	r0, r4
 8003fd2:	d10b      	bne.n	8003fec <_free_r+0x6c>
 8003fd4:	6820      	ldr	r0, [r4, #0]
 8003fd6:	4401      	add	r1, r0
 8003fd8:	1850      	adds	r0, r2, r1
 8003fda:	4283      	cmp	r3, r0
 8003fdc:	6011      	str	r1, [r2, #0]
 8003fde:	d1e0      	bne.n	8003fa2 <_free_r+0x22>
 8003fe0:	6818      	ldr	r0, [r3, #0]
 8003fe2:	685b      	ldr	r3, [r3, #4]
 8003fe4:	6053      	str	r3, [r2, #4]
 8003fe6:	4408      	add	r0, r1
 8003fe8:	6010      	str	r0, [r2, #0]
 8003fea:	e7da      	b.n	8003fa2 <_free_r+0x22>
 8003fec:	d902      	bls.n	8003ff4 <_free_r+0x74>
 8003fee:	230c      	movs	r3, #12
 8003ff0:	602b      	str	r3, [r5, #0]
 8003ff2:	e7d6      	b.n	8003fa2 <_free_r+0x22>
 8003ff4:	6820      	ldr	r0, [r4, #0]
 8003ff6:	1821      	adds	r1, r4, r0
 8003ff8:	428b      	cmp	r3, r1
 8003ffa:	bf04      	itt	eq
 8003ffc:	6819      	ldreq	r1, [r3, #0]
 8003ffe:	685b      	ldreq	r3, [r3, #4]
 8004000:	6063      	str	r3, [r4, #4]
 8004002:	bf04      	itt	eq
 8004004:	1809      	addeq	r1, r1, r0
 8004006:	6021      	streq	r1, [r4, #0]
 8004008:	6054      	str	r4, [r2, #4]
 800400a:	e7ca      	b.n	8003fa2 <_free_r+0x22>
 800400c:	bd38      	pop	{r3, r4, r5, pc}
 800400e:	bf00      	nop
 8004010:	200003bc 	.word	0x200003bc

08004014 <malloc>:
 8004014:	4b02      	ldr	r3, [pc, #8]	@ (8004020 <malloc+0xc>)
 8004016:	4601      	mov	r1, r0
 8004018:	6818      	ldr	r0, [r3, #0]
 800401a:	f000 b825 	b.w	8004068 <_malloc_r>
 800401e:	bf00      	nop
 8004020:	2000002c 	.word	0x2000002c

08004024 <sbrk_aligned>:
 8004024:	b570      	push	{r4, r5, r6, lr}
 8004026:	4e0f      	ldr	r6, [pc, #60]	@ (8004064 <sbrk_aligned+0x40>)
 8004028:	460c      	mov	r4, r1
 800402a:	6831      	ldr	r1, [r6, #0]
 800402c:	4605      	mov	r5, r0
 800402e:	b911      	cbnz	r1, 8004036 <sbrk_aligned+0x12>
 8004030:	f001 fdf4 	bl	8005c1c <_sbrk_r>
 8004034:	6030      	str	r0, [r6, #0]
 8004036:	4621      	mov	r1, r4
 8004038:	4628      	mov	r0, r5
 800403a:	f001 fdef 	bl	8005c1c <_sbrk_r>
 800403e:	1c43      	adds	r3, r0, #1
 8004040:	d103      	bne.n	800404a <sbrk_aligned+0x26>
 8004042:	f04f 34ff 	mov.w	r4, #4294967295
 8004046:	4620      	mov	r0, r4
 8004048:	bd70      	pop	{r4, r5, r6, pc}
 800404a:	1cc4      	adds	r4, r0, #3
 800404c:	f024 0403 	bic.w	r4, r4, #3
 8004050:	42a0      	cmp	r0, r4
 8004052:	d0f8      	beq.n	8004046 <sbrk_aligned+0x22>
 8004054:	1a21      	subs	r1, r4, r0
 8004056:	4628      	mov	r0, r5
 8004058:	f001 fde0 	bl	8005c1c <_sbrk_r>
 800405c:	3001      	adds	r0, #1
 800405e:	d1f2      	bne.n	8004046 <sbrk_aligned+0x22>
 8004060:	e7ef      	b.n	8004042 <sbrk_aligned+0x1e>
 8004062:	bf00      	nop
 8004064:	200003b8 	.word	0x200003b8

08004068 <_malloc_r>:
 8004068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800406c:	1ccd      	adds	r5, r1, #3
 800406e:	f025 0503 	bic.w	r5, r5, #3
 8004072:	3508      	adds	r5, #8
 8004074:	2d0c      	cmp	r5, #12
 8004076:	bf38      	it	cc
 8004078:	250c      	movcc	r5, #12
 800407a:	2d00      	cmp	r5, #0
 800407c:	4606      	mov	r6, r0
 800407e:	db01      	blt.n	8004084 <_malloc_r+0x1c>
 8004080:	42a9      	cmp	r1, r5
 8004082:	d904      	bls.n	800408e <_malloc_r+0x26>
 8004084:	230c      	movs	r3, #12
 8004086:	6033      	str	r3, [r6, #0]
 8004088:	2000      	movs	r0, #0
 800408a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800408e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004164 <_malloc_r+0xfc>
 8004092:	f000 f869 	bl	8004168 <__malloc_lock>
 8004096:	f8d8 3000 	ldr.w	r3, [r8]
 800409a:	461c      	mov	r4, r3
 800409c:	bb44      	cbnz	r4, 80040f0 <_malloc_r+0x88>
 800409e:	4629      	mov	r1, r5
 80040a0:	4630      	mov	r0, r6
 80040a2:	f7ff ffbf 	bl	8004024 <sbrk_aligned>
 80040a6:	1c43      	adds	r3, r0, #1
 80040a8:	4604      	mov	r4, r0
 80040aa:	d158      	bne.n	800415e <_malloc_r+0xf6>
 80040ac:	f8d8 4000 	ldr.w	r4, [r8]
 80040b0:	4627      	mov	r7, r4
 80040b2:	2f00      	cmp	r7, #0
 80040b4:	d143      	bne.n	800413e <_malloc_r+0xd6>
 80040b6:	2c00      	cmp	r4, #0
 80040b8:	d04b      	beq.n	8004152 <_malloc_r+0xea>
 80040ba:	6823      	ldr	r3, [r4, #0]
 80040bc:	4639      	mov	r1, r7
 80040be:	4630      	mov	r0, r6
 80040c0:	eb04 0903 	add.w	r9, r4, r3
 80040c4:	f001 fdaa 	bl	8005c1c <_sbrk_r>
 80040c8:	4581      	cmp	r9, r0
 80040ca:	d142      	bne.n	8004152 <_malloc_r+0xea>
 80040cc:	6821      	ldr	r1, [r4, #0]
 80040ce:	1a6d      	subs	r5, r5, r1
 80040d0:	4629      	mov	r1, r5
 80040d2:	4630      	mov	r0, r6
 80040d4:	f7ff ffa6 	bl	8004024 <sbrk_aligned>
 80040d8:	3001      	adds	r0, #1
 80040da:	d03a      	beq.n	8004152 <_malloc_r+0xea>
 80040dc:	6823      	ldr	r3, [r4, #0]
 80040de:	442b      	add	r3, r5
 80040e0:	6023      	str	r3, [r4, #0]
 80040e2:	f8d8 3000 	ldr.w	r3, [r8]
 80040e6:	685a      	ldr	r2, [r3, #4]
 80040e8:	bb62      	cbnz	r2, 8004144 <_malloc_r+0xdc>
 80040ea:	f8c8 7000 	str.w	r7, [r8]
 80040ee:	e00f      	b.n	8004110 <_malloc_r+0xa8>
 80040f0:	6822      	ldr	r2, [r4, #0]
 80040f2:	1b52      	subs	r2, r2, r5
 80040f4:	d420      	bmi.n	8004138 <_malloc_r+0xd0>
 80040f6:	2a0b      	cmp	r2, #11
 80040f8:	d917      	bls.n	800412a <_malloc_r+0xc2>
 80040fa:	1961      	adds	r1, r4, r5
 80040fc:	42a3      	cmp	r3, r4
 80040fe:	6025      	str	r5, [r4, #0]
 8004100:	bf18      	it	ne
 8004102:	6059      	strne	r1, [r3, #4]
 8004104:	6863      	ldr	r3, [r4, #4]
 8004106:	bf08      	it	eq
 8004108:	f8c8 1000 	streq.w	r1, [r8]
 800410c:	5162      	str	r2, [r4, r5]
 800410e:	604b      	str	r3, [r1, #4]
 8004110:	4630      	mov	r0, r6
 8004112:	f000 f82f 	bl	8004174 <__malloc_unlock>
 8004116:	f104 000b 	add.w	r0, r4, #11
 800411a:	1d23      	adds	r3, r4, #4
 800411c:	f020 0007 	bic.w	r0, r0, #7
 8004120:	1ac2      	subs	r2, r0, r3
 8004122:	bf1c      	itt	ne
 8004124:	1a1b      	subne	r3, r3, r0
 8004126:	50a3      	strne	r3, [r4, r2]
 8004128:	e7af      	b.n	800408a <_malloc_r+0x22>
 800412a:	6862      	ldr	r2, [r4, #4]
 800412c:	42a3      	cmp	r3, r4
 800412e:	bf0c      	ite	eq
 8004130:	f8c8 2000 	streq.w	r2, [r8]
 8004134:	605a      	strne	r2, [r3, #4]
 8004136:	e7eb      	b.n	8004110 <_malloc_r+0xa8>
 8004138:	4623      	mov	r3, r4
 800413a:	6864      	ldr	r4, [r4, #4]
 800413c:	e7ae      	b.n	800409c <_malloc_r+0x34>
 800413e:	463c      	mov	r4, r7
 8004140:	687f      	ldr	r7, [r7, #4]
 8004142:	e7b6      	b.n	80040b2 <_malloc_r+0x4a>
 8004144:	461a      	mov	r2, r3
 8004146:	685b      	ldr	r3, [r3, #4]
 8004148:	42a3      	cmp	r3, r4
 800414a:	d1fb      	bne.n	8004144 <_malloc_r+0xdc>
 800414c:	2300      	movs	r3, #0
 800414e:	6053      	str	r3, [r2, #4]
 8004150:	e7de      	b.n	8004110 <_malloc_r+0xa8>
 8004152:	230c      	movs	r3, #12
 8004154:	6033      	str	r3, [r6, #0]
 8004156:	4630      	mov	r0, r6
 8004158:	f000 f80c 	bl	8004174 <__malloc_unlock>
 800415c:	e794      	b.n	8004088 <_malloc_r+0x20>
 800415e:	6005      	str	r5, [r0, #0]
 8004160:	e7d6      	b.n	8004110 <_malloc_r+0xa8>
 8004162:	bf00      	nop
 8004164:	200003bc 	.word	0x200003bc

08004168 <__malloc_lock>:
 8004168:	4801      	ldr	r0, [pc, #4]	@ (8004170 <__malloc_lock+0x8>)
 800416a:	f7ff b8b2 	b.w	80032d2 <__retarget_lock_acquire_recursive>
 800416e:	bf00      	nop
 8004170:	200003b4 	.word	0x200003b4

08004174 <__malloc_unlock>:
 8004174:	4801      	ldr	r0, [pc, #4]	@ (800417c <__malloc_unlock+0x8>)
 8004176:	f7ff b8ad 	b.w	80032d4 <__retarget_lock_release_recursive>
 800417a:	bf00      	nop
 800417c:	200003b4 	.word	0x200003b4

08004180 <_Balloc>:
 8004180:	b570      	push	{r4, r5, r6, lr}
 8004182:	69c6      	ldr	r6, [r0, #28]
 8004184:	4604      	mov	r4, r0
 8004186:	460d      	mov	r5, r1
 8004188:	b976      	cbnz	r6, 80041a8 <_Balloc+0x28>
 800418a:	2010      	movs	r0, #16
 800418c:	f7ff ff42 	bl	8004014 <malloc>
 8004190:	4602      	mov	r2, r0
 8004192:	61e0      	str	r0, [r4, #28]
 8004194:	b920      	cbnz	r0, 80041a0 <_Balloc+0x20>
 8004196:	4b18      	ldr	r3, [pc, #96]	@ (80041f8 <_Balloc+0x78>)
 8004198:	4818      	ldr	r0, [pc, #96]	@ (80041fc <_Balloc+0x7c>)
 800419a:	216b      	movs	r1, #107	@ 0x6b
 800419c:	f001 fd62 	bl	8005c64 <__assert_func>
 80041a0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80041a4:	6006      	str	r6, [r0, #0]
 80041a6:	60c6      	str	r6, [r0, #12]
 80041a8:	69e6      	ldr	r6, [r4, #28]
 80041aa:	68f3      	ldr	r3, [r6, #12]
 80041ac:	b183      	cbz	r3, 80041d0 <_Balloc+0x50>
 80041ae:	69e3      	ldr	r3, [r4, #28]
 80041b0:	68db      	ldr	r3, [r3, #12]
 80041b2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80041b6:	b9b8      	cbnz	r0, 80041e8 <_Balloc+0x68>
 80041b8:	2101      	movs	r1, #1
 80041ba:	fa01 f605 	lsl.w	r6, r1, r5
 80041be:	1d72      	adds	r2, r6, #5
 80041c0:	0092      	lsls	r2, r2, #2
 80041c2:	4620      	mov	r0, r4
 80041c4:	f001 fd6c 	bl	8005ca0 <_calloc_r>
 80041c8:	b160      	cbz	r0, 80041e4 <_Balloc+0x64>
 80041ca:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80041ce:	e00e      	b.n	80041ee <_Balloc+0x6e>
 80041d0:	2221      	movs	r2, #33	@ 0x21
 80041d2:	2104      	movs	r1, #4
 80041d4:	4620      	mov	r0, r4
 80041d6:	f001 fd63 	bl	8005ca0 <_calloc_r>
 80041da:	69e3      	ldr	r3, [r4, #28]
 80041dc:	60f0      	str	r0, [r6, #12]
 80041de:	68db      	ldr	r3, [r3, #12]
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d1e4      	bne.n	80041ae <_Balloc+0x2e>
 80041e4:	2000      	movs	r0, #0
 80041e6:	bd70      	pop	{r4, r5, r6, pc}
 80041e8:	6802      	ldr	r2, [r0, #0]
 80041ea:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80041ee:	2300      	movs	r3, #0
 80041f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80041f4:	e7f7      	b.n	80041e6 <_Balloc+0x66>
 80041f6:	bf00      	nop
 80041f8:	080069bd 	.word	0x080069bd
 80041fc:	08006a3d 	.word	0x08006a3d

08004200 <_Bfree>:
 8004200:	b570      	push	{r4, r5, r6, lr}
 8004202:	69c6      	ldr	r6, [r0, #28]
 8004204:	4605      	mov	r5, r0
 8004206:	460c      	mov	r4, r1
 8004208:	b976      	cbnz	r6, 8004228 <_Bfree+0x28>
 800420a:	2010      	movs	r0, #16
 800420c:	f7ff ff02 	bl	8004014 <malloc>
 8004210:	4602      	mov	r2, r0
 8004212:	61e8      	str	r0, [r5, #28]
 8004214:	b920      	cbnz	r0, 8004220 <_Bfree+0x20>
 8004216:	4b09      	ldr	r3, [pc, #36]	@ (800423c <_Bfree+0x3c>)
 8004218:	4809      	ldr	r0, [pc, #36]	@ (8004240 <_Bfree+0x40>)
 800421a:	218f      	movs	r1, #143	@ 0x8f
 800421c:	f001 fd22 	bl	8005c64 <__assert_func>
 8004220:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004224:	6006      	str	r6, [r0, #0]
 8004226:	60c6      	str	r6, [r0, #12]
 8004228:	b13c      	cbz	r4, 800423a <_Bfree+0x3a>
 800422a:	69eb      	ldr	r3, [r5, #28]
 800422c:	6862      	ldr	r2, [r4, #4]
 800422e:	68db      	ldr	r3, [r3, #12]
 8004230:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004234:	6021      	str	r1, [r4, #0]
 8004236:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800423a:	bd70      	pop	{r4, r5, r6, pc}
 800423c:	080069bd 	.word	0x080069bd
 8004240:	08006a3d 	.word	0x08006a3d

08004244 <__multadd>:
 8004244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004248:	690d      	ldr	r5, [r1, #16]
 800424a:	4607      	mov	r7, r0
 800424c:	460c      	mov	r4, r1
 800424e:	461e      	mov	r6, r3
 8004250:	f101 0c14 	add.w	ip, r1, #20
 8004254:	2000      	movs	r0, #0
 8004256:	f8dc 3000 	ldr.w	r3, [ip]
 800425a:	b299      	uxth	r1, r3
 800425c:	fb02 6101 	mla	r1, r2, r1, r6
 8004260:	0c1e      	lsrs	r6, r3, #16
 8004262:	0c0b      	lsrs	r3, r1, #16
 8004264:	fb02 3306 	mla	r3, r2, r6, r3
 8004268:	b289      	uxth	r1, r1
 800426a:	3001      	adds	r0, #1
 800426c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004270:	4285      	cmp	r5, r0
 8004272:	f84c 1b04 	str.w	r1, [ip], #4
 8004276:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800427a:	dcec      	bgt.n	8004256 <__multadd+0x12>
 800427c:	b30e      	cbz	r6, 80042c2 <__multadd+0x7e>
 800427e:	68a3      	ldr	r3, [r4, #8]
 8004280:	42ab      	cmp	r3, r5
 8004282:	dc19      	bgt.n	80042b8 <__multadd+0x74>
 8004284:	6861      	ldr	r1, [r4, #4]
 8004286:	4638      	mov	r0, r7
 8004288:	3101      	adds	r1, #1
 800428a:	f7ff ff79 	bl	8004180 <_Balloc>
 800428e:	4680      	mov	r8, r0
 8004290:	b928      	cbnz	r0, 800429e <__multadd+0x5a>
 8004292:	4602      	mov	r2, r0
 8004294:	4b0c      	ldr	r3, [pc, #48]	@ (80042c8 <__multadd+0x84>)
 8004296:	480d      	ldr	r0, [pc, #52]	@ (80042cc <__multadd+0x88>)
 8004298:	21ba      	movs	r1, #186	@ 0xba
 800429a:	f001 fce3 	bl	8005c64 <__assert_func>
 800429e:	6922      	ldr	r2, [r4, #16]
 80042a0:	3202      	adds	r2, #2
 80042a2:	f104 010c 	add.w	r1, r4, #12
 80042a6:	0092      	lsls	r2, r2, #2
 80042a8:	300c      	adds	r0, #12
 80042aa:	f001 fcc7 	bl	8005c3c <memcpy>
 80042ae:	4621      	mov	r1, r4
 80042b0:	4638      	mov	r0, r7
 80042b2:	f7ff ffa5 	bl	8004200 <_Bfree>
 80042b6:	4644      	mov	r4, r8
 80042b8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80042bc:	3501      	adds	r5, #1
 80042be:	615e      	str	r6, [r3, #20]
 80042c0:	6125      	str	r5, [r4, #16]
 80042c2:	4620      	mov	r0, r4
 80042c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80042c8:	08006a2c 	.word	0x08006a2c
 80042cc:	08006a3d 	.word	0x08006a3d

080042d0 <__s2b>:
 80042d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80042d4:	460c      	mov	r4, r1
 80042d6:	4615      	mov	r5, r2
 80042d8:	461f      	mov	r7, r3
 80042da:	2209      	movs	r2, #9
 80042dc:	3308      	adds	r3, #8
 80042de:	4606      	mov	r6, r0
 80042e0:	fb93 f3f2 	sdiv	r3, r3, r2
 80042e4:	2100      	movs	r1, #0
 80042e6:	2201      	movs	r2, #1
 80042e8:	429a      	cmp	r2, r3
 80042ea:	db09      	blt.n	8004300 <__s2b+0x30>
 80042ec:	4630      	mov	r0, r6
 80042ee:	f7ff ff47 	bl	8004180 <_Balloc>
 80042f2:	b940      	cbnz	r0, 8004306 <__s2b+0x36>
 80042f4:	4602      	mov	r2, r0
 80042f6:	4b19      	ldr	r3, [pc, #100]	@ (800435c <__s2b+0x8c>)
 80042f8:	4819      	ldr	r0, [pc, #100]	@ (8004360 <__s2b+0x90>)
 80042fa:	21d3      	movs	r1, #211	@ 0xd3
 80042fc:	f001 fcb2 	bl	8005c64 <__assert_func>
 8004300:	0052      	lsls	r2, r2, #1
 8004302:	3101      	adds	r1, #1
 8004304:	e7f0      	b.n	80042e8 <__s2b+0x18>
 8004306:	9b08      	ldr	r3, [sp, #32]
 8004308:	6143      	str	r3, [r0, #20]
 800430a:	2d09      	cmp	r5, #9
 800430c:	f04f 0301 	mov.w	r3, #1
 8004310:	6103      	str	r3, [r0, #16]
 8004312:	dd16      	ble.n	8004342 <__s2b+0x72>
 8004314:	f104 0909 	add.w	r9, r4, #9
 8004318:	46c8      	mov	r8, r9
 800431a:	442c      	add	r4, r5
 800431c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004320:	4601      	mov	r1, r0
 8004322:	3b30      	subs	r3, #48	@ 0x30
 8004324:	220a      	movs	r2, #10
 8004326:	4630      	mov	r0, r6
 8004328:	f7ff ff8c 	bl	8004244 <__multadd>
 800432c:	45a0      	cmp	r8, r4
 800432e:	d1f5      	bne.n	800431c <__s2b+0x4c>
 8004330:	f1a5 0408 	sub.w	r4, r5, #8
 8004334:	444c      	add	r4, r9
 8004336:	1b2d      	subs	r5, r5, r4
 8004338:	1963      	adds	r3, r4, r5
 800433a:	42bb      	cmp	r3, r7
 800433c:	db04      	blt.n	8004348 <__s2b+0x78>
 800433e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004342:	340a      	adds	r4, #10
 8004344:	2509      	movs	r5, #9
 8004346:	e7f6      	b.n	8004336 <__s2b+0x66>
 8004348:	f814 3b01 	ldrb.w	r3, [r4], #1
 800434c:	4601      	mov	r1, r0
 800434e:	3b30      	subs	r3, #48	@ 0x30
 8004350:	220a      	movs	r2, #10
 8004352:	4630      	mov	r0, r6
 8004354:	f7ff ff76 	bl	8004244 <__multadd>
 8004358:	e7ee      	b.n	8004338 <__s2b+0x68>
 800435a:	bf00      	nop
 800435c:	08006a2c 	.word	0x08006a2c
 8004360:	08006a3d 	.word	0x08006a3d

08004364 <__hi0bits>:
 8004364:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004368:	4603      	mov	r3, r0
 800436a:	bf36      	itet	cc
 800436c:	0403      	lslcc	r3, r0, #16
 800436e:	2000      	movcs	r0, #0
 8004370:	2010      	movcc	r0, #16
 8004372:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004376:	bf3c      	itt	cc
 8004378:	021b      	lslcc	r3, r3, #8
 800437a:	3008      	addcc	r0, #8
 800437c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004380:	bf3c      	itt	cc
 8004382:	011b      	lslcc	r3, r3, #4
 8004384:	3004      	addcc	r0, #4
 8004386:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800438a:	bf3c      	itt	cc
 800438c:	009b      	lslcc	r3, r3, #2
 800438e:	3002      	addcc	r0, #2
 8004390:	2b00      	cmp	r3, #0
 8004392:	db05      	blt.n	80043a0 <__hi0bits+0x3c>
 8004394:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8004398:	f100 0001 	add.w	r0, r0, #1
 800439c:	bf08      	it	eq
 800439e:	2020      	moveq	r0, #32
 80043a0:	4770      	bx	lr

080043a2 <__lo0bits>:
 80043a2:	6803      	ldr	r3, [r0, #0]
 80043a4:	4602      	mov	r2, r0
 80043a6:	f013 0007 	ands.w	r0, r3, #7
 80043aa:	d00b      	beq.n	80043c4 <__lo0bits+0x22>
 80043ac:	07d9      	lsls	r1, r3, #31
 80043ae:	d421      	bmi.n	80043f4 <__lo0bits+0x52>
 80043b0:	0798      	lsls	r0, r3, #30
 80043b2:	bf49      	itett	mi
 80043b4:	085b      	lsrmi	r3, r3, #1
 80043b6:	089b      	lsrpl	r3, r3, #2
 80043b8:	2001      	movmi	r0, #1
 80043ba:	6013      	strmi	r3, [r2, #0]
 80043bc:	bf5c      	itt	pl
 80043be:	6013      	strpl	r3, [r2, #0]
 80043c0:	2002      	movpl	r0, #2
 80043c2:	4770      	bx	lr
 80043c4:	b299      	uxth	r1, r3
 80043c6:	b909      	cbnz	r1, 80043cc <__lo0bits+0x2a>
 80043c8:	0c1b      	lsrs	r3, r3, #16
 80043ca:	2010      	movs	r0, #16
 80043cc:	b2d9      	uxtb	r1, r3
 80043ce:	b909      	cbnz	r1, 80043d4 <__lo0bits+0x32>
 80043d0:	3008      	adds	r0, #8
 80043d2:	0a1b      	lsrs	r3, r3, #8
 80043d4:	0719      	lsls	r1, r3, #28
 80043d6:	bf04      	itt	eq
 80043d8:	091b      	lsreq	r3, r3, #4
 80043da:	3004      	addeq	r0, #4
 80043dc:	0799      	lsls	r1, r3, #30
 80043de:	bf04      	itt	eq
 80043e0:	089b      	lsreq	r3, r3, #2
 80043e2:	3002      	addeq	r0, #2
 80043e4:	07d9      	lsls	r1, r3, #31
 80043e6:	d403      	bmi.n	80043f0 <__lo0bits+0x4e>
 80043e8:	085b      	lsrs	r3, r3, #1
 80043ea:	f100 0001 	add.w	r0, r0, #1
 80043ee:	d003      	beq.n	80043f8 <__lo0bits+0x56>
 80043f0:	6013      	str	r3, [r2, #0]
 80043f2:	4770      	bx	lr
 80043f4:	2000      	movs	r0, #0
 80043f6:	4770      	bx	lr
 80043f8:	2020      	movs	r0, #32
 80043fa:	4770      	bx	lr

080043fc <__i2b>:
 80043fc:	b510      	push	{r4, lr}
 80043fe:	460c      	mov	r4, r1
 8004400:	2101      	movs	r1, #1
 8004402:	f7ff febd 	bl	8004180 <_Balloc>
 8004406:	4602      	mov	r2, r0
 8004408:	b928      	cbnz	r0, 8004416 <__i2b+0x1a>
 800440a:	4b05      	ldr	r3, [pc, #20]	@ (8004420 <__i2b+0x24>)
 800440c:	4805      	ldr	r0, [pc, #20]	@ (8004424 <__i2b+0x28>)
 800440e:	f240 1145 	movw	r1, #325	@ 0x145
 8004412:	f001 fc27 	bl	8005c64 <__assert_func>
 8004416:	2301      	movs	r3, #1
 8004418:	6144      	str	r4, [r0, #20]
 800441a:	6103      	str	r3, [r0, #16]
 800441c:	bd10      	pop	{r4, pc}
 800441e:	bf00      	nop
 8004420:	08006a2c 	.word	0x08006a2c
 8004424:	08006a3d 	.word	0x08006a3d

08004428 <__multiply>:
 8004428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800442c:	4614      	mov	r4, r2
 800442e:	690a      	ldr	r2, [r1, #16]
 8004430:	6923      	ldr	r3, [r4, #16]
 8004432:	429a      	cmp	r2, r3
 8004434:	bfa8      	it	ge
 8004436:	4623      	movge	r3, r4
 8004438:	460f      	mov	r7, r1
 800443a:	bfa4      	itt	ge
 800443c:	460c      	movge	r4, r1
 800443e:	461f      	movge	r7, r3
 8004440:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8004444:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8004448:	68a3      	ldr	r3, [r4, #8]
 800444a:	6861      	ldr	r1, [r4, #4]
 800444c:	eb0a 0609 	add.w	r6, sl, r9
 8004450:	42b3      	cmp	r3, r6
 8004452:	b085      	sub	sp, #20
 8004454:	bfb8      	it	lt
 8004456:	3101      	addlt	r1, #1
 8004458:	f7ff fe92 	bl	8004180 <_Balloc>
 800445c:	b930      	cbnz	r0, 800446c <__multiply+0x44>
 800445e:	4602      	mov	r2, r0
 8004460:	4b44      	ldr	r3, [pc, #272]	@ (8004574 <__multiply+0x14c>)
 8004462:	4845      	ldr	r0, [pc, #276]	@ (8004578 <__multiply+0x150>)
 8004464:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004468:	f001 fbfc 	bl	8005c64 <__assert_func>
 800446c:	f100 0514 	add.w	r5, r0, #20
 8004470:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8004474:	462b      	mov	r3, r5
 8004476:	2200      	movs	r2, #0
 8004478:	4543      	cmp	r3, r8
 800447a:	d321      	bcc.n	80044c0 <__multiply+0x98>
 800447c:	f107 0114 	add.w	r1, r7, #20
 8004480:	f104 0214 	add.w	r2, r4, #20
 8004484:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8004488:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800448c:	9302      	str	r3, [sp, #8]
 800448e:	1b13      	subs	r3, r2, r4
 8004490:	3b15      	subs	r3, #21
 8004492:	f023 0303 	bic.w	r3, r3, #3
 8004496:	3304      	adds	r3, #4
 8004498:	f104 0715 	add.w	r7, r4, #21
 800449c:	42ba      	cmp	r2, r7
 800449e:	bf38      	it	cc
 80044a0:	2304      	movcc	r3, #4
 80044a2:	9301      	str	r3, [sp, #4]
 80044a4:	9b02      	ldr	r3, [sp, #8]
 80044a6:	9103      	str	r1, [sp, #12]
 80044a8:	428b      	cmp	r3, r1
 80044aa:	d80c      	bhi.n	80044c6 <__multiply+0x9e>
 80044ac:	2e00      	cmp	r6, #0
 80044ae:	dd03      	ble.n	80044b8 <__multiply+0x90>
 80044b0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d05a      	beq.n	800456e <__multiply+0x146>
 80044b8:	6106      	str	r6, [r0, #16]
 80044ba:	b005      	add	sp, #20
 80044bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044c0:	f843 2b04 	str.w	r2, [r3], #4
 80044c4:	e7d8      	b.n	8004478 <__multiply+0x50>
 80044c6:	f8b1 a000 	ldrh.w	sl, [r1]
 80044ca:	f1ba 0f00 	cmp.w	sl, #0
 80044ce:	d023      	beq.n	8004518 <__multiply+0xf0>
 80044d0:	f104 0e14 	add.w	lr, r4, #20
 80044d4:	46a9      	mov	r9, r5
 80044d6:	f04f 0c00 	mov.w	ip, #0
 80044da:	f85e 7b04 	ldr.w	r7, [lr], #4
 80044de:	f8d9 3000 	ldr.w	r3, [r9]
 80044e2:	fa1f fb87 	uxth.w	fp, r7
 80044e6:	b29b      	uxth	r3, r3
 80044e8:	fb0a 330b 	mla	r3, sl, fp, r3
 80044ec:	4463      	add	r3, ip
 80044ee:	f8d9 c000 	ldr.w	ip, [r9]
 80044f2:	0c3f      	lsrs	r7, r7, #16
 80044f4:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80044f8:	fb0a c707 	mla	r7, sl, r7, ip
 80044fc:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8004500:	b29b      	uxth	r3, r3
 8004502:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004506:	4572      	cmp	r2, lr
 8004508:	f849 3b04 	str.w	r3, [r9], #4
 800450c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8004510:	d8e3      	bhi.n	80044da <__multiply+0xb2>
 8004512:	9b01      	ldr	r3, [sp, #4]
 8004514:	f845 c003 	str.w	ip, [r5, r3]
 8004518:	9b03      	ldr	r3, [sp, #12]
 800451a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800451e:	3104      	adds	r1, #4
 8004520:	f1b9 0f00 	cmp.w	r9, #0
 8004524:	d021      	beq.n	800456a <__multiply+0x142>
 8004526:	682b      	ldr	r3, [r5, #0]
 8004528:	f104 0c14 	add.w	ip, r4, #20
 800452c:	46ae      	mov	lr, r5
 800452e:	f04f 0a00 	mov.w	sl, #0
 8004532:	f8bc b000 	ldrh.w	fp, [ip]
 8004536:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800453a:	fb09 770b 	mla	r7, r9, fp, r7
 800453e:	4457      	add	r7, sl
 8004540:	b29b      	uxth	r3, r3
 8004542:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004546:	f84e 3b04 	str.w	r3, [lr], #4
 800454a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800454e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004552:	f8be 3000 	ldrh.w	r3, [lr]
 8004556:	fb09 330a 	mla	r3, r9, sl, r3
 800455a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800455e:	4562      	cmp	r2, ip
 8004560:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004564:	d8e5      	bhi.n	8004532 <__multiply+0x10a>
 8004566:	9f01      	ldr	r7, [sp, #4]
 8004568:	51eb      	str	r3, [r5, r7]
 800456a:	3504      	adds	r5, #4
 800456c:	e79a      	b.n	80044a4 <__multiply+0x7c>
 800456e:	3e01      	subs	r6, #1
 8004570:	e79c      	b.n	80044ac <__multiply+0x84>
 8004572:	bf00      	nop
 8004574:	08006a2c 	.word	0x08006a2c
 8004578:	08006a3d 	.word	0x08006a3d

0800457c <__pow5mult>:
 800457c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004580:	4615      	mov	r5, r2
 8004582:	f012 0203 	ands.w	r2, r2, #3
 8004586:	4607      	mov	r7, r0
 8004588:	460e      	mov	r6, r1
 800458a:	d007      	beq.n	800459c <__pow5mult+0x20>
 800458c:	4c25      	ldr	r4, [pc, #148]	@ (8004624 <__pow5mult+0xa8>)
 800458e:	3a01      	subs	r2, #1
 8004590:	2300      	movs	r3, #0
 8004592:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004596:	f7ff fe55 	bl	8004244 <__multadd>
 800459a:	4606      	mov	r6, r0
 800459c:	10ad      	asrs	r5, r5, #2
 800459e:	d03d      	beq.n	800461c <__pow5mult+0xa0>
 80045a0:	69fc      	ldr	r4, [r7, #28]
 80045a2:	b97c      	cbnz	r4, 80045c4 <__pow5mult+0x48>
 80045a4:	2010      	movs	r0, #16
 80045a6:	f7ff fd35 	bl	8004014 <malloc>
 80045aa:	4602      	mov	r2, r0
 80045ac:	61f8      	str	r0, [r7, #28]
 80045ae:	b928      	cbnz	r0, 80045bc <__pow5mult+0x40>
 80045b0:	4b1d      	ldr	r3, [pc, #116]	@ (8004628 <__pow5mult+0xac>)
 80045b2:	481e      	ldr	r0, [pc, #120]	@ (800462c <__pow5mult+0xb0>)
 80045b4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80045b8:	f001 fb54 	bl	8005c64 <__assert_func>
 80045bc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80045c0:	6004      	str	r4, [r0, #0]
 80045c2:	60c4      	str	r4, [r0, #12]
 80045c4:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80045c8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80045cc:	b94c      	cbnz	r4, 80045e2 <__pow5mult+0x66>
 80045ce:	f240 2171 	movw	r1, #625	@ 0x271
 80045d2:	4638      	mov	r0, r7
 80045d4:	f7ff ff12 	bl	80043fc <__i2b>
 80045d8:	2300      	movs	r3, #0
 80045da:	f8c8 0008 	str.w	r0, [r8, #8]
 80045de:	4604      	mov	r4, r0
 80045e0:	6003      	str	r3, [r0, #0]
 80045e2:	f04f 0900 	mov.w	r9, #0
 80045e6:	07eb      	lsls	r3, r5, #31
 80045e8:	d50a      	bpl.n	8004600 <__pow5mult+0x84>
 80045ea:	4631      	mov	r1, r6
 80045ec:	4622      	mov	r2, r4
 80045ee:	4638      	mov	r0, r7
 80045f0:	f7ff ff1a 	bl	8004428 <__multiply>
 80045f4:	4631      	mov	r1, r6
 80045f6:	4680      	mov	r8, r0
 80045f8:	4638      	mov	r0, r7
 80045fa:	f7ff fe01 	bl	8004200 <_Bfree>
 80045fe:	4646      	mov	r6, r8
 8004600:	106d      	asrs	r5, r5, #1
 8004602:	d00b      	beq.n	800461c <__pow5mult+0xa0>
 8004604:	6820      	ldr	r0, [r4, #0]
 8004606:	b938      	cbnz	r0, 8004618 <__pow5mult+0x9c>
 8004608:	4622      	mov	r2, r4
 800460a:	4621      	mov	r1, r4
 800460c:	4638      	mov	r0, r7
 800460e:	f7ff ff0b 	bl	8004428 <__multiply>
 8004612:	6020      	str	r0, [r4, #0]
 8004614:	f8c0 9000 	str.w	r9, [r0]
 8004618:	4604      	mov	r4, r0
 800461a:	e7e4      	b.n	80045e6 <__pow5mult+0x6a>
 800461c:	4630      	mov	r0, r6
 800461e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004622:	bf00      	nop
 8004624:	08006a98 	.word	0x08006a98
 8004628:	080069bd 	.word	0x080069bd
 800462c:	08006a3d 	.word	0x08006a3d

08004630 <__lshift>:
 8004630:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004634:	460c      	mov	r4, r1
 8004636:	6849      	ldr	r1, [r1, #4]
 8004638:	6923      	ldr	r3, [r4, #16]
 800463a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800463e:	68a3      	ldr	r3, [r4, #8]
 8004640:	4607      	mov	r7, r0
 8004642:	4691      	mov	r9, r2
 8004644:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004648:	f108 0601 	add.w	r6, r8, #1
 800464c:	42b3      	cmp	r3, r6
 800464e:	db0b      	blt.n	8004668 <__lshift+0x38>
 8004650:	4638      	mov	r0, r7
 8004652:	f7ff fd95 	bl	8004180 <_Balloc>
 8004656:	4605      	mov	r5, r0
 8004658:	b948      	cbnz	r0, 800466e <__lshift+0x3e>
 800465a:	4602      	mov	r2, r0
 800465c:	4b28      	ldr	r3, [pc, #160]	@ (8004700 <__lshift+0xd0>)
 800465e:	4829      	ldr	r0, [pc, #164]	@ (8004704 <__lshift+0xd4>)
 8004660:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004664:	f001 fafe 	bl	8005c64 <__assert_func>
 8004668:	3101      	adds	r1, #1
 800466a:	005b      	lsls	r3, r3, #1
 800466c:	e7ee      	b.n	800464c <__lshift+0x1c>
 800466e:	2300      	movs	r3, #0
 8004670:	f100 0114 	add.w	r1, r0, #20
 8004674:	f100 0210 	add.w	r2, r0, #16
 8004678:	4618      	mov	r0, r3
 800467a:	4553      	cmp	r3, sl
 800467c:	db33      	blt.n	80046e6 <__lshift+0xb6>
 800467e:	6920      	ldr	r0, [r4, #16]
 8004680:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004684:	f104 0314 	add.w	r3, r4, #20
 8004688:	f019 091f 	ands.w	r9, r9, #31
 800468c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004690:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004694:	d02b      	beq.n	80046ee <__lshift+0xbe>
 8004696:	f1c9 0e20 	rsb	lr, r9, #32
 800469a:	468a      	mov	sl, r1
 800469c:	2200      	movs	r2, #0
 800469e:	6818      	ldr	r0, [r3, #0]
 80046a0:	fa00 f009 	lsl.w	r0, r0, r9
 80046a4:	4310      	orrs	r0, r2
 80046a6:	f84a 0b04 	str.w	r0, [sl], #4
 80046aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80046ae:	459c      	cmp	ip, r3
 80046b0:	fa22 f20e 	lsr.w	r2, r2, lr
 80046b4:	d8f3      	bhi.n	800469e <__lshift+0x6e>
 80046b6:	ebac 0304 	sub.w	r3, ip, r4
 80046ba:	3b15      	subs	r3, #21
 80046bc:	f023 0303 	bic.w	r3, r3, #3
 80046c0:	3304      	adds	r3, #4
 80046c2:	f104 0015 	add.w	r0, r4, #21
 80046c6:	4584      	cmp	ip, r0
 80046c8:	bf38      	it	cc
 80046ca:	2304      	movcc	r3, #4
 80046cc:	50ca      	str	r2, [r1, r3]
 80046ce:	b10a      	cbz	r2, 80046d4 <__lshift+0xa4>
 80046d0:	f108 0602 	add.w	r6, r8, #2
 80046d4:	3e01      	subs	r6, #1
 80046d6:	4638      	mov	r0, r7
 80046d8:	612e      	str	r6, [r5, #16]
 80046da:	4621      	mov	r1, r4
 80046dc:	f7ff fd90 	bl	8004200 <_Bfree>
 80046e0:	4628      	mov	r0, r5
 80046e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80046e6:	f842 0f04 	str.w	r0, [r2, #4]!
 80046ea:	3301      	adds	r3, #1
 80046ec:	e7c5      	b.n	800467a <__lshift+0x4a>
 80046ee:	3904      	subs	r1, #4
 80046f0:	f853 2b04 	ldr.w	r2, [r3], #4
 80046f4:	f841 2f04 	str.w	r2, [r1, #4]!
 80046f8:	459c      	cmp	ip, r3
 80046fa:	d8f9      	bhi.n	80046f0 <__lshift+0xc0>
 80046fc:	e7ea      	b.n	80046d4 <__lshift+0xa4>
 80046fe:	bf00      	nop
 8004700:	08006a2c 	.word	0x08006a2c
 8004704:	08006a3d 	.word	0x08006a3d

08004708 <__mcmp>:
 8004708:	690a      	ldr	r2, [r1, #16]
 800470a:	4603      	mov	r3, r0
 800470c:	6900      	ldr	r0, [r0, #16]
 800470e:	1a80      	subs	r0, r0, r2
 8004710:	b530      	push	{r4, r5, lr}
 8004712:	d10e      	bne.n	8004732 <__mcmp+0x2a>
 8004714:	3314      	adds	r3, #20
 8004716:	3114      	adds	r1, #20
 8004718:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800471c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004720:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004724:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004728:	4295      	cmp	r5, r2
 800472a:	d003      	beq.n	8004734 <__mcmp+0x2c>
 800472c:	d205      	bcs.n	800473a <__mcmp+0x32>
 800472e:	f04f 30ff 	mov.w	r0, #4294967295
 8004732:	bd30      	pop	{r4, r5, pc}
 8004734:	42a3      	cmp	r3, r4
 8004736:	d3f3      	bcc.n	8004720 <__mcmp+0x18>
 8004738:	e7fb      	b.n	8004732 <__mcmp+0x2a>
 800473a:	2001      	movs	r0, #1
 800473c:	e7f9      	b.n	8004732 <__mcmp+0x2a>
	...

08004740 <__mdiff>:
 8004740:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004744:	4689      	mov	r9, r1
 8004746:	4606      	mov	r6, r0
 8004748:	4611      	mov	r1, r2
 800474a:	4648      	mov	r0, r9
 800474c:	4614      	mov	r4, r2
 800474e:	f7ff ffdb 	bl	8004708 <__mcmp>
 8004752:	1e05      	subs	r5, r0, #0
 8004754:	d112      	bne.n	800477c <__mdiff+0x3c>
 8004756:	4629      	mov	r1, r5
 8004758:	4630      	mov	r0, r6
 800475a:	f7ff fd11 	bl	8004180 <_Balloc>
 800475e:	4602      	mov	r2, r0
 8004760:	b928      	cbnz	r0, 800476e <__mdiff+0x2e>
 8004762:	4b3e      	ldr	r3, [pc, #248]	@ (800485c <__mdiff+0x11c>)
 8004764:	f240 2137 	movw	r1, #567	@ 0x237
 8004768:	483d      	ldr	r0, [pc, #244]	@ (8004860 <__mdiff+0x120>)
 800476a:	f001 fa7b 	bl	8005c64 <__assert_func>
 800476e:	2301      	movs	r3, #1
 8004770:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004774:	4610      	mov	r0, r2
 8004776:	b003      	add	sp, #12
 8004778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800477c:	bfbc      	itt	lt
 800477e:	464b      	movlt	r3, r9
 8004780:	46a1      	movlt	r9, r4
 8004782:	4630      	mov	r0, r6
 8004784:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004788:	bfba      	itte	lt
 800478a:	461c      	movlt	r4, r3
 800478c:	2501      	movlt	r5, #1
 800478e:	2500      	movge	r5, #0
 8004790:	f7ff fcf6 	bl	8004180 <_Balloc>
 8004794:	4602      	mov	r2, r0
 8004796:	b918      	cbnz	r0, 80047a0 <__mdiff+0x60>
 8004798:	4b30      	ldr	r3, [pc, #192]	@ (800485c <__mdiff+0x11c>)
 800479a:	f240 2145 	movw	r1, #581	@ 0x245
 800479e:	e7e3      	b.n	8004768 <__mdiff+0x28>
 80047a0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80047a4:	6926      	ldr	r6, [r4, #16]
 80047a6:	60c5      	str	r5, [r0, #12]
 80047a8:	f109 0310 	add.w	r3, r9, #16
 80047ac:	f109 0514 	add.w	r5, r9, #20
 80047b0:	f104 0e14 	add.w	lr, r4, #20
 80047b4:	f100 0b14 	add.w	fp, r0, #20
 80047b8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80047bc:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80047c0:	9301      	str	r3, [sp, #4]
 80047c2:	46d9      	mov	r9, fp
 80047c4:	f04f 0c00 	mov.w	ip, #0
 80047c8:	9b01      	ldr	r3, [sp, #4]
 80047ca:	f85e 0b04 	ldr.w	r0, [lr], #4
 80047ce:	f853 af04 	ldr.w	sl, [r3, #4]!
 80047d2:	9301      	str	r3, [sp, #4]
 80047d4:	b281      	uxth	r1, r0
 80047d6:	fa1f f38a 	uxth.w	r3, sl
 80047da:	1a5b      	subs	r3, r3, r1
 80047dc:	0c00      	lsrs	r0, r0, #16
 80047de:	4463      	add	r3, ip
 80047e0:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80047e4:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80047e8:	b29b      	uxth	r3, r3
 80047ea:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80047ee:	4576      	cmp	r6, lr
 80047f0:	f849 3b04 	str.w	r3, [r9], #4
 80047f4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80047f8:	d8e6      	bhi.n	80047c8 <__mdiff+0x88>
 80047fa:	1b33      	subs	r3, r6, r4
 80047fc:	3b15      	subs	r3, #21
 80047fe:	f023 0303 	bic.w	r3, r3, #3
 8004802:	3415      	adds	r4, #21
 8004804:	3304      	adds	r3, #4
 8004806:	42a6      	cmp	r6, r4
 8004808:	bf38      	it	cc
 800480a:	2304      	movcc	r3, #4
 800480c:	441d      	add	r5, r3
 800480e:	445b      	add	r3, fp
 8004810:	461e      	mov	r6, r3
 8004812:	462c      	mov	r4, r5
 8004814:	4544      	cmp	r4, r8
 8004816:	d30e      	bcc.n	8004836 <__mdiff+0xf6>
 8004818:	f108 0103 	add.w	r1, r8, #3
 800481c:	1b49      	subs	r1, r1, r5
 800481e:	f021 0103 	bic.w	r1, r1, #3
 8004822:	3d03      	subs	r5, #3
 8004824:	45a8      	cmp	r8, r5
 8004826:	bf38      	it	cc
 8004828:	2100      	movcc	r1, #0
 800482a:	440b      	add	r3, r1
 800482c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004830:	b191      	cbz	r1, 8004858 <__mdiff+0x118>
 8004832:	6117      	str	r7, [r2, #16]
 8004834:	e79e      	b.n	8004774 <__mdiff+0x34>
 8004836:	f854 1b04 	ldr.w	r1, [r4], #4
 800483a:	46e6      	mov	lr, ip
 800483c:	0c08      	lsrs	r0, r1, #16
 800483e:	fa1c fc81 	uxtah	ip, ip, r1
 8004842:	4471      	add	r1, lr
 8004844:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8004848:	b289      	uxth	r1, r1
 800484a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800484e:	f846 1b04 	str.w	r1, [r6], #4
 8004852:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004856:	e7dd      	b.n	8004814 <__mdiff+0xd4>
 8004858:	3f01      	subs	r7, #1
 800485a:	e7e7      	b.n	800482c <__mdiff+0xec>
 800485c:	08006a2c 	.word	0x08006a2c
 8004860:	08006a3d 	.word	0x08006a3d

08004864 <__ulp>:
 8004864:	4b0e      	ldr	r3, [pc, #56]	@ (80048a0 <__ulp+0x3c>)
 8004866:	400b      	ands	r3, r1
 8004868:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800486c:	2b00      	cmp	r3, #0
 800486e:	dc08      	bgt.n	8004882 <__ulp+0x1e>
 8004870:	425b      	negs	r3, r3
 8004872:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004876:	ea4f 5223 	mov.w	r2, r3, asr #20
 800487a:	da04      	bge.n	8004886 <__ulp+0x22>
 800487c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004880:	4113      	asrs	r3, r2
 8004882:	2200      	movs	r2, #0
 8004884:	e008      	b.n	8004898 <__ulp+0x34>
 8004886:	f1a2 0314 	sub.w	r3, r2, #20
 800488a:	2b1e      	cmp	r3, #30
 800488c:	bfda      	itte	le
 800488e:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004892:	40da      	lsrle	r2, r3
 8004894:	2201      	movgt	r2, #1
 8004896:	2300      	movs	r3, #0
 8004898:	4619      	mov	r1, r3
 800489a:	4610      	mov	r0, r2
 800489c:	4770      	bx	lr
 800489e:	bf00      	nop
 80048a0:	7ff00000 	.word	0x7ff00000

080048a4 <__b2d>:
 80048a4:	6902      	ldr	r2, [r0, #16]
 80048a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048a8:	f100 0614 	add.w	r6, r0, #20
 80048ac:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80048b0:	4f20      	ldr	r7, [pc, #128]	@ (8004934 <__b2d+0x90>)
 80048b2:	f852 4c04 	ldr.w	r4, [r2, #-4]
 80048b6:	4620      	mov	r0, r4
 80048b8:	f7ff fd54 	bl	8004364 <__hi0bits>
 80048bc:	4603      	mov	r3, r0
 80048be:	2b0a      	cmp	r3, #10
 80048c0:	f1c0 0020 	rsb	r0, r0, #32
 80048c4:	f1a2 0504 	sub.w	r5, r2, #4
 80048c8:	6008      	str	r0, [r1, #0]
 80048ca:	dc13      	bgt.n	80048f4 <__b2d+0x50>
 80048cc:	42ae      	cmp	r6, r5
 80048ce:	bf38      	it	cc
 80048d0:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80048d4:	f1c3 0c0b 	rsb	ip, r3, #11
 80048d8:	bf28      	it	cs
 80048da:	2200      	movcs	r2, #0
 80048dc:	3315      	adds	r3, #21
 80048de:	fa24 fe0c 	lsr.w	lr, r4, ip
 80048e2:	fa04 f303 	lsl.w	r3, r4, r3
 80048e6:	fa22 f20c 	lsr.w	r2, r2, ip
 80048ea:	ea4e 0107 	orr.w	r1, lr, r7
 80048ee:	431a      	orrs	r2, r3
 80048f0:	4610      	mov	r0, r2
 80048f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048f4:	42ae      	cmp	r6, r5
 80048f6:	bf36      	itet	cc
 80048f8:	f1a2 0508 	subcc.w	r5, r2, #8
 80048fc:	2200      	movcs	r2, #0
 80048fe:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004902:	3b0b      	subs	r3, #11
 8004904:	d012      	beq.n	800492c <__b2d+0x88>
 8004906:	f1c3 0720 	rsb	r7, r3, #32
 800490a:	fa22 f107 	lsr.w	r1, r2, r7
 800490e:	409c      	lsls	r4, r3
 8004910:	430c      	orrs	r4, r1
 8004912:	42b5      	cmp	r5, r6
 8004914:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8004918:	bf8c      	ite	hi
 800491a:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 800491e:	2400      	movls	r4, #0
 8004920:	409a      	lsls	r2, r3
 8004922:	40fc      	lsrs	r4, r7
 8004924:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8004928:	4322      	orrs	r2, r4
 800492a:	e7e1      	b.n	80048f0 <__b2d+0x4c>
 800492c:	ea44 0107 	orr.w	r1, r4, r7
 8004930:	e7de      	b.n	80048f0 <__b2d+0x4c>
 8004932:	bf00      	nop
 8004934:	3ff00000 	.word	0x3ff00000

08004938 <__d2b>:
 8004938:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 800493c:	2101      	movs	r1, #1
 800493e:	9e08      	ldr	r6, [sp, #32]
 8004940:	4690      	mov	r8, r2
 8004942:	4699      	mov	r9, r3
 8004944:	f7ff fc1c 	bl	8004180 <_Balloc>
 8004948:	4604      	mov	r4, r0
 800494a:	b930      	cbnz	r0, 800495a <__d2b+0x22>
 800494c:	4602      	mov	r2, r0
 800494e:	4b24      	ldr	r3, [pc, #144]	@ (80049e0 <__d2b+0xa8>)
 8004950:	4824      	ldr	r0, [pc, #144]	@ (80049e4 <__d2b+0xac>)
 8004952:	f240 310f 	movw	r1, #783	@ 0x30f
 8004956:	f001 f985 	bl	8005c64 <__assert_func>
 800495a:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800495e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004962:	b10d      	cbz	r5, 8004968 <__d2b+0x30>
 8004964:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004968:	9301      	str	r3, [sp, #4]
 800496a:	f1b8 0300 	subs.w	r3, r8, #0
 800496e:	d024      	beq.n	80049ba <__d2b+0x82>
 8004970:	4668      	mov	r0, sp
 8004972:	9300      	str	r3, [sp, #0]
 8004974:	f7ff fd15 	bl	80043a2 <__lo0bits>
 8004978:	e9dd 1200 	ldrd	r1, r2, [sp]
 800497c:	b1d8      	cbz	r0, 80049b6 <__d2b+0x7e>
 800497e:	f1c0 0320 	rsb	r3, r0, #32
 8004982:	fa02 f303 	lsl.w	r3, r2, r3
 8004986:	430b      	orrs	r3, r1
 8004988:	40c2      	lsrs	r2, r0
 800498a:	6163      	str	r3, [r4, #20]
 800498c:	9201      	str	r2, [sp, #4]
 800498e:	9b01      	ldr	r3, [sp, #4]
 8004990:	61a3      	str	r3, [r4, #24]
 8004992:	2b00      	cmp	r3, #0
 8004994:	bf0c      	ite	eq
 8004996:	2201      	moveq	r2, #1
 8004998:	2202      	movne	r2, #2
 800499a:	6122      	str	r2, [r4, #16]
 800499c:	b1ad      	cbz	r5, 80049ca <__d2b+0x92>
 800499e:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80049a2:	4405      	add	r5, r0
 80049a4:	6035      	str	r5, [r6, #0]
 80049a6:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80049aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80049ac:	6018      	str	r0, [r3, #0]
 80049ae:	4620      	mov	r0, r4
 80049b0:	b002      	add	sp, #8
 80049b2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80049b6:	6161      	str	r1, [r4, #20]
 80049b8:	e7e9      	b.n	800498e <__d2b+0x56>
 80049ba:	a801      	add	r0, sp, #4
 80049bc:	f7ff fcf1 	bl	80043a2 <__lo0bits>
 80049c0:	9b01      	ldr	r3, [sp, #4]
 80049c2:	6163      	str	r3, [r4, #20]
 80049c4:	3020      	adds	r0, #32
 80049c6:	2201      	movs	r2, #1
 80049c8:	e7e7      	b.n	800499a <__d2b+0x62>
 80049ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80049ce:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80049d2:	6030      	str	r0, [r6, #0]
 80049d4:	6918      	ldr	r0, [r3, #16]
 80049d6:	f7ff fcc5 	bl	8004364 <__hi0bits>
 80049da:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80049de:	e7e4      	b.n	80049aa <__d2b+0x72>
 80049e0:	08006a2c 	.word	0x08006a2c
 80049e4:	08006a3d 	.word	0x08006a3d

080049e8 <__ratio>:
 80049e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ec:	b085      	sub	sp, #20
 80049ee:	e9cd 1000 	strd	r1, r0, [sp]
 80049f2:	a902      	add	r1, sp, #8
 80049f4:	f7ff ff56 	bl	80048a4 <__b2d>
 80049f8:	468b      	mov	fp, r1
 80049fa:	4606      	mov	r6, r0
 80049fc:	460f      	mov	r7, r1
 80049fe:	9800      	ldr	r0, [sp, #0]
 8004a00:	a903      	add	r1, sp, #12
 8004a02:	f7ff ff4f 	bl	80048a4 <__b2d>
 8004a06:	9b01      	ldr	r3, [sp, #4]
 8004a08:	4689      	mov	r9, r1
 8004a0a:	460d      	mov	r5, r1
 8004a0c:	6919      	ldr	r1, [r3, #16]
 8004a0e:	9b00      	ldr	r3, [sp, #0]
 8004a10:	691b      	ldr	r3, [r3, #16]
 8004a12:	1ac9      	subs	r1, r1, r3
 8004a14:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004a18:	1a9b      	subs	r3, r3, r2
 8004a1a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	bfcd      	iteet	gt
 8004a22:	463a      	movgt	r2, r7
 8004a24:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004a28:	462a      	movle	r2, r5
 8004a2a:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8004a2e:	bfd8      	it	le
 8004a30:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004a34:	4604      	mov	r4, r0
 8004a36:	4622      	mov	r2, r4
 8004a38:	464b      	mov	r3, r9
 8004a3a:	4630      	mov	r0, r6
 8004a3c:	4659      	mov	r1, fp
 8004a3e:	f7fb ff25 	bl	800088c <__aeabi_ddiv>
 8004a42:	b005      	add	sp, #20
 8004a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004a48 <__copybits>:
 8004a48:	3901      	subs	r1, #1
 8004a4a:	b570      	push	{r4, r5, r6, lr}
 8004a4c:	1149      	asrs	r1, r1, #5
 8004a4e:	6914      	ldr	r4, [r2, #16]
 8004a50:	3101      	adds	r1, #1
 8004a52:	f102 0314 	add.w	r3, r2, #20
 8004a56:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004a5a:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004a5e:	1f05      	subs	r5, r0, #4
 8004a60:	42a3      	cmp	r3, r4
 8004a62:	d30c      	bcc.n	8004a7e <__copybits+0x36>
 8004a64:	1aa3      	subs	r3, r4, r2
 8004a66:	3b11      	subs	r3, #17
 8004a68:	f023 0303 	bic.w	r3, r3, #3
 8004a6c:	3211      	adds	r2, #17
 8004a6e:	42a2      	cmp	r2, r4
 8004a70:	bf88      	it	hi
 8004a72:	2300      	movhi	r3, #0
 8004a74:	4418      	add	r0, r3
 8004a76:	2300      	movs	r3, #0
 8004a78:	4288      	cmp	r0, r1
 8004a7a:	d305      	bcc.n	8004a88 <__copybits+0x40>
 8004a7c:	bd70      	pop	{r4, r5, r6, pc}
 8004a7e:	f853 6b04 	ldr.w	r6, [r3], #4
 8004a82:	f845 6f04 	str.w	r6, [r5, #4]!
 8004a86:	e7eb      	b.n	8004a60 <__copybits+0x18>
 8004a88:	f840 3b04 	str.w	r3, [r0], #4
 8004a8c:	e7f4      	b.n	8004a78 <__copybits+0x30>

08004a8e <__any_on>:
 8004a8e:	f100 0214 	add.w	r2, r0, #20
 8004a92:	6900      	ldr	r0, [r0, #16]
 8004a94:	114b      	asrs	r3, r1, #5
 8004a96:	4298      	cmp	r0, r3
 8004a98:	b510      	push	{r4, lr}
 8004a9a:	db11      	blt.n	8004ac0 <__any_on+0x32>
 8004a9c:	dd0a      	ble.n	8004ab4 <__any_on+0x26>
 8004a9e:	f011 011f 	ands.w	r1, r1, #31
 8004aa2:	d007      	beq.n	8004ab4 <__any_on+0x26>
 8004aa4:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004aa8:	fa24 f001 	lsr.w	r0, r4, r1
 8004aac:	fa00 f101 	lsl.w	r1, r0, r1
 8004ab0:	428c      	cmp	r4, r1
 8004ab2:	d10b      	bne.n	8004acc <__any_on+0x3e>
 8004ab4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004ab8:	4293      	cmp	r3, r2
 8004aba:	d803      	bhi.n	8004ac4 <__any_on+0x36>
 8004abc:	2000      	movs	r0, #0
 8004abe:	bd10      	pop	{r4, pc}
 8004ac0:	4603      	mov	r3, r0
 8004ac2:	e7f7      	b.n	8004ab4 <__any_on+0x26>
 8004ac4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004ac8:	2900      	cmp	r1, #0
 8004aca:	d0f5      	beq.n	8004ab8 <__any_on+0x2a>
 8004acc:	2001      	movs	r0, #1
 8004ace:	e7f6      	b.n	8004abe <__any_on+0x30>

08004ad0 <sulp>:
 8004ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ad4:	460f      	mov	r7, r1
 8004ad6:	4690      	mov	r8, r2
 8004ad8:	f7ff fec4 	bl	8004864 <__ulp>
 8004adc:	4604      	mov	r4, r0
 8004ade:	460d      	mov	r5, r1
 8004ae0:	f1b8 0f00 	cmp.w	r8, #0
 8004ae4:	d011      	beq.n	8004b0a <sulp+0x3a>
 8004ae6:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004aea:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	dd0b      	ble.n	8004b0a <sulp+0x3a>
 8004af2:	051b      	lsls	r3, r3, #20
 8004af4:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8004af8:	2400      	movs	r4, #0
 8004afa:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004afe:	4622      	mov	r2, r4
 8004b00:	462b      	mov	r3, r5
 8004b02:	f7fb fd99 	bl	8000638 <__aeabi_dmul>
 8004b06:	4604      	mov	r4, r0
 8004b08:	460d      	mov	r5, r1
 8004b0a:	4620      	mov	r0, r4
 8004b0c:	4629      	mov	r1, r5
 8004b0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b12:	0000      	movs	r0, r0
 8004b14:	0000      	movs	r0, r0
	...

08004b18 <_strtod_l>:
 8004b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b1c:	b09f      	sub	sp, #124	@ 0x7c
 8004b1e:	460c      	mov	r4, r1
 8004b20:	9217      	str	r2, [sp, #92]	@ 0x5c
 8004b22:	2200      	movs	r2, #0
 8004b24:	921a      	str	r2, [sp, #104]	@ 0x68
 8004b26:	9005      	str	r0, [sp, #20]
 8004b28:	f04f 0a00 	mov.w	sl, #0
 8004b2c:	f04f 0b00 	mov.w	fp, #0
 8004b30:	460a      	mov	r2, r1
 8004b32:	9219      	str	r2, [sp, #100]	@ 0x64
 8004b34:	7811      	ldrb	r1, [r2, #0]
 8004b36:	292b      	cmp	r1, #43	@ 0x2b
 8004b38:	d048      	beq.n	8004bcc <_strtod_l+0xb4>
 8004b3a:	d836      	bhi.n	8004baa <_strtod_l+0x92>
 8004b3c:	290d      	cmp	r1, #13
 8004b3e:	d830      	bhi.n	8004ba2 <_strtod_l+0x8a>
 8004b40:	2908      	cmp	r1, #8
 8004b42:	d830      	bhi.n	8004ba6 <_strtod_l+0x8e>
 8004b44:	2900      	cmp	r1, #0
 8004b46:	d039      	beq.n	8004bbc <_strtod_l+0xa4>
 8004b48:	2200      	movs	r2, #0
 8004b4a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8004b4c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004b4e:	782a      	ldrb	r2, [r5, #0]
 8004b50:	2a30      	cmp	r2, #48	@ 0x30
 8004b52:	f040 80b1 	bne.w	8004cb8 <_strtod_l+0x1a0>
 8004b56:	786a      	ldrb	r2, [r5, #1]
 8004b58:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004b5c:	2a58      	cmp	r2, #88	@ 0x58
 8004b5e:	d16c      	bne.n	8004c3a <_strtod_l+0x122>
 8004b60:	9302      	str	r3, [sp, #8]
 8004b62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004b64:	9301      	str	r3, [sp, #4]
 8004b66:	ab1a      	add	r3, sp, #104	@ 0x68
 8004b68:	9300      	str	r3, [sp, #0]
 8004b6a:	4a8d      	ldr	r2, [pc, #564]	@ (8004da0 <_strtod_l+0x288>)
 8004b6c:	9805      	ldr	r0, [sp, #20]
 8004b6e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004b70:	a919      	add	r1, sp, #100	@ 0x64
 8004b72:	f001 f911 	bl	8005d98 <__gethex>
 8004b76:	f010 060f 	ands.w	r6, r0, #15
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	d005      	beq.n	8004b8a <_strtod_l+0x72>
 8004b7e:	2e06      	cmp	r6, #6
 8004b80:	d126      	bne.n	8004bd0 <_strtod_l+0xb8>
 8004b82:	3501      	adds	r5, #1
 8004b84:	2300      	movs	r3, #0
 8004b86:	9519      	str	r5, [sp, #100]	@ 0x64
 8004b88:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004b8a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	f040 857e 	bne.w	800568e <_strtod_l+0xb76>
 8004b92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004b94:	b1bb      	cbz	r3, 8004bc6 <_strtod_l+0xae>
 8004b96:	4650      	mov	r0, sl
 8004b98:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8004b9c:	b01f      	add	sp, #124	@ 0x7c
 8004b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ba2:	2920      	cmp	r1, #32
 8004ba4:	d1d0      	bne.n	8004b48 <_strtod_l+0x30>
 8004ba6:	3201      	adds	r2, #1
 8004ba8:	e7c3      	b.n	8004b32 <_strtod_l+0x1a>
 8004baa:	292d      	cmp	r1, #45	@ 0x2d
 8004bac:	d1cc      	bne.n	8004b48 <_strtod_l+0x30>
 8004bae:	2101      	movs	r1, #1
 8004bb0:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004bb2:	1c51      	adds	r1, r2, #1
 8004bb4:	9119      	str	r1, [sp, #100]	@ 0x64
 8004bb6:	7852      	ldrb	r2, [r2, #1]
 8004bb8:	2a00      	cmp	r2, #0
 8004bba:	d1c7      	bne.n	8004b4c <_strtod_l+0x34>
 8004bbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004bbe:	9419      	str	r4, [sp, #100]	@ 0x64
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	f040 8562 	bne.w	800568a <_strtod_l+0xb72>
 8004bc6:	4650      	mov	r0, sl
 8004bc8:	4659      	mov	r1, fp
 8004bca:	e7e7      	b.n	8004b9c <_strtod_l+0x84>
 8004bcc:	2100      	movs	r1, #0
 8004bce:	e7ef      	b.n	8004bb0 <_strtod_l+0x98>
 8004bd0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004bd2:	b13a      	cbz	r2, 8004be4 <_strtod_l+0xcc>
 8004bd4:	2135      	movs	r1, #53	@ 0x35
 8004bd6:	a81c      	add	r0, sp, #112	@ 0x70
 8004bd8:	f7ff ff36 	bl	8004a48 <__copybits>
 8004bdc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004bde:	9805      	ldr	r0, [sp, #20]
 8004be0:	f7ff fb0e 	bl	8004200 <_Bfree>
 8004be4:	3e01      	subs	r6, #1
 8004be6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004be8:	2e04      	cmp	r6, #4
 8004bea:	d806      	bhi.n	8004bfa <_strtod_l+0xe2>
 8004bec:	e8df f006 	tbb	[pc, r6]
 8004bf0:	201d0314 	.word	0x201d0314
 8004bf4:	14          	.byte	0x14
 8004bf5:	00          	.byte	0x00
 8004bf6:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8004bfa:	05e1      	lsls	r1, r4, #23
 8004bfc:	bf48      	it	mi
 8004bfe:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004c02:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004c06:	0d1b      	lsrs	r3, r3, #20
 8004c08:	051b      	lsls	r3, r3, #20
 8004c0a:	2b00      	cmp	r3, #0
 8004c0c:	d1bd      	bne.n	8004b8a <_strtod_l+0x72>
 8004c0e:	f7fe fb35 	bl	800327c <__errno>
 8004c12:	2322      	movs	r3, #34	@ 0x22
 8004c14:	6003      	str	r3, [r0, #0]
 8004c16:	e7b8      	b.n	8004b8a <_strtod_l+0x72>
 8004c18:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004c1c:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8004c20:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004c24:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004c28:	e7e7      	b.n	8004bfa <_strtod_l+0xe2>
 8004c2a:	f8df b178 	ldr.w	fp, [pc, #376]	@ 8004da4 <_strtod_l+0x28c>
 8004c2e:	e7e4      	b.n	8004bfa <_strtod_l+0xe2>
 8004c30:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8004c34:	f04f 3aff 	mov.w	sl, #4294967295
 8004c38:	e7df      	b.n	8004bfa <_strtod_l+0xe2>
 8004c3a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004c3c:	1c5a      	adds	r2, r3, #1
 8004c3e:	9219      	str	r2, [sp, #100]	@ 0x64
 8004c40:	785b      	ldrb	r3, [r3, #1]
 8004c42:	2b30      	cmp	r3, #48	@ 0x30
 8004c44:	d0f9      	beq.n	8004c3a <_strtod_l+0x122>
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d09f      	beq.n	8004b8a <_strtod_l+0x72>
 8004c4a:	2301      	movs	r3, #1
 8004c4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8004c4e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004c50:	930c      	str	r3, [sp, #48]	@ 0x30
 8004c52:	2300      	movs	r3, #0
 8004c54:	9308      	str	r3, [sp, #32]
 8004c56:	930a      	str	r3, [sp, #40]	@ 0x28
 8004c58:	461f      	mov	r7, r3
 8004c5a:	220a      	movs	r2, #10
 8004c5c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004c5e:	7805      	ldrb	r5, [r0, #0]
 8004c60:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004c64:	b2d9      	uxtb	r1, r3
 8004c66:	2909      	cmp	r1, #9
 8004c68:	d928      	bls.n	8004cbc <_strtod_l+0x1a4>
 8004c6a:	494f      	ldr	r1, [pc, #316]	@ (8004da8 <_strtod_l+0x290>)
 8004c6c:	2201      	movs	r2, #1
 8004c6e:	f000 ffc3 	bl	8005bf8 <strncmp>
 8004c72:	2800      	cmp	r0, #0
 8004c74:	d032      	beq.n	8004cdc <_strtod_l+0x1c4>
 8004c76:	2000      	movs	r0, #0
 8004c78:	462a      	mov	r2, r5
 8004c7a:	4681      	mov	r9, r0
 8004c7c:	463d      	mov	r5, r7
 8004c7e:	4603      	mov	r3, r0
 8004c80:	2a65      	cmp	r2, #101	@ 0x65
 8004c82:	d001      	beq.n	8004c88 <_strtod_l+0x170>
 8004c84:	2a45      	cmp	r2, #69	@ 0x45
 8004c86:	d114      	bne.n	8004cb2 <_strtod_l+0x19a>
 8004c88:	b91d      	cbnz	r5, 8004c92 <_strtod_l+0x17a>
 8004c8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004c8c:	4302      	orrs	r2, r0
 8004c8e:	d095      	beq.n	8004bbc <_strtod_l+0xa4>
 8004c90:	2500      	movs	r5, #0
 8004c92:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004c94:	1c62      	adds	r2, r4, #1
 8004c96:	9219      	str	r2, [sp, #100]	@ 0x64
 8004c98:	7862      	ldrb	r2, [r4, #1]
 8004c9a:	2a2b      	cmp	r2, #43	@ 0x2b
 8004c9c:	d077      	beq.n	8004d8e <_strtod_l+0x276>
 8004c9e:	2a2d      	cmp	r2, #45	@ 0x2d
 8004ca0:	d07b      	beq.n	8004d9a <_strtod_l+0x282>
 8004ca2:	f04f 0c00 	mov.w	ip, #0
 8004ca6:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8004caa:	2909      	cmp	r1, #9
 8004cac:	f240 8082 	bls.w	8004db4 <_strtod_l+0x29c>
 8004cb0:	9419      	str	r4, [sp, #100]	@ 0x64
 8004cb2:	f04f 0800 	mov.w	r8, #0
 8004cb6:	e0a2      	b.n	8004dfe <_strtod_l+0x2e6>
 8004cb8:	2300      	movs	r3, #0
 8004cba:	e7c7      	b.n	8004c4c <_strtod_l+0x134>
 8004cbc:	2f08      	cmp	r7, #8
 8004cbe:	bfd5      	itete	le
 8004cc0:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 8004cc2:	9908      	ldrgt	r1, [sp, #32]
 8004cc4:	fb02 3301 	mlale	r3, r2, r1, r3
 8004cc8:	fb02 3301 	mlagt	r3, r2, r1, r3
 8004ccc:	f100 0001 	add.w	r0, r0, #1
 8004cd0:	bfd4      	ite	le
 8004cd2:	930a      	strle	r3, [sp, #40]	@ 0x28
 8004cd4:	9308      	strgt	r3, [sp, #32]
 8004cd6:	3701      	adds	r7, #1
 8004cd8:	9019      	str	r0, [sp, #100]	@ 0x64
 8004cda:	e7bf      	b.n	8004c5c <_strtod_l+0x144>
 8004cdc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004cde:	1c5a      	adds	r2, r3, #1
 8004ce0:	9219      	str	r2, [sp, #100]	@ 0x64
 8004ce2:	785a      	ldrb	r2, [r3, #1]
 8004ce4:	b37f      	cbz	r7, 8004d46 <_strtod_l+0x22e>
 8004ce6:	4681      	mov	r9, r0
 8004ce8:	463d      	mov	r5, r7
 8004cea:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004cee:	2b09      	cmp	r3, #9
 8004cf0:	d912      	bls.n	8004d18 <_strtod_l+0x200>
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	e7c4      	b.n	8004c80 <_strtod_l+0x168>
 8004cf6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004cf8:	1c5a      	adds	r2, r3, #1
 8004cfa:	9219      	str	r2, [sp, #100]	@ 0x64
 8004cfc:	785a      	ldrb	r2, [r3, #1]
 8004cfe:	3001      	adds	r0, #1
 8004d00:	2a30      	cmp	r2, #48	@ 0x30
 8004d02:	d0f8      	beq.n	8004cf6 <_strtod_l+0x1de>
 8004d04:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004d08:	2b08      	cmp	r3, #8
 8004d0a:	f200 84c5 	bhi.w	8005698 <_strtod_l+0xb80>
 8004d0e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004d10:	930c      	str	r3, [sp, #48]	@ 0x30
 8004d12:	4681      	mov	r9, r0
 8004d14:	2000      	movs	r0, #0
 8004d16:	4605      	mov	r5, r0
 8004d18:	3a30      	subs	r2, #48	@ 0x30
 8004d1a:	f100 0301 	add.w	r3, r0, #1
 8004d1e:	d02a      	beq.n	8004d76 <_strtod_l+0x25e>
 8004d20:	4499      	add	r9, r3
 8004d22:	eb00 0c05 	add.w	ip, r0, r5
 8004d26:	462b      	mov	r3, r5
 8004d28:	210a      	movs	r1, #10
 8004d2a:	4563      	cmp	r3, ip
 8004d2c:	d10d      	bne.n	8004d4a <_strtod_l+0x232>
 8004d2e:	1c69      	adds	r1, r5, #1
 8004d30:	4401      	add	r1, r0
 8004d32:	4428      	add	r0, r5
 8004d34:	2808      	cmp	r0, #8
 8004d36:	dc16      	bgt.n	8004d66 <_strtod_l+0x24e>
 8004d38:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004d3a:	230a      	movs	r3, #10
 8004d3c:	fb03 2300 	mla	r3, r3, r0, r2
 8004d40:	930a      	str	r3, [sp, #40]	@ 0x28
 8004d42:	2300      	movs	r3, #0
 8004d44:	e018      	b.n	8004d78 <_strtod_l+0x260>
 8004d46:	4638      	mov	r0, r7
 8004d48:	e7da      	b.n	8004d00 <_strtod_l+0x1e8>
 8004d4a:	2b08      	cmp	r3, #8
 8004d4c:	f103 0301 	add.w	r3, r3, #1
 8004d50:	dc03      	bgt.n	8004d5a <_strtod_l+0x242>
 8004d52:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8004d54:	434e      	muls	r6, r1
 8004d56:	960a      	str	r6, [sp, #40]	@ 0x28
 8004d58:	e7e7      	b.n	8004d2a <_strtod_l+0x212>
 8004d5a:	2b10      	cmp	r3, #16
 8004d5c:	bfde      	ittt	le
 8004d5e:	9e08      	ldrle	r6, [sp, #32]
 8004d60:	434e      	mulle	r6, r1
 8004d62:	9608      	strle	r6, [sp, #32]
 8004d64:	e7e1      	b.n	8004d2a <_strtod_l+0x212>
 8004d66:	280f      	cmp	r0, #15
 8004d68:	dceb      	bgt.n	8004d42 <_strtod_l+0x22a>
 8004d6a:	9808      	ldr	r0, [sp, #32]
 8004d6c:	230a      	movs	r3, #10
 8004d6e:	fb03 2300 	mla	r3, r3, r0, r2
 8004d72:	9308      	str	r3, [sp, #32]
 8004d74:	e7e5      	b.n	8004d42 <_strtod_l+0x22a>
 8004d76:	4629      	mov	r1, r5
 8004d78:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004d7a:	1c50      	adds	r0, r2, #1
 8004d7c:	9019      	str	r0, [sp, #100]	@ 0x64
 8004d7e:	7852      	ldrb	r2, [r2, #1]
 8004d80:	4618      	mov	r0, r3
 8004d82:	460d      	mov	r5, r1
 8004d84:	e7b1      	b.n	8004cea <_strtod_l+0x1d2>
 8004d86:	f04f 0900 	mov.w	r9, #0
 8004d8a:	2301      	movs	r3, #1
 8004d8c:	e77d      	b.n	8004c8a <_strtod_l+0x172>
 8004d8e:	f04f 0c00 	mov.w	ip, #0
 8004d92:	1ca2      	adds	r2, r4, #2
 8004d94:	9219      	str	r2, [sp, #100]	@ 0x64
 8004d96:	78a2      	ldrb	r2, [r4, #2]
 8004d98:	e785      	b.n	8004ca6 <_strtod_l+0x18e>
 8004d9a:	f04f 0c01 	mov.w	ip, #1
 8004d9e:	e7f8      	b.n	8004d92 <_strtod_l+0x27a>
 8004da0:	08006bb0 	.word	0x08006bb0
 8004da4:	7ff00000 	.word	0x7ff00000
 8004da8:	08006b98 	.word	0x08006b98
 8004dac:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004dae:	1c51      	adds	r1, r2, #1
 8004db0:	9119      	str	r1, [sp, #100]	@ 0x64
 8004db2:	7852      	ldrb	r2, [r2, #1]
 8004db4:	2a30      	cmp	r2, #48	@ 0x30
 8004db6:	d0f9      	beq.n	8004dac <_strtod_l+0x294>
 8004db8:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8004dbc:	2908      	cmp	r1, #8
 8004dbe:	f63f af78 	bhi.w	8004cb2 <_strtod_l+0x19a>
 8004dc2:	3a30      	subs	r2, #48	@ 0x30
 8004dc4:	920e      	str	r2, [sp, #56]	@ 0x38
 8004dc6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004dc8:	920f      	str	r2, [sp, #60]	@ 0x3c
 8004dca:	f04f 080a 	mov.w	r8, #10
 8004dce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004dd0:	1c56      	adds	r6, r2, #1
 8004dd2:	9619      	str	r6, [sp, #100]	@ 0x64
 8004dd4:	7852      	ldrb	r2, [r2, #1]
 8004dd6:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8004dda:	f1be 0f09 	cmp.w	lr, #9
 8004dde:	d939      	bls.n	8004e54 <_strtod_l+0x33c>
 8004de0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004de2:	1a76      	subs	r6, r6, r1
 8004de4:	2e08      	cmp	r6, #8
 8004de6:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004dea:	dc03      	bgt.n	8004df4 <_strtod_l+0x2dc>
 8004dec:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004dee:	4588      	cmp	r8, r1
 8004df0:	bfa8      	it	ge
 8004df2:	4688      	movge	r8, r1
 8004df4:	f1bc 0f00 	cmp.w	ip, #0
 8004df8:	d001      	beq.n	8004dfe <_strtod_l+0x2e6>
 8004dfa:	f1c8 0800 	rsb	r8, r8, #0
 8004dfe:	2d00      	cmp	r5, #0
 8004e00:	d14e      	bne.n	8004ea0 <_strtod_l+0x388>
 8004e02:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004e04:	4308      	orrs	r0, r1
 8004e06:	f47f aec0 	bne.w	8004b8a <_strtod_l+0x72>
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	f47f aed6 	bne.w	8004bbc <_strtod_l+0xa4>
 8004e10:	2a69      	cmp	r2, #105	@ 0x69
 8004e12:	d028      	beq.n	8004e66 <_strtod_l+0x34e>
 8004e14:	dc25      	bgt.n	8004e62 <_strtod_l+0x34a>
 8004e16:	2a49      	cmp	r2, #73	@ 0x49
 8004e18:	d025      	beq.n	8004e66 <_strtod_l+0x34e>
 8004e1a:	2a4e      	cmp	r2, #78	@ 0x4e
 8004e1c:	f47f aece 	bne.w	8004bbc <_strtod_l+0xa4>
 8004e20:	499a      	ldr	r1, [pc, #616]	@ (800508c <_strtod_l+0x574>)
 8004e22:	a819      	add	r0, sp, #100	@ 0x64
 8004e24:	f001 f9da 	bl	80061dc <__match>
 8004e28:	2800      	cmp	r0, #0
 8004e2a:	f43f aec7 	beq.w	8004bbc <_strtod_l+0xa4>
 8004e2e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004e30:	781b      	ldrb	r3, [r3, #0]
 8004e32:	2b28      	cmp	r3, #40	@ 0x28
 8004e34:	d12e      	bne.n	8004e94 <_strtod_l+0x37c>
 8004e36:	4996      	ldr	r1, [pc, #600]	@ (8005090 <_strtod_l+0x578>)
 8004e38:	aa1c      	add	r2, sp, #112	@ 0x70
 8004e3a:	a819      	add	r0, sp, #100	@ 0x64
 8004e3c:	f001 f9e2 	bl	8006204 <__hexnan>
 8004e40:	2805      	cmp	r0, #5
 8004e42:	d127      	bne.n	8004e94 <_strtod_l+0x37c>
 8004e44:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004e46:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004e4a:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004e4e:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8004e52:	e69a      	b.n	8004b8a <_strtod_l+0x72>
 8004e54:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004e56:	fb08 2101 	mla	r1, r8, r1, r2
 8004e5a:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004e5e:	920e      	str	r2, [sp, #56]	@ 0x38
 8004e60:	e7b5      	b.n	8004dce <_strtod_l+0x2b6>
 8004e62:	2a6e      	cmp	r2, #110	@ 0x6e
 8004e64:	e7da      	b.n	8004e1c <_strtod_l+0x304>
 8004e66:	498b      	ldr	r1, [pc, #556]	@ (8005094 <_strtod_l+0x57c>)
 8004e68:	a819      	add	r0, sp, #100	@ 0x64
 8004e6a:	f001 f9b7 	bl	80061dc <__match>
 8004e6e:	2800      	cmp	r0, #0
 8004e70:	f43f aea4 	beq.w	8004bbc <_strtod_l+0xa4>
 8004e74:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004e76:	4988      	ldr	r1, [pc, #544]	@ (8005098 <_strtod_l+0x580>)
 8004e78:	3b01      	subs	r3, #1
 8004e7a:	a819      	add	r0, sp, #100	@ 0x64
 8004e7c:	9319      	str	r3, [sp, #100]	@ 0x64
 8004e7e:	f001 f9ad 	bl	80061dc <__match>
 8004e82:	b910      	cbnz	r0, 8004e8a <_strtod_l+0x372>
 8004e84:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004e86:	3301      	adds	r3, #1
 8004e88:	9319      	str	r3, [sp, #100]	@ 0x64
 8004e8a:	f8df b210 	ldr.w	fp, [pc, #528]	@ 800509c <_strtod_l+0x584>
 8004e8e:	f04f 0a00 	mov.w	sl, #0
 8004e92:	e67a      	b.n	8004b8a <_strtod_l+0x72>
 8004e94:	4882      	ldr	r0, [pc, #520]	@ (80050a0 <_strtod_l+0x588>)
 8004e96:	f000 fedf 	bl	8005c58 <nan>
 8004e9a:	4682      	mov	sl, r0
 8004e9c:	468b      	mov	fp, r1
 8004e9e:	e674      	b.n	8004b8a <_strtod_l+0x72>
 8004ea0:	eba8 0309 	sub.w	r3, r8, r9
 8004ea4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004ea6:	9309      	str	r3, [sp, #36]	@ 0x24
 8004ea8:	2f00      	cmp	r7, #0
 8004eaa:	bf08      	it	eq
 8004eac:	462f      	moveq	r7, r5
 8004eae:	2d10      	cmp	r5, #16
 8004eb0:	462c      	mov	r4, r5
 8004eb2:	bfa8      	it	ge
 8004eb4:	2410      	movge	r4, #16
 8004eb6:	f7fb fb45 	bl	8000544 <__aeabi_ui2d>
 8004eba:	2d09      	cmp	r5, #9
 8004ebc:	4682      	mov	sl, r0
 8004ebe:	468b      	mov	fp, r1
 8004ec0:	dc11      	bgt.n	8004ee6 <_strtod_l+0x3ce>
 8004ec2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ec4:	2b00      	cmp	r3, #0
 8004ec6:	f43f ae60 	beq.w	8004b8a <_strtod_l+0x72>
 8004eca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ecc:	dd76      	ble.n	8004fbc <_strtod_l+0x4a4>
 8004ece:	2b16      	cmp	r3, #22
 8004ed0:	dc5d      	bgt.n	8004f8e <_strtod_l+0x476>
 8004ed2:	4974      	ldr	r1, [pc, #464]	@ (80050a4 <_strtod_l+0x58c>)
 8004ed4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004ed8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004edc:	4652      	mov	r2, sl
 8004ede:	465b      	mov	r3, fp
 8004ee0:	f7fb fbaa 	bl	8000638 <__aeabi_dmul>
 8004ee4:	e7d9      	b.n	8004e9a <_strtod_l+0x382>
 8004ee6:	4b6f      	ldr	r3, [pc, #444]	@ (80050a4 <_strtod_l+0x58c>)
 8004ee8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004eec:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004ef0:	f7fb fba2 	bl	8000638 <__aeabi_dmul>
 8004ef4:	4682      	mov	sl, r0
 8004ef6:	9808      	ldr	r0, [sp, #32]
 8004ef8:	468b      	mov	fp, r1
 8004efa:	f7fb fb23 	bl	8000544 <__aeabi_ui2d>
 8004efe:	4602      	mov	r2, r0
 8004f00:	460b      	mov	r3, r1
 8004f02:	4650      	mov	r0, sl
 8004f04:	4659      	mov	r1, fp
 8004f06:	f7fb f9e1 	bl	80002cc <__adddf3>
 8004f0a:	2d0f      	cmp	r5, #15
 8004f0c:	4682      	mov	sl, r0
 8004f0e:	468b      	mov	fp, r1
 8004f10:	ddd7      	ble.n	8004ec2 <_strtod_l+0x3aa>
 8004f12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f14:	1b2c      	subs	r4, r5, r4
 8004f16:	441c      	add	r4, r3
 8004f18:	2c00      	cmp	r4, #0
 8004f1a:	f340 8096 	ble.w	800504a <_strtod_l+0x532>
 8004f1e:	f014 030f 	ands.w	r3, r4, #15
 8004f22:	d00a      	beq.n	8004f3a <_strtod_l+0x422>
 8004f24:	495f      	ldr	r1, [pc, #380]	@ (80050a4 <_strtod_l+0x58c>)
 8004f26:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004f2a:	4652      	mov	r2, sl
 8004f2c:	465b      	mov	r3, fp
 8004f2e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004f32:	f7fb fb81 	bl	8000638 <__aeabi_dmul>
 8004f36:	4682      	mov	sl, r0
 8004f38:	468b      	mov	fp, r1
 8004f3a:	f034 040f 	bics.w	r4, r4, #15
 8004f3e:	d073      	beq.n	8005028 <_strtod_l+0x510>
 8004f40:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004f44:	dd48      	ble.n	8004fd8 <_strtod_l+0x4c0>
 8004f46:	2400      	movs	r4, #0
 8004f48:	46a0      	mov	r8, r4
 8004f4a:	940a      	str	r4, [sp, #40]	@ 0x28
 8004f4c:	46a1      	mov	r9, r4
 8004f4e:	9a05      	ldr	r2, [sp, #20]
 8004f50:	f8df b148 	ldr.w	fp, [pc, #328]	@ 800509c <_strtod_l+0x584>
 8004f54:	2322      	movs	r3, #34	@ 0x22
 8004f56:	6013      	str	r3, [r2, #0]
 8004f58:	f04f 0a00 	mov.w	sl, #0
 8004f5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	f43f ae13 	beq.w	8004b8a <_strtod_l+0x72>
 8004f64:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f66:	9805      	ldr	r0, [sp, #20]
 8004f68:	f7ff f94a 	bl	8004200 <_Bfree>
 8004f6c:	9805      	ldr	r0, [sp, #20]
 8004f6e:	4649      	mov	r1, r9
 8004f70:	f7ff f946 	bl	8004200 <_Bfree>
 8004f74:	9805      	ldr	r0, [sp, #20]
 8004f76:	4641      	mov	r1, r8
 8004f78:	f7ff f942 	bl	8004200 <_Bfree>
 8004f7c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004f7e:	9805      	ldr	r0, [sp, #20]
 8004f80:	f7ff f93e 	bl	8004200 <_Bfree>
 8004f84:	9805      	ldr	r0, [sp, #20]
 8004f86:	4621      	mov	r1, r4
 8004f88:	f7ff f93a 	bl	8004200 <_Bfree>
 8004f8c:	e5fd      	b.n	8004b8a <_strtod_l+0x72>
 8004f8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004f90:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004f94:	4293      	cmp	r3, r2
 8004f96:	dbbc      	blt.n	8004f12 <_strtod_l+0x3fa>
 8004f98:	4c42      	ldr	r4, [pc, #264]	@ (80050a4 <_strtod_l+0x58c>)
 8004f9a:	f1c5 050f 	rsb	r5, r5, #15
 8004f9e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004fa2:	4652      	mov	r2, sl
 8004fa4:	465b      	mov	r3, fp
 8004fa6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004faa:	f7fb fb45 	bl	8000638 <__aeabi_dmul>
 8004fae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004fb0:	1b5d      	subs	r5, r3, r5
 8004fb2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004fb6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004fba:	e791      	b.n	8004ee0 <_strtod_l+0x3c8>
 8004fbc:	3316      	adds	r3, #22
 8004fbe:	dba8      	blt.n	8004f12 <_strtod_l+0x3fa>
 8004fc0:	4b38      	ldr	r3, [pc, #224]	@ (80050a4 <_strtod_l+0x58c>)
 8004fc2:	eba9 0808 	sub.w	r8, r9, r8
 8004fc6:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004fca:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004fce:	4650      	mov	r0, sl
 8004fd0:	4659      	mov	r1, fp
 8004fd2:	f7fb fc5b 	bl	800088c <__aeabi_ddiv>
 8004fd6:	e760      	b.n	8004e9a <_strtod_l+0x382>
 8004fd8:	4b33      	ldr	r3, [pc, #204]	@ (80050a8 <_strtod_l+0x590>)
 8004fda:	9308      	str	r3, [sp, #32]
 8004fdc:	2300      	movs	r3, #0
 8004fde:	1124      	asrs	r4, r4, #4
 8004fe0:	4650      	mov	r0, sl
 8004fe2:	4659      	mov	r1, fp
 8004fe4:	461e      	mov	r6, r3
 8004fe6:	2c01      	cmp	r4, #1
 8004fe8:	dc21      	bgt.n	800502e <_strtod_l+0x516>
 8004fea:	b10b      	cbz	r3, 8004ff0 <_strtod_l+0x4d8>
 8004fec:	4682      	mov	sl, r0
 8004fee:	468b      	mov	fp, r1
 8004ff0:	492d      	ldr	r1, [pc, #180]	@ (80050a8 <_strtod_l+0x590>)
 8004ff2:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004ff6:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004ffa:	4652      	mov	r2, sl
 8004ffc:	465b      	mov	r3, fp
 8004ffe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005002:	f7fb fb19 	bl	8000638 <__aeabi_dmul>
 8005006:	4b25      	ldr	r3, [pc, #148]	@ (800509c <_strtod_l+0x584>)
 8005008:	460a      	mov	r2, r1
 800500a:	400b      	ands	r3, r1
 800500c:	4927      	ldr	r1, [pc, #156]	@ (80050ac <_strtod_l+0x594>)
 800500e:	428b      	cmp	r3, r1
 8005010:	4682      	mov	sl, r0
 8005012:	d898      	bhi.n	8004f46 <_strtod_l+0x42e>
 8005014:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8005018:	428b      	cmp	r3, r1
 800501a:	bf86      	itte	hi
 800501c:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 80050b0 <_strtod_l+0x598>
 8005020:	f04f 3aff 	movhi.w	sl, #4294967295
 8005024:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8005028:	2300      	movs	r3, #0
 800502a:	9308      	str	r3, [sp, #32]
 800502c:	e07a      	b.n	8005124 <_strtod_l+0x60c>
 800502e:	07e2      	lsls	r2, r4, #31
 8005030:	d505      	bpl.n	800503e <_strtod_l+0x526>
 8005032:	9b08      	ldr	r3, [sp, #32]
 8005034:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005038:	f7fb fafe 	bl	8000638 <__aeabi_dmul>
 800503c:	2301      	movs	r3, #1
 800503e:	9a08      	ldr	r2, [sp, #32]
 8005040:	3208      	adds	r2, #8
 8005042:	3601      	adds	r6, #1
 8005044:	1064      	asrs	r4, r4, #1
 8005046:	9208      	str	r2, [sp, #32]
 8005048:	e7cd      	b.n	8004fe6 <_strtod_l+0x4ce>
 800504a:	d0ed      	beq.n	8005028 <_strtod_l+0x510>
 800504c:	4264      	negs	r4, r4
 800504e:	f014 020f 	ands.w	r2, r4, #15
 8005052:	d00a      	beq.n	800506a <_strtod_l+0x552>
 8005054:	4b13      	ldr	r3, [pc, #76]	@ (80050a4 <_strtod_l+0x58c>)
 8005056:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800505a:	4650      	mov	r0, sl
 800505c:	4659      	mov	r1, fp
 800505e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005062:	f7fb fc13 	bl	800088c <__aeabi_ddiv>
 8005066:	4682      	mov	sl, r0
 8005068:	468b      	mov	fp, r1
 800506a:	1124      	asrs	r4, r4, #4
 800506c:	d0dc      	beq.n	8005028 <_strtod_l+0x510>
 800506e:	2c1f      	cmp	r4, #31
 8005070:	dd20      	ble.n	80050b4 <_strtod_l+0x59c>
 8005072:	2400      	movs	r4, #0
 8005074:	46a0      	mov	r8, r4
 8005076:	940a      	str	r4, [sp, #40]	@ 0x28
 8005078:	46a1      	mov	r9, r4
 800507a:	9a05      	ldr	r2, [sp, #20]
 800507c:	2322      	movs	r3, #34	@ 0x22
 800507e:	f04f 0a00 	mov.w	sl, #0
 8005082:	f04f 0b00 	mov.w	fp, #0
 8005086:	6013      	str	r3, [r2, #0]
 8005088:	e768      	b.n	8004f5c <_strtod_l+0x444>
 800508a:	bf00      	nop
 800508c:	08006984 	.word	0x08006984
 8005090:	08006b9c 	.word	0x08006b9c
 8005094:	0800697c 	.word	0x0800697c
 8005098:	080069b3 	.word	0x080069b3
 800509c:	7ff00000 	.word	0x7ff00000
 80050a0:	08006d45 	.word	0x08006d45
 80050a4:	08006ad0 	.word	0x08006ad0
 80050a8:	08006aa8 	.word	0x08006aa8
 80050ac:	7ca00000 	.word	0x7ca00000
 80050b0:	7fefffff 	.word	0x7fefffff
 80050b4:	f014 0310 	ands.w	r3, r4, #16
 80050b8:	bf18      	it	ne
 80050ba:	236a      	movne	r3, #106	@ 0x6a
 80050bc:	4e77      	ldr	r6, [pc, #476]	@ (800529c <_strtod_l+0x784>)
 80050be:	9308      	str	r3, [sp, #32]
 80050c0:	4650      	mov	r0, sl
 80050c2:	4659      	mov	r1, fp
 80050c4:	2300      	movs	r3, #0
 80050c6:	07e2      	lsls	r2, r4, #31
 80050c8:	d504      	bpl.n	80050d4 <_strtod_l+0x5bc>
 80050ca:	e9d6 2300 	ldrd	r2, r3, [r6]
 80050ce:	f7fb fab3 	bl	8000638 <__aeabi_dmul>
 80050d2:	2301      	movs	r3, #1
 80050d4:	1064      	asrs	r4, r4, #1
 80050d6:	f106 0608 	add.w	r6, r6, #8
 80050da:	d1f4      	bne.n	80050c6 <_strtod_l+0x5ae>
 80050dc:	b10b      	cbz	r3, 80050e2 <_strtod_l+0x5ca>
 80050de:	4682      	mov	sl, r0
 80050e0:	468b      	mov	fp, r1
 80050e2:	9b08      	ldr	r3, [sp, #32]
 80050e4:	b1b3      	cbz	r3, 8005114 <_strtod_l+0x5fc>
 80050e6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80050ea:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	4659      	mov	r1, fp
 80050f2:	dd0f      	ble.n	8005114 <_strtod_l+0x5fc>
 80050f4:	2b1f      	cmp	r3, #31
 80050f6:	dd57      	ble.n	80051a8 <_strtod_l+0x690>
 80050f8:	2b34      	cmp	r3, #52	@ 0x34
 80050fa:	bfde      	ittt	le
 80050fc:	f04f 33ff 	movle.w	r3, #4294967295
 8005100:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8005104:	4093      	lslle	r3, r2
 8005106:	f04f 0a00 	mov.w	sl, #0
 800510a:	bfcc      	ite	gt
 800510c:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8005110:	ea03 0b01 	andle.w	fp, r3, r1
 8005114:	2200      	movs	r2, #0
 8005116:	2300      	movs	r3, #0
 8005118:	4650      	mov	r0, sl
 800511a:	4659      	mov	r1, fp
 800511c:	f7fb fcf4 	bl	8000b08 <__aeabi_dcmpeq>
 8005120:	2800      	cmp	r0, #0
 8005122:	d1a6      	bne.n	8005072 <_strtod_l+0x55a>
 8005124:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005126:	9300      	str	r3, [sp, #0]
 8005128:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800512a:	9805      	ldr	r0, [sp, #20]
 800512c:	462b      	mov	r3, r5
 800512e:	463a      	mov	r2, r7
 8005130:	f7ff f8ce 	bl	80042d0 <__s2b>
 8005134:	900a      	str	r0, [sp, #40]	@ 0x28
 8005136:	2800      	cmp	r0, #0
 8005138:	f43f af05 	beq.w	8004f46 <_strtod_l+0x42e>
 800513c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800513e:	2a00      	cmp	r2, #0
 8005140:	eba9 0308 	sub.w	r3, r9, r8
 8005144:	bfa8      	it	ge
 8005146:	2300      	movge	r3, #0
 8005148:	9312      	str	r3, [sp, #72]	@ 0x48
 800514a:	2400      	movs	r4, #0
 800514c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8005150:	9316      	str	r3, [sp, #88]	@ 0x58
 8005152:	46a0      	mov	r8, r4
 8005154:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005156:	9805      	ldr	r0, [sp, #20]
 8005158:	6859      	ldr	r1, [r3, #4]
 800515a:	f7ff f811 	bl	8004180 <_Balloc>
 800515e:	4681      	mov	r9, r0
 8005160:	2800      	cmp	r0, #0
 8005162:	f43f aef4 	beq.w	8004f4e <_strtod_l+0x436>
 8005166:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005168:	691a      	ldr	r2, [r3, #16]
 800516a:	3202      	adds	r2, #2
 800516c:	f103 010c 	add.w	r1, r3, #12
 8005170:	0092      	lsls	r2, r2, #2
 8005172:	300c      	adds	r0, #12
 8005174:	f000 fd62 	bl	8005c3c <memcpy>
 8005178:	ab1c      	add	r3, sp, #112	@ 0x70
 800517a:	9301      	str	r3, [sp, #4]
 800517c:	ab1b      	add	r3, sp, #108	@ 0x6c
 800517e:	9300      	str	r3, [sp, #0]
 8005180:	9805      	ldr	r0, [sp, #20]
 8005182:	4652      	mov	r2, sl
 8005184:	465b      	mov	r3, fp
 8005186:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800518a:	f7ff fbd5 	bl	8004938 <__d2b>
 800518e:	901a      	str	r0, [sp, #104]	@ 0x68
 8005190:	2800      	cmp	r0, #0
 8005192:	f43f aedc 	beq.w	8004f4e <_strtod_l+0x436>
 8005196:	9805      	ldr	r0, [sp, #20]
 8005198:	2101      	movs	r1, #1
 800519a:	f7ff f92f 	bl	80043fc <__i2b>
 800519e:	4680      	mov	r8, r0
 80051a0:	b948      	cbnz	r0, 80051b6 <_strtod_l+0x69e>
 80051a2:	f04f 0800 	mov.w	r8, #0
 80051a6:	e6d2      	b.n	8004f4e <_strtod_l+0x436>
 80051a8:	f04f 32ff 	mov.w	r2, #4294967295
 80051ac:	fa02 f303 	lsl.w	r3, r2, r3
 80051b0:	ea03 0a0a 	and.w	sl, r3, sl
 80051b4:	e7ae      	b.n	8005114 <_strtod_l+0x5fc>
 80051b6:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80051b8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80051ba:	2d00      	cmp	r5, #0
 80051bc:	bfab      	itete	ge
 80051be:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80051c0:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80051c2:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80051c4:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80051c6:	bfac      	ite	ge
 80051c8:	18ef      	addge	r7, r5, r3
 80051ca:	1b5e      	sublt	r6, r3, r5
 80051cc:	9b08      	ldr	r3, [sp, #32]
 80051ce:	1aed      	subs	r5, r5, r3
 80051d0:	4415      	add	r5, r2
 80051d2:	4b33      	ldr	r3, [pc, #204]	@ (80052a0 <_strtod_l+0x788>)
 80051d4:	3d01      	subs	r5, #1
 80051d6:	429d      	cmp	r5, r3
 80051d8:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80051dc:	da50      	bge.n	8005280 <_strtod_l+0x768>
 80051de:	1b5b      	subs	r3, r3, r5
 80051e0:	2b1f      	cmp	r3, #31
 80051e2:	eba2 0203 	sub.w	r2, r2, r3
 80051e6:	f04f 0101 	mov.w	r1, #1
 80051ea:	dc3d      	bgt.n	8005268 <_strtod_l+0x750>
 80051ec:	fa01 f303 	lsl.w	r3, r1, r3
 80051f0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80051f2:	2300      	movs	r3, #0
 80051f4:	9310      	str	r3, [sp, #64]	@ 0x40
 80051f6:	18bd      	adds	r5, r7, r2
 80051f8:	9b08      	ldr	r3, [sp, #32]
 80051fa:	42af      	cmp	r7, r5
 80051fc:	4416      	add	r6, r2
 80051fe:	441e      	add	r6, r3
 8005200:	463b      	mov	r3, r7
 8005202:	bfa8      	it	ge
 8005204:	462b      	movge	r3, r5
 8005206:	42b3      	cmp	r3, r6
 8005208:	bfa8      	it	ge
 800520a:	4633      	movge	r3, r6
 800520c:	2b00      	cmp	r3, #0
 800520e:	bfc2      	ittt	gt
 8005210:	1aed      	subgt	r5, r5, r3
 8005212:	1af6      	subgt	r6, r6, r3
 8005214:	1aff      	subgt	r7, r7, r3
 8005216:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005218:	2b00      	cmp	r3, #0
 800521a:	dd16      	ble.n	800524a <_strtod_l+0x732>
 800521c:	4641      	mov	r1, r8
 800521e:	9805      	ldr	r0, [sp, #20]
 8005220:	461a      	mov	r2, r3
 8005222:	f7ff f9ab 	bl	800457c <__pow5mult>
 8005226:	4680      	mov	r8, r0
 8005228:	2800      	cmp	r0, #0
 800522a:	d0ba      	beq.n	80051a2 <_strtod_l+0x68a>
 800522c:	4601      	mov	r1, r0
 800522e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8005230:	9805      	ldr	r0, [sp, #20]
 8005232:	f7ff f8f9 	bl	8004428 <__multiply>
 8005236:	900e      	str	r0, [sp, #56]	@ 0x38
 8005238:	2800      	cmp	r0, #0
 800523a:	f43f ae88 	beq.w	8004f4e <_strtod_l+0x436>
 800523e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005240:	9805      	ldr	r0, [sp, #20]
 8005242:	f7fe ffdd 	bl	8004200 <_Bfree>
 8005246:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005248:	931a      	str	r3, [sp, #104]	@ 0x68
 800524a:	2d00      	cmp	r5, #0
 800524c:	dc1d      	bgt.n	800528a <_strtod_l+0x772>
 800524e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005250:	2b00      	cmp	r3, #0
 8005252:	dd27      	ble.n	80052a4 <_strtod_l+0x78c>
 8005254:	4649      	mov	r1, r9
 8005256:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8005258:	9805      	ldr	r0, [sp, #20]
 800525a:	f7ff f98f 	bl	800457c <__pow5mult>
 800525e:	4681      	mov	r9, r0
 8005260:	bb00      	cbnz	r0, 80052a4 <_strtod_l+0x78c>
 8005262:	f04f 0900 	mov.w	r9, #0
 8005266:	e672      	b.n	8004f4e <_strtod_l+0x436>
 8005268:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800526c:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8005270:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8005274:	35e2      	adds	r5, #226	@ 0xe2
 8005276:	fa01 f305 	lsl.w	r3, r1, r5
 800527a:	9310      	str	r3, [sp, #64]	@ 0x40
 800527c:	9113      	str	r1, [sp, #76]	@ 0x4c
 800527e:	e7ba      	b.n	80051f6 <_strtod_l+0x6de>
 8005280:	2300      	movs	r3, #0
 8005282:	9310      	str	r3, [sp, #64]	@ 0x40
 8005284:	2301      	movs	r3, #1
 8005286:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005288:	e7b5      	b.n	80051f6 <_strtod_l+0x6de>
 800528a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800528c:	9805      	ldr	r0, [sp, #20]
 800528e:	462a      	mov	r2, r5
 8005290:	f7ff f9ce 	bl	8004630 <__lshift>
 8005294:	901a      	str	r0, [sp, #104]	@ 0x68
 8005296:	2800      	cmp	r0, #0
 8005298:	d1d9      	bne.n	800524e <_strtod_l+0x736>
 800529a:	e658      	b.n	8004f4e <_strtod_l+0x436>
 800529c:	08006bc8 	.word	0x08006bc8
 80052a0:	fffffc02 	.word	0xfffffc02
 80052a4:	2e00      	cmp	r6, #0
 80052a6:	dd07      	ble.n	80052b8 <_strtod_l+0x7a0>
 80052a8:	4649      	mov	r1, r9
 80052aa:	9805      	ldr	r0, [sp, #20]
 80052ac:	4632      	mov	r2, r6
 80052ae:	f7ff f9bf 	bl	8004630 <__lshift>
 80052b2:	4681      	mov	r9, r0
 80052b4:	2800      	cmp	r0, #0
 80052b6:	d0d4      	beq.n	8005262 <_strtod_l+0x74a>
 80052b8:	2f00      	cmp	r7, #0
 80052ba:	dd08      	ble.n	80052ce <_strtod_l+0x7b6>
 80052bc:	4641      	mov	r1, r8
 80052be:	9805      	ldr	r0, [sp, #20]
 80052c0:	463a      	mov	r2, r7
 80052c2:	f7ff f9b5 	bl	8004630 <__lshift>
 80052c6:	4680      	mov	r8, r0
 80052c8:	2800      	cmp	r0, #0
 80052ca:	f43f ae40 	beq.w	8004f4e <_strtod_l+0x436>
 80052ce:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80052d0:	9805      	ldr	r0, [sp, #20]
 80052d2:	464a      	mov	r2, r9
 80052d4:	f7ff fa34 	bl	8004740 <__mdiff>
 80052d8:	4604      	mov	r4, r0
 80052da:	2800      	cmp	r0, #0
 80052dc:	f43f ae37 	beq.w	8004f4e <_strtod_l+0x436>
 80052e0:	68c3      	ldr	r3, [r0, #12]
 80052e2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80052e4:	2300      	movs	r3, #0
 80052e6:	60c3      	str	r3, [r0, #12]
 80052e8:	4641      	mov	r1, r8
 80052ea:	f7ff fa0d 	bl	8004708 <__mcmp>
 80052ee:	2800      	cmp	r0, #0
 80052f0:	da3d      	bge.n	800536e <_strtod_l+0x856>
 80052f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80052f4:	ea53 030a 	orrs.w	r3, r3, sl
 80052f8:	d163      	bne.n	80053c2 <_strtod_l+0x8aa>
 80052fa:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80052fe:	2b00      	cmp	r3, #0
 8005300:	d15f      	bne.n	80053c2 <_strtod_l+0x8aa>
 8005302:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005306:	0d1b      	lsrs	r3, r3, #20
 8005308:	051b      	lsls	r3, r3, #20
 800530a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800530e:	d958      	bls.n	80053c2 <_strtod_l+0x8aa>
 8005310:	6963      	ldr	r3, [r4, #20]
 8005312:	b913      	cbnz	r3, 800531a <_strtod_l+0x802>
 8005314:	6923      	ldr	r3, [r4, #16]
 8005316:	2b01      	cmp	r3, #1
 8005318:	dd53      	ble.n	80053c2 <_strtod_l+0x8aa>
 800531a:	4621      	mov	r1, r4
 800531c:	2201      	movs	r2, #1
 800531e:	9805      	ldr	r0, [sp, #20]
 8005320:	f7ff f986 	bl	8004630 <__lshift>
 8005324:	4641      	mov	r1, r8
 8005326:	4604      	mov	r4, r0
 8005328:	f7ff f9ee 	bl	8004708 <__mcmp>
 800532c:	2800      	cmp	r0, #0
 800532e:	dd48      	ble.n	80053c2 <_strtod_l+0x8aa>
 8005330:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005334:	9a08      	ldr	r2, [sp, #32]
 8005336:	0d1b      	lsrs	r3, r3, #20
 8005338:	051b      	lsls	r3, r3, #20
 800533a:	2a00      	cmp	r2, #0
 800533c:	d062      	beq.n	8005404 <_strtod_l+0x8ec>
 800533e:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8005342:	d85f      	bhi.n	8005404 <_strtod_l+0x8ec>
 8005344:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8005348:	f67f ae97 	bls.w	800507a <_strtod_l+0x562>
 800534c:	4ba4      	ldr	r3, [pc, #656]	@ (80055e0 <_strtod_l+0xac8>)
 800534e:	4650      	mov	r0, sl
 8005350:	4659      	mov	r1, fp
 8005352:	2200      	movs	r2, #0
 8005354:	f7fb f970 	bl	8000638 <__aeabi_dmul>
 8005358:	4ba2      	ldr	r3, [pc, #648]	@ (80055e4 <_strtod_l+0xacc>)
 800535a:	400b      	ands	r3, r1
 800535c:	4682      	mov	sl, r0
 800535e:	468b      	mov	fp, r1
 8005360:	2b00      	cmp	r3, #0
 8005362:	f47f adff 	bne.w	8004f64 <_strtod_l+0x44c>
 8005366:	9a05      	ldr	r2, [sp, #20]
 8005368:	2322      	movs	r3, #34	@ 0x22
 800536a:	6013      	str	r3, [r2, #0]
 800536c:	e5fa      	b.n	8004f64 <_strtod_l+0x44c>
 800536e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8005372:	d165      	bne.n	8005440 <_strtod_l+0x928>
 8005374:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8005376:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800537a:	b35a      	cbz	r2, 80053d4 <_strtod_l+0x8bc>
 800537c:	4a9a      	ldr	r2, [pc, #616]	@ (80055e8 <_strtod_l+0xad0>)
 800537e:	4293      	cmp	r3, r2
 8005380:	d12b      	bne.n	80053da <_strtod_l+0x8c2>
 8005382:	9b08      	ldr	r3, [sp, #32]
 8005384:	4651      	mov	r1, sl
 8005386:	b303      	cbz	r3, 80053ca <_strtod_l+0x8b2>
 8005388:	4b96      	ldr	r3, [pc, #600]	@ (80055e4 <_strtod_l+0xacc>)
 800538a:	465a      	mov	r2, fp
 800538c:	4013      	ands	r3, r2
 800538e:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8005392:	f04f 32ff 	mov.w	r2, #4294967295
 8005396:	d81b      	bhi.n	80053d0 <_strtod_l+0x8b8>
 8005398:	0d1b      	lsrs	r3, r3, #20
 800539a:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800539e:	fa02 f303 	lsl.w	r3, r2, r3
 80053a2:	4299      	cmp	r1, r3
 80053a4:	d119      	bne.n	80053da <_strtod_l+0x8c2>
 80053a6:	4b91      	ldr	r3, [pc, #580]	@ (80055ec <_strtod_l+0xad4>)
 80053a8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80053aa:	429a      	cmp	r2, r3
 80053ac:	d102      	bne.n	80053b4 <_strtod_l+0x89c>
 80053ae:	3101      	adds	r1, #1
 80053b0:	f43f adcd 	beq.w	8004f4e <_strtod_l+0x436>
 80053b4:	4b8b      	ldr	r3, [pc, #556]	@ (80055e4 <_strtod_l+0xacc>)
 80053b6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80053b8:	401a      	ands	r2, r3
 80053ba:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80053be:	f04f 0a00 	mov.w	sl, #0
 80053c2:	9b08      	ldr	r3, [sp, #32]
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d1c1      	bne.n	800534c <_strtod_l+0x834>
 80053c8:	e5cc      	b.n	8004f64 <_strtod_l+0x44c>
 80053ca:	f04f 33ff 	mov.w	r3, #4294967295
 80053ce:	e7e8      	b.n	80053a2 <_strtod_l+0x88a>
 80053d0:	4613      	mov	r3, r2
 80053d2:	e7e6      	b.n	80053a2 <_strtod_l+0x88a>
 80053d4:	ea53 030a 	orrs.w	r3, r3, sl
 80053d8:	d0aa      	beq.n	8005330 <_strtod_l+0x818>
 80053da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80053dc:	b1db      	cbz	r3, 8005416 <_strtod_l+0x8fe>
 80053de:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80053e0:	4213      	tst	r3, r2
 80053e2:	d0ee      	beq.n	80053c2 <_strtod_l+0x8aa>
 80053e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80053e6:	9a08      	ldr	r2, [sp, #32]
 80053e8:	4650      	mov	r0, sl
 80053ea:	4659      	mov	r1, fp
 80053ec:	b1bb      	cbz	r3, 800541e <_strtod_l+0x906>
 80053ee:	f7ff fb6f 	bl	8004ad0 <sulp>
 80053f2:	4602      	mov	r2, r0
 80053f4:	460b      	mov	r3, r1
 80053f6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80053fa:	f7fa ff67 	bl	80002cc <__adddf3>
 80053fe:	4682      	mov	sl, r0
 8005400:	468b      	mov	fp, r1
 8005402:	e7de      	b.n	80053c2 <_strtod_l+0x8aa>
 8005404:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8005408:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800540c:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8005410:	f04f 3aff 	mov.w	sl, #4294967295
 8005414:	e7d5      	b.n	80053c2 <_strtod_l+0x8aa>
 8005416:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005418:	ea13 0f0a 	tst.w	r3, sl
 800541c:	e7e1      	b.n	80053e2 <_strtod_l+0x8ca>
 800541e:	f7ff fb57 	bl	8004ad0 <sulp>
 8005422:	4602      	mov	r2, r0
 8005424:	460b      	mov	r3, r1
 8005426:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800542a:	f7fa ff4d 	bl	80002c8 <__aeabi_dsub>
 800542e:	2200      	movs	r2, #0
 8005430:	2300      	movs	r3, #0
 8005432:	4682      	mov	sl, r0
 8005434:	468b      	mov	fp, r1
 8005436:	f7fb fb67 	bl	8000b08 <__aeabi_dcmpeq>
 800543a:	2800      	cmp	r0, #0
 800543c:	d0c1      	beq.n	80053c2 <_strtod_l+0x8aa>
 800543e:	e61c      	b.n	800507a <_strtod_l+0x562>
 8005440:	4641      	mov	r1, r8
 8005442:	4620      	mov	r0, r4
 8005444:	f7ff fad0 	bl	80049e8 <__ratio>
 8005448:	2200      	movs	r2, #0
 800544a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800544e:	4606      	mov	r6, r0
 8005450:	460f      	mov	r7, r1
 8005452:	f7fb fb6d 	bl	8000b30 <__aeabi_dcmple>
 8005456:	2800      	cmp	r0, #0
 8005458:	d06d      	beq.n	8005536 <_strtod_l+0xa1e>
 800545a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800545c:	2b00      	cmp	r3, #0
 800545e:	d178      	bne.n	8005552 <_strtod_l+0xa3a>
 8005460:	f1ba 0f00 	cmp.w	sl, #0
 8005464:	d156      	bne.n	8005514 <_strtod_l+0x9fc>
 8005466:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005468:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800546c:	2b00      	cmp	r3, #0
 800546e:	d158      	bne.n	8005522 <_strtod_l+0xa0a>
 8005470:	4b5f      	ldr	r3, [pc, #380]	@ (80055f0 <_strtod_l+0xad8>)
 8005472:	2200      	movs	r2, #0
 8005474:	4630      	mov	r0, r6
 8005476:	4639      	mov	r1, r7
 8005478:	f7fb fb50 	bl	8000b1c <__aeabi_dcmplt>
 800547c:	2800      	cmp	r0, #0
 800547e:	d157      	bne.n	8005530 <_strtod_l+0xa18>
 8005480:	4630      	mov	r0, r6
 8005482:	4639      	mov	r1, r7
 8005484:	4b5b      	ldr	r3, [pc, #364]	@ (80055f4 <_strtod_l+0xadc>)
 8005486:	2200      	movs	r2, #0
 8005488:	f7fb f8d6 	bl	8000638 <__aeabi_dmul>
 800548c:	4606      	mov	r6, r0
 800548e:	460f      	mov	r7, r1
 8005490:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005494:	9606      	str	r6, [sp, #24]
 8005496:	9307      	str	r3, [sp, #28]
 8005498:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800549c:	4d51      	ldr	r5, [pc, #324]	@ (80055e4 <_strtod_l+0xacc>)
 800549e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80054a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80054a4:	401d      	ands	r5, r3
 80054a6:	4b54      	ldr	r3, [pc, #336]	@ (80055f8 <_strtod_l+0xae0>)
 80054a8:	429d      	cmp	r5, r3
 80054aa:	f040 80ab 	bne.w	8005604 <_strtod_l+0xaec>
 80054ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80054b0:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80054b4:	4650      	mov	r0, sl
 80054b6:	4659      	mov	r1, fp
 80054b8:	f7ff f9d4 	bl	8004864 <__ulp>
 80054bc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80054c0:	f7fb f8ba 	bl	8000638 <__aeabi_dmul>
 80054c4:	4652      	mov	r2, sl
 80054c6:	465b      	mov	r3, fp
 80054c8:	f7fa ff00 	bl	80002cc <__adddf3>
 80054cc:	460b      	mov	r3, r1
 80054ce:	4945      	ldr	r1, [pc, #276]	@ (80055e4 <_strtod_l+0xacc>)
 80054d0:	4a4a      	ldr	r2, [pc, #296]	@ (80055fc <_strtod_l+0xae4>)
 80054d2:	4019      	ands	r1, r3
 80054d4:	4291      	cmp	r1, r2
 80054d6:	4682      	mov	sl, r0
 80054d8:	d942      	bls.n	8005560 <_strtod_l+0xa48>
 80054da:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80054dc:	4b43      	ldr	r3, [pc, #268]	@ (80055ec <_strtod_l+0xad4>)
 80054de:	429a      	cmp	r2, r3
 80054e0:	d103      	bne.n	80054ea <_strtod_l+0x9d2>
 80054e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80054e4:	3301      	adds	r3, #1
 80054e6:	f43f ad32 	beq.w	8004f4e <_strtod_l+0x436>
 80054ea:	f8df b100 	ldr.w	fp, [pc, #256]	@ 80055ec <_strtod_l+0xad4>
 80054ee:	f04f 3aff 	mov.w	sl, #4294967295
 80054f2:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80054f4:	9805      	ldr	r0, [sp, #20]
 80054f6:	f7fe fe83 	bl	8004200 <_Bfree>
 80054fa:	9805      	ldr	r0, [sp, #20]
 80054fc:	4649      	mov	r1, r9
 80054fe:	f7fe fe7f 	bl	8004200 <_Bfree>
 8005502:	9805      	ldr	r0, [sp, #20]
 8005504:	4641      	mov	r1, r8
 8005506:	f7fe fe7b 	bl	8004200 <_Bfree>
 800550a:	9805      	ldr	r0, [sp, #20]
 800550c:	4621      	mov	r1, r4
 800550e:	f7fe fe77 	bl	8004200 <_Bfree>
 8005512:	e61f      	b.n	8005154 <_strtod_l+0x63c>
 8005514:	f1ba 0f01 	cmp.w	sl, #1
 8005518:	d103      	bne.n	8005522 <_strtod_l+0xa0a>
 800551a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800551c:	2b00      	cmp	r3, #0
 800551e:	f43f adac 	beq.w	800507a <_strtod_l+0x562>
 8005522:	4b37      	ldr	r3, [pc, #220]	@ (8005600 <_strtod_l+0xae8>)
 8005524:	4f32      	ldr	r7, [pc, #200]	@ (80055f0 <_strtod_l+0xad8>)
 8005526:	2200      	movs	r2, #0
 8005528:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800552c:	2600      	movs	r6, #0
 800552e:	e7b3      	b.n	8005498 <_strtod_l+0x980>
 8005530:	4f30      	ldr	r7, [pc, #192]	@ (80055f4 <_strtod_l+0xadc>)
 8005532:	2600      	movs	r6, #0
 8005534:	e7ac      	b.n	8005490 <_strtod_l+0x978>
 8005536:	4b2f      	ldr	r3, [pc, #188]	@ (80055f4 <_strtod_l+0xadc>)
 8005538:	4630      	mov	r0, r6
 800553a:	4639      	mov	r1, r7
 800553c:	2200      	movs	r2, #0
 800553e:	f7fb f87b 	bl	8000638 <__aeabi_dmul>
 8005542:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005544:	4606      	mov	r6, r0
 8005546:	460f      	mov	r7, r1
 8005548:	2b00      	cmp	r3, #0
 800554a:	d0a1      	beq.n	8005490 <_strtod_l+0x978>
 800554c:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005550:	e7a2      	b.n	8005498 <_strtod_l+0x980>
 8005552:	4b27      	ldr	r3, [pc, #156]	@ (80055f0 <_strtod_l+0xad8>)
 8005554:	2200      	movs	r2, #0
 8005556:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800555a:	4616      	mov	r6, r2
 800555c:	461f      	mov	r7, r3
 800555e:	e79b      	b.n	8005498 <_strtod_l+0x980>
 8005560:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8005564:	9b08      	ldr	r3, [sp, #32]
 8005566:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800556a:	2b00      	cmp	r3, #0
 800556c:	d1c1      	bne.n	80054f2 <_strtod_l+0x9da>
 800556e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005572:	0d1b      	lsrs	r3, r3, #20
 8005574:	051b      	lsls	r3, r3, #20
 8005576:	429d      	cmp	r5, r3
 8005578:	d1bb      	bne.n	80054f2 <_strtod_l+0x9da>
 800557a:	4630      	mov	r0, r6
 800557c:	4639      	mov	r1, r7
 800557e:	f7fb fe01 	bl	8001184 <__aeabi_d2lz>
 8005582:	f7fb f82b 	bl	80005dc <__aeabi_l2d>
 8005586:	4602      	mov	r2, r0
 8005588:	460b      	mov	r3, r1
 800558a:	4630      	mov	r0, r6
 800558c:	4639      	mov	r1, r7
 800558e:	f7fa fe9b 	bl	80002c8 <__aeabi_dsub>
 8005592:	460b      	mov	r3, r1
 8005594:	4602      	mov	r2, r0
 8005596:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800559a:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800559e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80055a0:	ea46 060a 	orr.w	r6, r6, sl
 80055a4:	431e      	orrs	r6, r3
 80055a6:	d06a      	beq.n	800567e <_strtod_l+0xb66>
 80055a8:	a309      	add	r3, pc, #36	@ (adr r3, 80055d0 <_strtod_l+0xab8>)
 80055aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055ae:	f7fb fab5 	bl	8000b1c <__aeabi_dcmplt>
 80055b2:	2800      	cmp	r0, #0
 80055b4:	f47f acd6 	bne.w	8004f64 <_strtod_l+0x44c>
 80055b8:	a307      	add	r3, pc, #28	@ (adr r3, 80055d8 <_strtod_l+0xac0>)
 80055ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80055c2:	f7fb fac9 	bl	8000b58 <__aeabi_dcmpgt>
 80055c6:	2800      	cmp	r0, #0
 80055c8:	d093      	beq.n	80054f2 <_strtod_l+0x9da>
 80055ca:	e4cb      	b.n	8004f64 <_strtod_l+0x44c>
 80055cc:	f3af 8000 	nop.w
 80055d0:	94a03595 	.word	0x94a03595
 80055d4:	3fdfffff 	.word	0x3fdfffff
 80055d8:	35afe535 	.word	0x35afe535
 80055dc:	3fe00000 	.word	0x3fe00000
 80055e0:	39500000 	.word	0x39500000
 80055e4:	7ff00000 	.word	0x7ff00000
 80055e8:	000fffff 	.word	0x000fffff
 80055ec:	7fefffff 	.word	0x7fefffff
 80055f0:	3ff00000 	.word	0x3ff00000
 80055f4:	3fe00000 	.word	0x3fe00000
 80055f8:	7fe00000 	.word	0x7fe00000
 80055fc:	7c9fffff 	.word	0x7c9fffff
 8005600:	bff00000 	.word	0xbff00000
 8005604:	9b08      	ldr	r3, [sp, #32]
 8005606:	b323      	cbz	r3, 8005652 <_strtod_l+0xb3a>
 8005608:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800560c:	d821      	bhi.n	8005652 <_strtod_l+0xb3a>
 800560e:	a328      	add	r3, pc, #160	@ (adr r3, 80056b0 <_strtod_l+0xb98>)
 8005610:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005614:	4630      	mov	r0, r6
 8005616:	4639      	mov	r1, r7
 8005618:	f7fb fa8a 	bl	8000b30 <__aeabi_dcmple>
 800561c:	b1a0      	cbz	r0, 8005648 <_strtod_l+0xb30>
 800561e:	4639      	mov	r1, r7
 8005620:	4630      	mov	r0, r6
 8005622:	f7fb fae1 	bl	8000be8 <__aeabi_d2uiz>
 8005626:	2801      	cmp	r0, #1
 8005628:	bf38      	it	cc
 800562a:	2001      	movcc	r0, #1
 800562c:	f7fa ff8a 	bl	8000544 <__aeabi_ui2d>
 8005630:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005632:	4606      	mov	r6, r0
 8005634:	460f      	mov	r7, r1
 8005636:	b9fb      	cbnz	r3, 8005678 <_strtod_l+0xb60>
 8005638:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800563c:	9014      	str	r0, [sp, #80]	@ 0x50
 800563e:	9315      	str	r3, [sp, #84]	@ 0x54
 8005640:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8005644:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005648:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800564a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800564e:	1b5b      	subs	r3, r3, r5
 8005650:	9311      	str	r3, [sp, #68]	@ 0x44
 8005652:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005656:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800565a:	f7ff f903 	bl	8004864 <__ulp>
 800565e:	4602      	mov	r2, r0
 8005660:	460b      	mov	r3, r1
 8005662:	4650      	mov	r0, sl
 8005664:	4659      	mov	r1, fp
 8005666:	f7fa ffe7 	bl	8000638 <__aeabi_dmul>
 800566a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800566e:	f7fa fe2d 	bl	80002cc <__adddf3>
 8005672:	4682      	mov	sl, r0
 8005674:	468b      	mov	fp, r1
 8005676:	e775      	b.n	8005564 <_strtod_l+0xa4c>
 8005678:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800567c:	e7e0      	b.n	8005640 <_strtod_l+0xb28>
 800567e:	a30e      	add	r3, pc, #56	@ (adr r3, 80056b8 <_strtod_l+0xba0>)
 8005680:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005684:	f7fb fa4a 	bl	8000b1c <__aeabi_dcmplt>
 8005688:	e79d      	b.n	80055c6 <_strtod_l+0xaae>
 800568a:	2300      	movs	r3, #0
 800568c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800568e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8005690:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005692:	6013      	str	r3, [r2, #0]
 8005694:	f7ff ba7d 	b.w	8004b92 <_strtod_l+0x7a>
 8005698:	2a65      	cmp	r2, #101	@ 0x65
 800569a:	f43f ab74 	beq.w	8004d86 <_strtod_l+0x26e>
 800569e:	2a45      	cmp	r2, #69	@ 0x45
 80056a0:	f43f ab71 	beq.w	8004d86 <_strtod_l+0x26e>
 80056a4:	2301      	movs	r3, #1
 80056a6:	f7ff bbac 	b.w	8004e02 <_strtod_l+0x2ea>
 80056aa:	bf00      	nop
 80056ac:	f3af 8000 	nop.w
 80056b0:	ffc00000 	.word	0xffc00000
 80056b4:	41dfffff 	.word	0x41dfffff
 80056b8:	94a03595 	.word	0x94a03595
 80056bc:	3fcfffff 	.word	0x3fcfffff

080056c0 <_strtod_r>:
 80056c0:	4b01      	ldr	r3, [pc, #4]	@ (80056c8 <_strtod_r+0x8>)
 80056c2:	f7ff ba29 	b.w	8004b18 <_strtod_l>
 80056c6:	bf00      	nop
 80056c8:	2000007c 	.word	0x2000007c

080056cc <_strtol_l.constprop.0>:
 80056cc:	2b24      	cmp	r3, #36	@ 0x24
 80056ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056d2:	4686      	mov	lr, r0
 80056d4:	4690      	mov	r8, r2
 80056d6:	d801      	bhi.n	80056dc <_strtol_l.constprop.0+0x10>
 80056d8:	2b01      	cmp	r3, #1
 80056da:	d106      	bne.n	80056ea <_strtol_l.constprop.0+0x1e>
 80056dc:	f7fd fdce 	bl	800327c <__errno>
 80056e0:	2316      	movs	r3, #22
 80056e2:	6003      	str	r3, [r0, #0]
 80056e4:	2000      	movs	r0, #0
 80056e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80056ea:	4834      	ldr	r0, [pc, #208]	@ (80057bc <_strtol_l.constprop.0+0xf0>)
 80056ec:	460d      	mov	r5, r1
 80056ee:	462a      	mov	r2, r5
 80056f0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80056f4:	5d06      	ldrb	r6, [r0, r4]
 80056f6:	f016 0608 	ands.w	r6, r6, #8
 80056fa:	d1f8      	bne.n	80056ee <_strtol_l.constprop.0+0x22>
 80056fc:	2c2d      	cmp	r4, #45	@ 0x2d
 80056fe:	d12d      	bne.n	800575c <_strtol_l.constprop.0+0x90>
 8005700:	782c      	ldrb	r4, [r5, #0]
 8005702:	2601      	movs	r6, #1
 8005704:	1c95      	adds	r5, r2, #2
 8005706:	f033 0210 	bics.w	r2, r3, #16
 800570a:	d109      	bne.n	8005720 <_strtol_l.constprop.0+0x54>
 800570c:	2c30      	cmp	r4, #48	@ 0x30
 800570e:	d12a      	bne.n	8005766 <_strtol_l.constprop.0+0x9a>
 8005710:	782a      	ldrb	r2, [r5, #0]
 8005712:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8005716:	2a58      	cmp	r2, #88	@ 0x58
 8005718:	d125      	bne.n	8005766 <_strtol_l.constprop.0+0x9a>
 800571a:	786c      	ldrb	r4, [r5, #1]
 800571c:	2310      	movs	r3, #16
 800571e:	3502      	adds	r5, #2
 8005720:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8005724:	f10c 3cff 	add.w	ip, ip, #4294967295
 8005728:	2200      	movs	r2, #0
 800572a:	fbbc f9f3 	udiv	r9, ip, r3
 800572e:	4610      	mov	r0, r2
 8005730:	fb03 ca19 	mls	sl, r3, r9, ip
 8005734:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005738:	2f09      	cmp	r7, #9
 800573a:	d81b      	bhi.n	8005774 <_strtol_l.constprop.0+0xa8>
 800573c:	463c      	mov	r4, r7
 800573e:	42a3      	cmp	r3, r4
 8005740:	dd27      	ble.n	8005792 <_strtol_l.constprop.0+0xc6>
 8005742:	1c57      	adds	r7, r2, #1
 8005744:	d007      	beq.n	8005756 <_strtol_l.constprop.0+0x8a>
 8005746:	4581      	cmp	r9, r0
 8005748:	d320      	bcc.n	800578c <_strtol_l.constprop.0+0xc0>
 800574a:	d101      	bne.n	8005750 <_strtol_l.constprop.0+0x84>
 800574c:	45a2      	cmp	sl, r4
 800574e:	db1d      	blt.n	800578c <_strtol_l.constprop.0+0xc0>
 8005750:	fb00 4003 	mla	r0, r0, r3, r4
 8005754:	2201      	movs	r2, #1
 8005756:	f815 4b01 	ldrb.w	r4, [r5], #1
 800575a:	e7eb      	b.n	8005734 <_strtol_l.constprop.0+0x68>
 800575c:	2c2b      	cmp	r4, #43	@ 0x2b
 800575e:	bf04      	itt	eq
 8005760:	782c      	ldrbeq	r4, [r5, #0]
 8005762:	1c95      	addeq	r5, r2, #2
 8005764:	e7cf      	b.n	8005706 <_strtol_l.constprop.0+0x3a>
 8005766:	2b00      	cmp	r3, #0
 8005768:	d1da      	bne.n	8005720 <_strtol_l.constprop.0+0x54>
 800576a:	2c30      	cmp	r4, #48	@ 0x30
 800576c:	bf0c      	ite	eq
 800576e:	2308      	moveq	r3, #8
 8005770:	230a      	movne	r3, #10
 8005772:	e7d5      	b.n	8005720 <_strtol_l.constprop.0+0x54>
 8005774:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005778:	2f19      	cmp	r7, #25
 800577a:	d801      	bhi.n	8005780 <_strtol_l.constprop.0+0xb4>
 800577c:	3c37      	subs	r4, #55	@ 0x37
 800577e:	e7de      	b.n	800573e <_strtol_l.constprop.0+0x72>
 8005780:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005784:	2f19      	cmp	r7, #25
 8005786:	d804      	bhi.n	8005792 <_strtol_l.constprop.0+0xc6>
 8005788:	3c57      	subs	r4, #87	@ 0x57
 800578a:	e7d8      	b.n	800573e <_strtol_l.constprop.0+0x72>
 800578c:	f04f 32ff 	mov.w	r2, #4294967295
 8005790:	e7e1      	b.n	8005756 <_strtol_l.constprop.0+0x8a>
 8005792:	1c53      	adds	r3, r2, #1
 8005794:	d108      	bne.n	80057a8 <_strtol_l.constprop.0+0xdc>
 8005796:	2322      	movs	r3, #34	@ 0x22
 8005798:	f8ce 3000 	str.w	r3, [lr]
 800579c:	4660      	mov	r0, ip
 800579e:	f1b8 0f00 	cmp.w	r8, #0
 80057a2:	d0a0      	beq.n	80056e6 <_strtol_l.constprop.0+0x1a>
 80057a4:	1e69      	subs	r1, r5, #1
 80057a6:	e006      	b.n	80057b6 <_strtol_l.constprop.0+0xea>
 80057a8:	b106      	cbz	r6, 80057ac <_strtol_l.constprop.0+0xe0>
 80057aa:	4240      	negs	r0, r0
 80057ac:	f1b8 0f00 	cmp.w	r8, #0
 80057b0:	d099      	beq.n	80056e6 <_strtol_l.constprop.0+0x1a>
 80057b2:	2a00      	cmp	r2, #0
 80057b4:	d1f6      	bne.n	80057a4 <_strtol_l.constprop.0+0xd8>
 80057b6:	f8c8 1000 	str.w	r1, [r8]
 80057ba:	e794      	b.n	80056e6 <_strtol_l.constprop.0+0x1a>
 80057bc:	08006bf1 	.word	0x08006bf1

080057c0 <_strtol_r>:
 80057c0:	f7ff bf84 	b.w	80056cc <_strtol_l.constprop.0>

080057c4 <__ssputs_r>:
 80057c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80057c8:	688e      	ldr	r6, [r1, #8]
 80057ca:	461f      	mov	r7, r3
 80057cc:	42be      	cmp	r6, r7
 80057ce:	680b      	ldr	r3, [r1, #0]
 80057d0:	4682      	mov	sl, r0
 80057d2:	460c      	mov	r4, r1
 80057d4:	4690      	mov	r8, r2
 80057d6:	d82d      	bhi.n	8005834 <__ssputs_r+0x70>
 80057d8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80057dc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80057e0:	d026      	beq.n	8005830 <__ssputs_r+0x6c>
 80057e2:	6965      	ldr	r5, [r4, #20]
 80057e4:	6909      	ldr	r1, [r1, #16]
 80057e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80057ea:	eba3 0901 	sub.w	r9, r3, r1
 80057ee:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80057f2:	1c7b      	adds	r3, r7, #1
 80057f4:	444b      	add	r3, r9
 80057f6:	106d      	asrs	r5, r5, #1
 80057f8:	429d      	cmp	r5, r3
 80057fa:	bf38      	it	cc
 80057fc:	461d      	movcc	r5, r3
 80057fe:	0553      	lsls	r3, r2, #21
 8005800:	d527      	bpl.n	8005852 <__ssputs_r+0x8e>
 8005802:	4629      	mov	r1, r5
 8005804:	f7fe fc30 	bl	8004068 <_malloc_r>
 8005808:	4606      	mov	r6, r0
 800580a:	b360      	cbz	r0, 8005866 <__ssputs_r+0xa2>
 800580c:	6921      	ldr	r1, [r4, #16]
 800580e:	464a      	mov	r2, r9
 8005810:	f000 fa14 	bl	8005c3c <memcpy>
 8005814:	89a3      	ldrh	r3, [r4, #12]
 8005816:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800581a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800581e:	81a3      	strh	r3, [r4, #12]
 8005820:	6126      	str	r6, [r4, #16]
 8005822:	6165      	str	r5, [r4, #20]
 8005824:	444e      	add	r6, r9
 8005826:	eba5 0509 	sub.w	r5, r5, r9
 800582a:	6026      	str	r6, [r4, #0]
 800582c:	60a5      	str	r5, [r4, #8]
 800582e:	463e      	mov	r6, r7
 8005830:	42be      	cmp	r6, r7
 8005832:	d900      	bls.n	8005836 <__ssputs_r+0x72>
 8005834:	463e      	mov	r6, r7
 8005836:	6820      	ldr	r0, [r4, #0]
 8005838:	4632      	mov	r2, r6
 800583a:	4641      	mov	r1, r8
 800583c:	f000 f9c2 	bl	8005bc4 <memmove>
 8005840:	68a3      	ldr	r3, [r4, #8]
 8005842:	1b9b      	subs	r3, r3, r6
 8005844:	60a3      	str	r3, [r4, #8]
 8005846:	6823      	ldr	r3, [r4, #0]
 8005848:	4433      	add	r3, r6
 800584a:	6023      	str	r3, [r4, #0]
 800584c:	2000      	movs	r0, #0
 800584e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005852:	462a      	mov	r2, r5
 8005854:	f000 fd83 	bl	800635e <_realloc_r>
 8005858:	4606      	mov	r6, r0
 800585a:	2800      	cmp	r0, #0
 800585c:	d1e0      	bne.n	8005820 <__ssputs_r+0x5c>
 800585e:	6921      	ldr	r1, [r4, #16]
 8005860:	4650      	mov	r0, sl
 8005862:	f7fe fb8d 	bl	8003f80 <_free_r>
 8005866:	230c      	movs	r3, #12
 8005868:	f8ca 3000 	str.w	r3, [sl]
 800586c:	89a3      	ldrh	r3, [r4, #12]
 800586e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005872:	81a3      	strh	r3, [r4, #12]
 8005874:	f04f 30ff 	mov.w	r0, #4294967295
 8005878:	e7e9      	b.n	800584e <__ssputs_r+0x8a>
	...

0800587c <_svfiprintf_r>:
 800587c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005880:	4698      	mov	r8, r3
 8005882:	898b      	ldrh	r3, [r1, #12]
 8005884:	061b      	lsls	r3, r3, #24
 8005886:	b09d      	sub	sp, #116	@ 0x74
 8005888:	4607      	mov	r7, r0
 800588a:	460d      	mov	r5, r1
 800588c:	4614      	mov	r4, r2
 800588e:	d510      	bpl.n	80058b2 <_svfiprintf_r+0x36>
 8005890:	690b      	ldr	r3, [r1, #16]
 8005892:	b973      	cbnz	r3, 80058b2 <_svfiprintf_r+0x36>
 8005894:	2140      	movs	r1, #64	@ 0x40
 8005896:	f7fe fbe7 	bl	8004068 <_malloc_r>
 800589a:	6028      	str	r0, [r5, #0]
 800589c:	6128      	str	r0, [r5, #16]
 800589e:	b930      	cbnz	r0, 80058ae <_svfiprintf_r+0x32>
 80058a0:	230c      	movs	r3, #12
 80058a2:	603b      	str	r3, [r7, #0]
 80058a4:	f04f 30ff 	mov.w	r0, #4294967295
 80058a8:	b01d      	add	sp, #116	@ 0x74
 80058aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80058ae:	2340      	movs	r3, #64	@ 0x40
 80058b0:	616b      	str	r3, [r5, #20]
 80058b2:	2300      	movs	r3, #0
 80058b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80058b6:	2320      	movs	r3, #32
 80058b8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80058bc:	f8cd 800c 	str.w	r8, [sp, #12]
 80058c0:	2330      	movs	r3, #48	@ 0x30
 80058c2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005a60 <_svfiprintf_r+0x1e4>
 80058c6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80058ca:	f04f 0901 	mov.w	r9, #1
 80058ce:	4623      	mov	r3, r4
 80058d0:	469a      	mov	sl, r3
 80058d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80058d6:	b10a      	cbz	r2, 80058dc <_svfiprintf_r+0x60>
 80058d8:	2a25      	cmp	r2, #37	@ 0x25
 80058da:	d1f9      	bne.n	80058d0 <_svfiprintf_r+0x54>
 80058dc:	ebba 0b04 	subs.w	fp, sl, r4
 80058e0:	d00b      	beq.n	80058fa <_svfiprintf_r+0x7e>
 80058e2:	465b      	mov	r3, fp
 80058e4:	4622      	mov	r2, r4
 80058e6:	4629      	mov	r1, r5
 80058e8:	4638      	mov	r0, r7
 80058ea:	f7ff ff6b 	bl	80057c4 <__ssputs_r>
 80058ee:	3001      	adds	r0, #1
 80058f0:	f000 80a7 	beq.w	8005a42 <_svfiprintf_r+0x1c6>
 80058f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80058f6:	445a      	add	r2, fp
 80058f8:	9209      	str	r2, [sp, #36]	@ 0x24
 80058fa:	f89a 3000 	ldrb.w	r3, [sl]
 80058fe:	2b00      	cmp	r3, #0
 8005900:	f000 809f 	beq.w	8005a42 <_svfiprintf_r+0x1c6>
 8005904:	2300      	movs	r3, #0
 8005906:	f04f 32ff 	mov.w	r2, #4294967295
 800590a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800590e:	f10a 0a01 	add.w	sl, sl, #1
 8005912:	9304      	str	r3, [sp, #16]
 8005914:	9307      	str	r3, [sp, #28]
 8005916:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800591a:	931a      	str	r3, [sp, #104]	@ 0x68
 800591c:	4654      	mov	r4, sl
 800591e:	2205      	movs	r2, #5
 8005920:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005924:	484e      	ldr	r0, [pc, #312]	@ (8005a60 <_svfiprintf_r+0x1e4>)
 8005926:	f7fa fc73 	bl	8000210 <memchr>
 800592a:	9a04      	ldr	r2, [sp, #16]
 800592c:	b9d8      	cbnz	r0, 8005966 <_svfiprintf_r+0xea>
 800592e:	06d0      	lsls	r0, r2, #27
 8005930:	bf44      	itt	mi
 8005932:	2320      	movmi	r3, #32
 8005934:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005938:	0711      	lsls	r1, r2, #28
 800593a:	bf44      	itt	mi
 800593c:	232b      	movmi	r3, #43	@ 0x2b
 800593e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005942:	f89a 3000 	ldrb.w	r3, [sl]
 8005946:	2b2a      	cmp	r3, #42	@ 0x2a
 8005948:	d015      	beq.n	8005976 <_svfiprintf_r+0xfa>
 800594a:	9a07      	ldr	r2, [sp, #28]
 800594c:	4654      	mov	r4, sl
 800594e:	2000      	movs	r0, #0
 8005950:	f04f 0c0a 	mov.w	ip, #10
 8005954:	4621      	mov	r1, r4
 8005956:	f811 3b01 	ldrb.w	r3, [r1], #1
 800595a:	3b30      	subs	r3, #48	@ 0x30
 800595c:	2b09      	cmp	r3, #9
 800595e:	d94b      	bls.n	80059f8 <_svfiprintf_r+0x17c>
 8005960:	b1b0      	cbz	r0, 8005990 <_svfiprintf_r+0x114>
 8005962:	9207      	str	r2, [sp, #28]
 8005964:	e014      	b.n	8005990 <_svfiprintf_r+0x114>
 8005966:	eba0 0308 	sub.w	r3, r0, r8
 800596a:	fa09 f303 	lsl.w	r3, r9, r3
 800596e:	4313      	orrs	r3, r2
 8005970:	9304      	str	r3, [sp, #16]
 8005972:	46a2      	mov	sl, r4
 8005974:	e7d2      	b.n	800591c <_svfiprintf_r+0xa0>
 8005976:	9b03      	ldr	r3, [sp, #12]
 8005978:	1d19      	adds	r1, r3, #4
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	9103      	str	r1, [sp, #12]
 800597e:	2b00      	cmp	r3, #0
 8005980:	bfbb      	ittet	lt
 8005982:	425b      	neglt	r3, r3
 8005984:	f042 0202 	orrlt.w	r2, r2, #2
 8005988:	9307      	strge	r3, [sp, #28]
 800598a:	9307      	strlt	r3, [sp, #28]
 800598c:	bfb8      	it	lt
 800598e:	9204      	strlt	r2, [sp, #16]
 8005990:	7823      	ldrb	r3, [r4, #0]
 8005992:	2b2e      	cmp	r3, #46	@ 0x2e
 8005994:	d10a      	bne.n	80059ac <_svfiprintf_r+0x130>
 8005996:	7863      	ldrb	r3, [r4, #1]
 8005998:	2b2a      	cmp	r3, #42	@ 0x2a
 800599a:	d132      	bne.n	8005a02 <_svfiprintf_r+0x186>
 800599c:	9b03      	ldr	r3, [sp, #12]
 800599e:	1d1a      	adds	r2, r3, #4
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	9203      	str	r2, [sp, #12]
 80059a4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80059a8:	3402      	adds	r4, #2
 80059aa:	9305      	str	r3, [sp, #20]
 80059ac:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8005a64 <_svfiprintf_r+0x1e8>
 80059b0:	7821      	ldrb	r1, [r4, #0]
 80059b2:	2203      	movs	r2, #3
 80059b4:	4650      	mov	r0, sl
 80059b6:	f7fa fc2b 	bl	8000210 <memchr>
 80059ba:	b138      	cbz	r0, 80059cc <_svfiprintf_r+0x150>
 80059bc:	9b04      	ldr	r3, [sp, #16]
 80059be:	eba0 000a 	sub.w	r0, r0, sl
 80059c2:	2240      	movs	r2, #64	@ 0x40
 80059c4:	4082      	lsls	r2, r0
 80059c6:	4313      	orrs	r3, r2
 80059c8:	3401      	adds	r4, #1
 80059ca:	9304      	str	r3, [sp, #16]
 80059cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80059d0:	4825      	ldr	r0, [pc, #148]	@ (8005a68 <_svfiprintf_r+0x1ec>)
 80059d2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80059d6:	2206      	movs	r2, #6
 80059d8:	f7fa fc1a 	bl	8000210 <memchr>
 80059dc:	2800      	cmp	r0, #0
 80059de:	d036      	beq.n	8005a4e <_svfiprintf_r+0x1d2>
 80059e0:	4b22      	ldr	r3, [pc, #136]	@ (8005a6c <_svfiprintf_r+0x1f0>)
 80059e2:	bb1b      	cbnz	r3, 8005a2c <_svfiprintf_r+0x1b0>
 80059e4:	9b03      	ldr	r3, [sp, #12]
 80059e6:	3307      	adds	r3, #7
 80059e8:	f023 0307 	bic.w	r3, r3, #7
 80059ec:	3308      	adds	r3, #8
 80059ee:	9303      	str	r3, [sp, #12]
 80059f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80059f2:	4433      	add	r3, r6
 80059f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80059f6:	e76a      	b.n	80058ce <_svfiprintf_r+0x52>
 80059f8:	fb0c 3202 	mla	r2, ip, r2, r3
 80059fc:	460c      	mov	r4, r1
 80059fe:	2001      	movs	r0, #1
 8005a00:	e7a8      	b.n	8005954 <_svfiprintf_r+0xd8>
 8005a02:	2300      	movs	r3, #0
 8005a04:	3401      	adds	r4, #1
 8005a06:	9305      	str	r3, [sp, #20]
 8005a08:	4619      	mov	r1, r3
 8005a0a:	f04f 0c0a 	mov.w	ip, #10
 8005a0e:	4620      	mov	r0, r4
 8005a10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005a14:	3a30      	subs	r2, #48	@ 0x30
 8005a16:	2a09      	cmp	r2, #9
 8005a18:	d903      	bls.n	8005a22 <_svfiprintf_r+0x1a6>
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d0c6      	beq.n	80059ac <_svfiprintf_r+0x130>
 8005a1e:	9105      	str	r1, [sp, #20]
 8005a20:	e7c4      	b.n	80059ac <_svfiprintf_r+0x130>
 8005a22:	fb0c 2101 	mla	r1, ip, r1, r2
 8005a26:	4604      	mov	r4, r0
 8005a28:	2301      	movs	r3, #1
 8005a2a:	e7f0      	b.n	8005a0e <_svfiprintf_r+0x192>
 8005a2c:	ab03      	add	r3, sp, #12
 8005a2e:	9300      	str	r3, [sp, #0]
 8005a30:	462a      	mov	r2, r5
 8005a32:	4b0f      	ldr	r3, [pc, #60]	@ (8005a70 <_svfiprintf_r+0x1f4>)
 8005a34:	a904      	add	r1, sp, #16
 8005a36:	4638      	mov	r0, r7
 8005a38:	f7fc fce0 	bl	80023fc <_printf_float>
 8005a3c:	1c42      	adds	r2, r0, #1
 8005a3e:	4606      	mov	r6, r0
 8005a40:	d1d6      	bne.n	80059f0 <_svfiprintf_r+0x174>
 8005a42:	89ab      	ldrh	r3, [r5, #12]
 8005a44:	065b      	lsls	r3, r3, #25
 8005a46:	f53f af2d 	bmi.w	80058a4 <_svfiprintf_r+0x28>
 8005a4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005a4c:	e72c      	b.n	80058a8 <_svfiprintf_r+0x2c>
 8005a4e:	ab03      	add	r3, sp, #12
 8005a50:	9300      	str	r3, [sp, #0]
 8005a52:	462a      	mov	r2, r5
 8005a54:	4b06      	ldr	r3, [pc, #24]	@ (8005a70 <_svfiprintf_r+0x1f4>)
 8005a56:	a904      	add	r1, sp, #16
 8005a58:	4638      	mov	r0, r7
 8005a5a:	f7fc ff69 	bl	8002930 <_printf_i>
 8005a5e:	e7ed      	b.n	8005a3c <_svfiprintf_r+0x1c0>
 8005a60:	08006cf1 	.word	0x08006cf1
 8005a64:	08006cf7 	.word	0x08006cf7
 8005a68:	08006cfb 	.word	0x08006cfb
 8005a6c:	080023fd 	.word	0x080023fd
 8005a70:	080057c5 	.word	0x080057c5

08005a74 <__sflush_r>:
 8005a74:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a7a:	0716      	lsls	r6, r2, #28
 8005a7c:	4605      	mov	r5, r0
 8005a7e:	460c      	mov	r4, r1
 8005a80:	d454      	bmi.n	8005b2c <__sflush_r+0xb8>
 8005a82:	684b      	ldr	r3, [r1, #4]
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	dc02      	bgt.n	8005a8e <__sflush_r+0x1a>
 8005a88:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005a8a:	2b00      	cmp	r3, #0
 8005a8c:	dd48      	ble.n	8005b20 <__sflush_r+0xac>
 8005a8e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005a90:	2e00      	cmp	r6, #0
 8005a92:	d045      	beq.n	8005b20 <__sflush_r+0xac>
 8005a94:	2300      	movs	r3, #0
 8005a96:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005a9a:	682f      	ldr	r7, [r5, #0]
 8005a9c:	6a21      	ldr	r1, [r4, #32]
 8005a9e:	602b      	str	r3, [r5, #0]
 8005aa0:	d030      	beq.n	8005b04 <__sflush_r+0x90>
 8005aa2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005aa4:	89a3      	ldrh	r3, [r4, #12]
 8005aa6:	0759      	lsls	r1, r3, #29
 8005aa8:	d505      	bpl.n	8005ab6 <__sflush_r+0x42>
 8005aaa:	6863      	ldr	r3, [r4, #4]
 8005aac:	1ad2      	subs	r2, r2, r3
 8005aae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005ab0:	b10b      	cbz	r3, 8005ab6 <__sflush_r+0x42>
 8005ab2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005ab4:	1ad2      	subs	r2, r2, r3
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005aba:	6a21      	ldr	r1, [r4, #32]
 8005abc:	4628      	mov	r0, r5
 8005abe:	47b0      	blx	r6
 8005ac0:	1c43      	adds	r3, r0, #1
 8005ac2:	89a3      	ldrh	r3, [r4, #12]
 8005ac4:	d106      	bne.n	8005ad4 <__sflush_r+0x60>
 8005ac6:	6829      	ldr	r1, [r5, #0]
 8005ac8:	291d      	cmp	r1, #29
 8005aca:	d82b      	bhi.n	8005b24 <__sflush_r+0xb0>
 8005acc:	4a28      	ldr	r2, [pc, #160]	@ (8005b70 <__sflush_r+0xfc>)
 8005ace:	410a      	asrs	r2, r1
 8005ad0:	07d6      	lsls	r6, r2, #31
 8005ad2:	d427      	bmi.n	8005b24 <__sflush_r+0xb0>
 8005ad4:	2200      	movs	r2, #0
 8005ad6:	6062      	str	r2, [r4, #4]
 8005ad8:	04d9      	lsls	r1, r3, #19
 8005ada:	6922      	ldr	r2, [r4, #16]
 8005adc:	6022      	str	r2, [r4, #0]
 8005ade:	d504      	bpl.n	8005aea <__sflush_r+0x76>
 8005ae0:	1c42      	adds	r2, r0, #1
 8005ae2:	d101      	bne.n	8005ae8 <__sflush_r+0x74>
 8005ae4:	682b      	ldr	r3, [r5, #0]
 8005ae6:	b903      	cbnz	r3, 8005aea <__sflush_r+0x76>
 8005ae8:	6560      	str	r0, [r4, #84]	@ 0x54
 8005aea:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005aec:	602f      	str	r7, [r5, #0]
 8005aee:	b1b9      	cbz	r1, 8005b20 <__sflush_r+0xac>
 8005af0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005af4:	4299      	cmp	r1, r3
 8005af6:	d002      	beq.n	8005afe <__sflush_r+0x8a>
 8005af8:	4628      	mov	r0, r5
 8005afa:	f7fe fa41 	bl	8003f80 <_free_r>
 8005afe:	2300      	movs	r3, #0
 8005b00:	6363      	str	r3, [r4, #52]	@ 0x34
 8005b02:	e00d      	b.n	8005b20 <__sflush_r+0xac>
 8005b04:	2301      	movs	r3, #1
 8005b06:	4628      	mov	r0, r5
 8005b08:	47b0      	blx	r6
 8005b0a:	4602      	mov	r2, r0
 8005b0c:	1c50      	adds	r0, r2, #1
 8005b0e:	d1c9      	bne.n	8005aa4 <__sflush_r+0x30>
 8005b10:	682b      	ldr	r3, [r5, #0]
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d0c6      	beq.n	8005aa4 <__sflush_r+0x30>
 8005b16:	2b1d      	cmp	r3, #29
 8005b18:	d001      	beq.n	8005b1e <__sflush_r+0xaa>
 8005b1a:	2b16      	cmp	r3, #22
 8005b1c:	d11d      	bne.n	8005b5a <__sflush_r+0xe6>
 8005b1e:	602f      	str	r7, [r5, #0]
 8005b20:	2000      	movs	r0, #0
 8005b22:	e021      	b.n	8005b68 <__sflush_r+0xf4>
 8005b24:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005b28:	b21b      	sxth	r3, r3
 8005b2a:	e01a      	b.n	8005b62 <__sflush_r+0xee>
 8005b2c:	690f      	ldr	r7, [r1, #16]
 8005b2e:	2f00      	cmp	r7, #0
 8005b30:	d0f6      	beq.n	8005b20 <__sflush_r+0xac>
 8005b32:	0793      	lsls	r3, r2, #30
 8005b34:	680e      	ldr	r6, [r1, #0]
 8005b36:	bf08      	it	eq
 8005b38:	694b      	ldreq	r3, [r1, #20]
 8005b3a:	600f      	str	r7, [r1, #0]
 8005b3c:	bf18      	it	ne
 8005b3e:	2300      	movne	r3, #0
 8005b40:	1bf6      	subs	r6, r6, r7
 8005b42:	608b      	str	r3, [r1, #8]
 8005b44:	2e00      	cmp	r6, #0
 8005b46:	ddeb      	ble.n	8005b20 <__sflush_r+0xac>
 8005b48:	6a21      	ldr	r1, [r4, #32]
 8005b4a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8005b4e:	4633      	mov	r3, r6
 8005b50:	463a      	mov	r2, r7
 8005b52:	4628      	mov	r0, r5
 8005b54:	47e0      	blx	ip
 8005b56:	2800      	cmp	r0, #0
 8005b58:	dc07      	bgt.n	8005b6a <__sflush_r+0xf6>
 8005b5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005b5e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005b62:	81a3      	strh	r3, [r4, #12]
 8005b64:	f04f 30ff 	mov.w	r0, #4294967295
 8005b68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005b6a:	4407      	add	r7, r0
 8005b6c:	1a36      	subs	r6, r6, r0
 8005b6e:	e7e9      	b.n	8005b44 <__sflush_r+0xd0>
 8005b70:	dfbffffe 	.word	0xdfbffffe

08005b74 <_fflush_r>:
 8005b74:	b538      	push	{r3, r4, r5, lr}
 8005b76:	690b      	ldr	r3, [r1, #16]
 8005b78:	4605      	mov	r5, r0
 8005b7a:	460c      	mov	r4, r1
 8005b7c:	b913      	cbnz	r3, 8005b84 <_fflush_r+0x10>
 8005b7e:	2500      	movs	r5, #0
 8005b80:	4628      	mov	r0, r5
 8005b82:	bd38      	pop	{r3, r4, r5, pc}
 8005b84:	b118      	cbz	r0, 8005b8e <_fflush_r+0x1a>
 8005b86:	6a03      	ldr	r3, [r0, #32]
 8005b88:	b90b      	cbnz	r3, 8005b8e <_fflush_r+0x1a>
 8005b8a:	f7fd fa8b 	bl	80030a4 <__sinit>
 8005b8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d0f3      	beq.n	8005b7e <_fflush_r+0xa>
 8005b96:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005b98:	07d0      	lsls	r0, r2, #31
 8005b9a:	d404      	bmi.n	8005ba6 <_fflush_r+0x32>
 8005b9c:	0599      	lsls	r1, r3, #22
 8005b9e:	d402      	bmi.n	8005ba6 <_fflush_r+0x32>
 8005ba0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005ba2:	f7fd fb96 	bl	80032d2 <__retarget_lock_acquire_recursive>
 8005ba6:	4628      	mov	r0, r5
 8005ba8:	4621      	mov	r1, r4
 8005baa:	f7ff ff63 	bl	8005a74 <__sflush_r>
 8005bae:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005bb0:	07da      	lsls	r2, r3, #31
 8005bb2:	4605      	mov	r5, r0
 8005bb4:	d4e4      	bmi.n	8005b80 <_fflush_r+0xc>
 8005bb6:	89a3      	ldrh	r3, [r4, #12]
 8005bb8:	059b      	lsls	r3, r3, #22
 8005bba:	d4e1      	bmi.n	8005b80 <_fflush_r+0xc>
 8005bbc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005bbe:	f7fd fb89 	bl	80032d4 <__retarget_lock_release_recursive>
 8005bc2:	e7dd      	b.n	8005b80 <_fflush_r+0xc>

08005bc4 <memmove>:
 8005bc4:	4288      	cmp	r0, r1
 8005bc6:	b510      	push	{r4, lr}
 8005bc8:	eb01 0402 	add.w	r4, r1, r2
 8005bcc:	d902      	bls.n	8005bd4 <memmove+0x10>
 8005bce:	4284      	cmp	r4, r0
 8005bd0:	4623      	mov	r3, r4
 8005bd2:	d807      	bhi.n	8005be4 <memmove+0x20>
 8005bd4:	1e43      	subs	r3, r0, #1
 8005bd6:	42a1      	cmp	r1, r4
 8005bd8:	d008      	beq.n	8005bec <memmove+0x28>
 8005bda:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005bde:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005be2:	e7f8      	b.n	8005bd6 <memmove+0x12>
 8005be4:	4402      	add	r2, r0
 8005be6:	4601      	mov	r1, r0
 8005be8:	428a      	cmp	r2, r1
 8005bea:	d100      	bne.n	8005bee <memmove+0x2a>
 8005bec:	bd10      	pop	{r4, pc}
 8005bee:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005bf2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005bf6:	e7f7      	b.n	8005be8 <memmove+0x24>

08005bf8 <strncmp>:
 8005bf8:	b510      	push	{r4, lr}
 8005bfa:	b16a      	cbz	r2, 8005c18 <strncmp+0x20>
 8005bfc:	3901      	subs	r1, #1
 8005bfe:	1884      	adds	r4, r0, r2
 8005c00:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005c04:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005c08:	429a      	cmp	r2, r3
 8005c0a:	d103      	bne.n	8005c14 <strncmp+0x1c>
 8005c0c:	42a0      	cmp	r0, r4
 8005c0e:	d001      	beq.n	8005c14 <strncmp+0x1c>
 8005c10:	2a00      	cmp	r2, #0
 8005c12:	d1f5      	bne.n	8005c00 <strncmp+0x8>
 8005c14:	1ad0      	subs	r0, r2, r3
 8005c16:	bd10      	pop	{r4, pc}
 8005c18:	4610      	mov	r0, r2
 8005c1a:	e7fc      	b.n	8005c16 <strncmp+0x1e>

08005c1c <_sbrk_r>:
 8005c1c:	b538      	push	{r3, r4, r5, lr}
 8005c1e:	4d06      	ldr	r5, [pc, #24]	@ (8005c38 <_sbrk_r+0x1c>)
 8005c20:	2300      	movs	r3, #0
 8005c22:	4604      	mov	r4, r0
 8005c24:	4608      	mov	r0, r1
 8005c26:	602b      	str	r3, [r5, #0]
 8005c28:	f7fb fcf2 	bl	8001610 <_sbrk>
 8005c2c:	1c43      	adds	r3, r0, #1
 8005c2e:	d102      	bne.n	8005c36 <_sbrk_r+0x1a>
 8005c30:	682b      	ldr	r3, [r5, #0]
 8005c32:	b103      	cbz	r3, 8005c36 <_sbrk_r+0x1a>
 8005c34:	6023      	str	r3, [r4, #0]
 8005c36:	bd38      	pop	{r3, r4, r5, pc}
 8005c38:	200003b0 	.word	0x200003b0

08005c3c <memcpy>:
 8005c3c:	440a      	add	r2, r1
 8005c3e:	4291      	cmp	r1, r2
 8005c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8005c44:	d100      	bne.n	8005c48 <memcpy+0xc>
 8005c46:	4770      	bx	lr
 8005c48:	b510      	push	{r4, lr}
 8005c4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005c4e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005c52:	4291      	cmp	r1, r2
 8005c54:	d1f9      	bne.n	8005c4a <memcpy+0xe>
 8005c56:	bd10      	pop	{r4, pc}

08005c58 <nan>:
 8005c58:	4901      	ldr	r1, [pc, #4]	@ (8005c60 <nan+0x8>)
 8005c5a:	2000      	movs	r0, #0
 8005c5c:	4770      	bx	lr
 8005c5e:	bf00      	nop
 8005c60:	7ff80000 	.word	0x7ff80000

08005c64 <__assert_func>:
 8005c64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005c66:	4614      	mov	r4, r2
 8005c68:	461a      	mov	r2, r3
 8005c6a:	4b09      	ldr	r3, [pc, #36]	@ (8005c90 <__assert_func+0x2c>)
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	4605      	mov	r5, r0
 8005c70:	68d8      	ldr	r0, [r3, #12]
 8005c72:	b954      	cbnz	r4, 8005c8a <__assert_func+0x26>
 8005c74:	4b07      	ldr	r3, [pc, #28]	@ (8005c94 <__assert_func+0x30>)
 8005c76:	461c      	mov	r4, r3
 8005c78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005c7c:	9100      	str	r1, [sp, #0]
 8005c7e:	462b      	mov	r3, r5
 8005c80:	4905      	ldr	r1, [pc, #20]	@ (8005c98 <__assert_func+0x34>)
 8005c82:	f000 fba7 	bl	80063d4 <fiprintf>
 8005c86:	f000 fbb7 	bl	80063f8 <abort>
 8005c8a:	4b04      	ldr	r3, [pc, #16]	@ (8005c9c <__assert_func+0x38>)
 8005c8c:	e7f4      	b.n	8005c78 <__assert_func+0x14>
 8005c8e:	bf00      	nop
 8005c90:	2000002c 	.word	0x2000002c
 8005c94:	08006d45 	.word	0x08006d45
 8005c98:	08006d17 	.word	0x08006d17
 8005c9c:	08006d0a 	.word	0x08006d0a

08005ca0 <_calloc_r>:
 8005ca0:	b570      	push	{r4, r5, r6, lr}
 8005ca2:	fba1 5402 	umull	r5, r4, r1, r2
 8005ca6:	b93c      	cbnz	r4, 8005cb8 <_calloc_r+0x18>
 8005ca8:	4629      	mov	r1, r5
 8005caa:	f7fe f9dd 	bl	8004068 <_malloc_r>
 8005cae:	4606      	mov	r6, r0
 8005cb0:	b928      	cbnz	r0, 8005cbe <_calloc_r+0x1e>
 8005cb2:	2600      	movs	r6, #0
 8005cb4:	4630      	mov	r0, r6
 8005cb6:	bd70      	pop	{r4, r5, r6, pc}
 8005cb8:	220c      	movs	r2, #12
 8005cba:	6002      	str	r2, [r0, #0]
 8005cbc:	e7f9      	b.n	8005cb2 <_calloc_r+0x12>
 8005cbe:	462a      	mov	r2, r5
 8005cc0:	4621      	mov	r1, r4
 8005cc2:	f7fd fa88 	bl	80031d6 <memset>
 8005cc6:	e7f5      	b.n	8005cb4 <_calloc_r+0x14>

08005cc8 <rshift>:
 8005cc8:	6903      	ldr	r3, [r0, #16]
 8005cca:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005cce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cd2:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005cd6:	f100 0414 	add.w	r4, r0, #20
 8005cda:	dd45      	ble.n	8005d68 <rshift+0xa0>
 8005cdc:	f011 011f 	ands.w	r1, r1, #31
 8005ce0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005ce4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005ce8:	d10c      	bne.n	8005d04 <rshift+0x3c>
 8005cea:	f100 0710 	add.w	r7, r0, #16
 8005cee:	4629      	mov	r1, r5
 8005cf0:	42b1      	cmp	r1, r6
 8005cf2:	d334      	bcc.n	8005d5e <rshift+0x96>
 8005cf4:	1a9b      	subs	r3, r3, r2
 8005cf6:	009b      	lsls	r3, r3, #2
 8005cf8:	1eea      	subs	r2, r5, #3
 8005cfa:	4296      	cmp	r6, r2
 8005cfc:	bf38      	it	cc
 8005cfe:	2300      	movcc	r3, #0
 8005d00:	4423      	add	r3, r4
 8005d02:	e015      	b.n	8005d30 <rshift+0x68>
 8005d04:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005d08:	f1c1 0820 	rsb	r8, r1, #32
 8005d0c:	40cf      	lsrs	r7, r1
 8005d0e:	f105 0e04 	add.w	lr, r5, #4
 8005d12:	46a1      	mov	r9, r4
 8005d14:	4576      	cmp	r6, lr
 8005d16:	46f4      	mov	ip, lr
 8005d18:	d815      	bhi.n	8005d46 <rshift+0x7e>
 8005d1a:	1a9a      	subs	r2, r3, r2
 8005d1c:	0092      	lsls	r2, r2, #2
 8005d1e:	3a04      	subs	r2, #4
 8005d20:	3501      	adds	r5, #1
 8005d22:	42ae      	cmp	r6, r5
 8005d24:	bf38      	it	cc
 8005d26:	2200      	movcc	r2, #0
 8005d28:	18a3      	adds	r3, r4, r2
 8005d2a:	50a7      	str	r7, [r4, r2]
 8005d2c:	b107      	cbz	r7, 8005d30 <rshift+0x68>
 8005d2e:	3304      	adds	r3, #4
 8005d30:	1b1a      	subs	r2, r3, r4
 8005d32:	42a3      	cmp	r3, r4
 8005d34:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005d38:	bf08      	it	eq
 8005d3a:	2300      	moveq	r3, #0
 8005d3c:	6102      	str	r2, [r0, #16]
 8005d3e:	bf08      	it	eq
 8005d40:	6143      	streq	r3, [r0, #20]
 8005d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d46:	f8dc c000 	ldr.w	ip, [ip]
 8005d4a:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d4e:	ea4c 0707 	orr.w	r7, ip, r7
 8005d52:	f849 7b04 	str.w	r7, [r9], #4
 8005d56:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005d5a:	40cf      	lsrs	r7, r1
 8005d5c:	e7da      	b.n	8005d14 <rshift+0x4c>
 8005d5e:	f851 cb04 	ldr.w	ip, [r1], #4
 8005d62:	f847 cf04 	str.w	ip, [r7, #4]!
 8005d66:	e7c3      	b.n	8005cf0 <rshift+0x28>
 8005d68:	4623      	mov	r3, r4
 8005d6a:	e7e1      	b.n	8005d30 <rshift+0x68>

08005d6c <__hexdig_fun>:
 8005d6c:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005d70:	2b09      	cmp	r3, #9
 8005d72:	d802      	bhi.n	8005d7a <__hexdig_fun+0xe>
 8005d74:	3820      	subs	r0, #32
 8005d76:	b2c0      	uxtb	r0, r0
 8005d78:	4770      	bx	lr
 8005d7a:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005d7e:	2b05      	cmp	r3, #5
 8005d80:	d801      	bhi.n	8005d86 <__hexdig_fun+0x1a>
 8005d82:	3847      	subs	r0, #71	@ 0x47
 8005d84:	e7f7      	b.n	8005d76 <__hexdig_fun+0xa>
 8005d86:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005d8a:	2b05      	cmp	r3, #5
 8005d8c:	d801      	bhi.n	8005d92 <__hexdig_fun+0x26>
 8005d8e:	3827      	subs	r0, #39	@ 0x27
 8005d90:	e7f1      	b.n	8005d76 <__hexdig_fun+0xa>
 8005d92:	2000      	movs	r0, #0
 8005d94:	4770      	bx	lr
	...

08005d98 <__gethex>:
 8005d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d9c:	b085      	sub	sp, #20
 8005d9e:	468a      	mov	sl, r1
 8005da0:	9302      	str	r3, [sp, #8]
 8005da2:	680b      	ldr	r3, [r1, #0]
 8005da4:	9001      	str	r0, [sp, #4]
 8005da6:	4690      	mov	r8, r2
 8005da8:	1c9c      	adds	r4, r3, #2
 8005daa:	46a1      	mov	r9, r4
 8005dac:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005db0:	2830      	cmp	r0, #48	@ 0x30
 8005db2:	d0fa      	beq.n	8005daa <__gethex+0x12>
 8005db4:	eba9 0303 	sub.w	r3, r9, r3
 8005db8:	f1a3 0b02 	sub.w	fp, r3, #2
 8005dbc:	f7ff ffd6 	bl	8005d6c <__hexdig_fun>
 8005dc0:	4605      	mov	r5, r0
 8005dc2:	2800      	cmp	r0, #0
 8005dc4:	d168      	bne.n	8005e98 <__gethex+0x100>
 8005dc6:	49a0      	ldr	r1, [pc, #640]	@ (8006048 <__gethex+0x2b0>)
 8005dc8:	2201      	movs	r2, #1
 8005dca:	4648      	mov	r0, r9
 8005dcc:	f7ff ff14 	bl	8005bf8 <strncmp>
 8005dd0:	4607      	mov	r7, r0
 8005dd2:	2800      	cmp	r0, #0
 8005dd4:	d167      	bne.n	8005ea6 <__gethex+0x10e>
 8005dd6:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005dda:	4626      	mov	r6, r4
 8005ddc:	f7ff ffc6 	bl	8005d6c <__hexdig_fun>
 8005de0:	2800      	cmp	r0, #0
 8005de2:	d062      	beq.n	8005eaa <__gethex+0x112>
 8005de4:	4623      	mov	r3, r4
 8005de6:	7818      	ldrb	r0, [r3, #0]
 8005de8:	2830      	cmp	r0, #48	@ 0x30
 8005dea:	4699      	mov	r9, r3
 8005dec:	f103 0301 	add.w	r3, r3, #1
 8005df0:	d0f9      	beq.n	8005de6 <__gethex+0x4e>
 8005df2:	f7ff ffbb 	bl	8005d6c <__hexdig_fun>
 8005df6:	fab0 f580 	clz	r5, r0
 8005dfa:	096d      	lsrs	r5, r5, #5
 8005dfc:	f04f 0b01 	mov.w	fp, #1
 8005e00:	464a      	mov	r2, r9
 8005e02:	4616      	mov	r6, r2
 8005e04:	3201      	adds	r2, #1
 8005e06:	7830      	ldrb	r0, [r6, #0]
 8005e08:	f7ff ffb0 	bl	8005d6c <__hexdig_fun>
 8005e0c:	2800      	cmp	r0, #0
 8005e0e:	d1f8      	bne.n	8005e02 <__gethex+0x6a>
 8005e10:	498d      	ldr	r1, [pc, #564]	@ (8006048 <__gethex+0x2b0>)
 8005e12:	2201      	movs	r2, #1
 8005e14:	4630      	mov	r0, r6
 8005e16:	f7ff feef 	bl	8005bf8 <strncmp>
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	d13f      	bne.n	8005e9e <__gethex+0x106>
 8005e1e:	b944      	cbnz	r4, 8005e32 <__gethex+0x9a>
 8005e20:	1c74      	adds	r4, r6, #1
 8005e22:	4622      	mov	r2, r4
 8005e24:	4616      	mov	r6, r2
 8005e26:	3201      	adds	r2, #1
 8005e28:	7830      	ldrb	r0, [r6, #0]
 8005e2a:	f7ff ff9f 	bl	8005d6c <__hexdig_fun>
 8005e2e:	2800      	cmp	r0, #0
 8005e30:	d1f8      	bne.n	8005e24 <__gethex+0x8c>
 8005e32:	1ba4      	subs	r4, r4, r6
 8005e34:	00a7      	lsls	r7, r4, #2
 8005e36:	7833      	ldrb	r3, [r6, #0]
 8005e38:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005e3c:	2b50      	cmp	r3, #80	@ 0x50
 8005e3e:	d13e      	bne.n	8005ebe <__gethex+0x126>
 8005e40:	7873      	ldrb	r3, [r6, #1]
 8005e42:	2b2b      	cmp	r3, #43	@ 0x2b
 8005e44:	d033      	beq.n	8005eae <__gethex+0x116>
 8005e46:	2b2d      	cmp	r3, #45	@ 0x2d
 8005e48:	d034      	beq.n	8005eb4 <__gethex+0x11c>
 8005e4a:	1c71      	adds	r1, r6, #1
 8005e4c:	2400      	movs	r4, #0
 8005e4e:	7808      	ldrb	r0, [r1, #0]
 8005e50:	f7ff ff8c 	bl	8005d6c <__hexdig_fun>
 8005e54:	1e43      	subs	r3, r0, #1
 8005e56:	b2db      	uxtb	r3, r3
 8005e58:	2b18      	cmp	r3, #24
 8005e5a:	d830      	bhi.n	8005ebe <__gethex+0x126>
 8005e5c:	f1a0 0210 	sub.w	r2, r0, #16
 8005e60:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005e64:	f7ff ff82 	bl	8005d6c <__hexdig_fun>
 8005e68:	f100 3cff 	add.w	ip, r0, #4294967295
 8005e6c:	fa5f fc8c 	uxtb.w	ip, ip
 8005e70:	f1bc 0f18 	cmp.w	ip, #24
 8005e74:	f04f 030a 	mov.w	r3, #10
 8005e78:	d91e      	bls.n	8005eb8 <__gethex+0x120>
 8005e7a:	b104      	cbz	r4, 8005e7e <__gethex+0xe6>
 8005e7c:	4252      	negs	r2, r2
 8005e7e:	4417      	add	r7, r2
 8005e80:	f8ca 1000 	str.w	r1, [sl]
 8005e84:	b1ed      	cbz	r5, 8005ec2 <__gethex+0x12a>
 8005e86:	f1bb 0f00 	cmp.w	fp, #0
 8005e8a:	bf0c      	ite	eq
 8005e8c:	2506      	moveq	r5, #6
 8005e8e:	2500      	movne	r5, #0
 8005e90:	4628      	mov	r0, r5
 8005e92:	b005      	add	sp, #20
 8005e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e98:	2500      	movs	r5, #0
 8005e9a:	462c      	mov	r4, r5
 8005e9c:	e7b0      	b.n	8005e00 <__gethex+0x68>
 8005e9e:	2c00      	cmp	r4, #0
 8005ea0:	d1c7      	bne.n	8005e32 <__gethex+0x9a>
 8005ea2:	4627      	mov	r7, r4
 8005ea4:	e7c7      	b.n	8005e36 <__gethex+0x9e>
 8005ea6:	464e      	mov	r6, r9
 8005ea8:	462f      	mov	r7, r5
 8005eaa:	2501      	movs	r5, #1
 8005eac:	e7c3      	b.n	8005e36 <__gethex+0x9e>
 8005eae:	2400      	movs	r4, #0
 8005eb0:	1cb1      	adds	r1, r6, #2
 8005eb2:	e7cc      	b.n	8005e4e <__gethex+0xb6>
 8005eb4:	2401      	movs	r4, #1
 8005eb6:	e7fb      	b.n	8005eb0 <__gethex+0x118>
 8005eb8:	fb03 0002 	mla	r0, r3, r2, r0
 8005ebc:	e7ce      	b.n	8005e5c <__gethex+0xc4>
 8005ebe:	4631      	mov	r1, r6
 8005ec0:	e7de      	b.n	8005e80 <__gethex+0xe8>
 8005ec2:	eba6 0309 	sub.w	r3, r6, r9
 8005ec6:	3b01      	subs	r3, #1
 8005ec8:	4629      	mov	r1, r5
 8005eca:	2b07      	cmp	r3, #7
 8005ecc:	dc0a      	bgt.n	8005ee4 <__gethex+0x14c>
 8005ece:	9801      	ldr	r0, [sp, #4]
 8005ed0:	f7fe f956 	bl	8004180 <_Balloc>
 8005ed4:	4604      	mov	r4, r0
 8005ed6:	b940      	cbnz	r0, 8005eea <__gethex+0x152>
 8005ed8:	4b5c      	ldr	r3, [pc, #368]	@ (800604c <__gethex+0x2b4>)
 8005eda:	4602      	mov	r2, r0
 8005edc:	21e4      	movs	r1, #228	@ 0xe4
 8005ede:	485c      	ldr	r0, [pc, #368]	@ (8006050 <__gethex+0x2b8>)
 8005ee0:	f7ff fec0 	bl	8005c64 <__assert_func>
 8005ee4:	3101      	adds	r1, #1
 8005ee6:	105b      	asrs	r3, r3, #1
 8005ee8:	e7ef      	b.n	8005eca <__gethex+0x132>
 8005eea:	f100 0a14 	add.w	sl, r0, #20
 8005eee:	2300      	movs	r3, #0
 8005ef0:	4655      	mov	r5, sl
 8005ef2:	469b      	mov	fp, r3
 8005ef4:	45b1      	cmp	r9, r6
 8005ef6:	d337      	bcc.n	8005f68 <__gethex+0x1d0>
 8005ef8:	f845 bb04 	str.w	fp, [r5], #4
 8005efc:	eba5 050a 	sub.w	r5, r5, sl
 8005f00:	10ad      	asrs	r5, r5, #2
 8005f02:	6125      	str	r5, [r4, #16]
 8005f04:	4658      	mov	r0, fp
 8005f06:	f7fe fa2d 	bl	8004364 <__hi0bits>
 8005f0a:	016d      	lsls	r5, r5, #5
 8005f0c:	f8d8 6000 	ldr.w	r6, [r8]
 8005f10:	1a2d      	subs	r5, r5, r0
 8005f12:	42b5      	cmp	r5, r6
 8005f14:	dd54      	ble.n	8005fc0 <__gethex+0x228>
 8005f16:	1bad      	subs	r5, r5, r6
 8005f18:	4629      	mov	r1, r5
 8005f1a:	4620      	mov	r0, r4
 8005f1c:	f7fe fdb7 	bl	8004a8e <__any_on>
 8005f20:	4681      	mov	r9, r0
 8005f22:	b178      	cbz	r0, 8005f44 <__gethex+0x1ac>
 8005f24:	1e6b      	subs	r3, r5, #1
 8005f26:	1159      	asrs	r1, r3, #5
 8005f28:	f003 021f 	and.w	r2, r3, #31
 8005f2c:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005f30:	f04f 0901 	mov.w	r9, #1
 8005f34:	fa09 f202 	lsl.w	r2, r9, r2
 8005f38:	420a      	tst	r2, r1
 8005f3a:	d003      	beq.n	8005f44 <__gethex+0x1ac>
 8005f3c:	454b      	cmp	r3, r9
 8005f3e:	dc36      	bgt.n	8005fae <__gethex+0x216>
 8005f40:	f04f 0902 	mov.w	r9, #2
 8005f44:	4629      	mov	r1, r5
 8005f46:	4620      	mov	r0, r4
 8005f48:	f7ff febe 	bl	8005cc8 <rshift>
 8005f4c:	442f      	add	r7, r5
 8005f4e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005f52:	42bb      	cmp	r3, r7
 8005f54:	da42      	bge.n	8005fdc <__gethex+0x244>
 8005f56:	9801      	ldr	r0, [sp, #4]
 8005f58:	4621      	mov	r1, r4
 8005f5a:	f7fe f951 	bl	8004200 <_Bfree>
 8005f5e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005f60:	2300      	movs	r3, #0
 8005f62:	6013      	str	r3, [r2, #0]
 8005f64:	25a3      	movs	r5, #163	@ 0xa3
 8005f66:	e793      	b.n	8005e90 <__gethex+0xf8>
 8005f68:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005f6c:	2a2e      	cmp	r2, #46	@ 0x2e
 8005f6e:	d012      	beq.n	8005f96 <__gethex+0x1fe>
 8005f70:	2b20      	cmp	r3, #32
 8005f72:	d104      	bne.n	8005f7e <__gethex+0x1e6>
 8005f74:	f845 bb04 	str.w	fp, [r5], #4
 8005f78:	f04f 0b00 	mov.w	fp, #0
 8005f7c:	465b      	mov	r3, fp
 8005f7e:	7830      	ldrb	r0, [r6, #0]
 8005f80:	9303      	str	r3, [sp, #12]
 8005f82:	f7ff fef3 	bl	8005d6c <__hexdig_fun>
 8005f86:	9b03      	ldr	r3, [sp, #12]
 8005f88:	f000 000f 	and.w	r0, r0, #15
 8005f8c:	4098      	lsls	r0, r3
 8005f8e:	ea4b 0b00 	orr.w	fp, fp, r0
 8005f92:	3304      	adds	r3, #4
 8005f94:	e7ae      	b.n	8005ef4 <__gethex+0x15c>
 8005f96:	45b1      	cmp	r9, r6
 8005f98:	d8ea      	bhi.n	8005f70 <__gethex+0x1d8>
 8005f9a:	492b      	ldr	r1, [pc, #172]	@ (8006048 <__gethex+0x2b0>)
 8005f9c:	9303      	str	r3, [sp, #12]
 8005f9e:	2201      	movs	r2, #1
 8005fa0:	4630      	mov	r0, r6
 8005fa2:	f7ff fe29 	bl	8005bf8 <strncmp>
 8005fa6:	9b03      	ldr	r3, [sp, #12]
 8005fa8:	2800      	cmp	r0, #0
 8005faa:	d1e1      	bne.n	8005f70 <__gethex+0x1d8>
 8005fac:	e7a2      	b.n	8005ef4 <__gethex+0x15c>
 8005fae:	1ea9      	subs	r1, r5, #2
 8005fb0:	4620      	mov	r0, r4
 8005fb2:	f7fe fd6c 	bl	8004a8e <__any_on>
 8005fb6:	2800      	cmp	r0, #0
 8005fb8:	d0c2      	beq.n	8005f40 <__gethex+0x1a8>
 8005fba:	f04f 0903 	mov.w	r9, #3
 8005fbe:	e7c1      	b.n	8005f44 <__gethex+0x1ac>
 8005fc0:	da09      	bge.n	8005fd6 <__gethex+0x23e>
 8005fc2:	1b75      	subs	r5, r6, r5
 8005fc4:	4621      	mov	r1, r4
 8005fc6:	9801      	ldr	r0, [sp, #4]
 8005fc8:	462a      	mov	r2, r5
 8005fca:	f7fe fb31 	bl	8004630 <__lshift>
 8005fce:	1b7f      	subs	r7, r7, r5
 8005fd0:	4604      	mov	r4, r0
 8005fd2:	f100 0a14 	add.w	sl, r0, #20
 8005fd6:	f04f 0900 	mov.w	r9, #0
 8005fda:	e7b8      	b.n	8005f4e <__gethex+0x1b6>
 8005fdc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005fe0:	42bd      	cmp	r5, r7
 8005fe2:	dd6f      	ble.n	80060c4 <__gethex+0x32c>
 8005fe4:	1bed      	subs	r5, r5, r7
 8005fe6:	42ae      	cmp	r6, r5
 8005fe8:	dc34      	bgt.n	8006054 <__gethex+0x2bc>
 8005fea:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005fee:	2b02      	cmp	r3, #2
 8005ff0:	d022      	beq.n	8006038 <__gethex+0x2a0>
 8005ff2:	2b03      	cmp	r3, #3
 8005ff4:	d024      	beq.n	8006040 <__gethex+0x2a8>
 8005ff6:	2b01      	cmp	r3, #1
 8005ff8:	d115      	bne.n	8006026 <__gethex+0x28e>
 8005ffa:	42ae      	cmp	r6, r5
 8005ffc:	d113      	bne.n	8006026 <__gethex+0x28e>
 8005ffe:	2e01      	cmp	r6, #1
 8006000:	d10b      	bne.n	800601a <__gethex+0x282>
 8006002:	9a02      	ldr	r2, [sp, #8]
 8006004:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006008:	6013      	str	r3, [r2, #0]
 800600a:	2301      	movs	r3, #1
 800600c:	6123      	str	r3, [r4, #16]
 800600e:	f8ca 3000 	str.w	r3, [sl]
 8006012:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006014:	2562      	movs	r5, #98	@ 0x62
 8006016:	601c      	str	r4, [r3, #0]
 8006018:	e73a      	b.n	8005e90 <__gethex+0xf8>
 800601a:	1e71      	subs	r1, r6, #1
 800601c:	4620      	mov	r0, r4
 800601e:	f7fe fd36 	bl	8004a8e <__any_on>
 8006022:	2800      	cmp	r0, #0
 8006024:	d1ed      	bne.n	8006002 <__gethex+0x26a>
 8006026:	9801      	ldr	r0, [sp, #4]
 8006028:	4621      	mov	r1, r4
 800602a:	f7fe f8e9 	bl	8004200 <_Bfree>
 800602e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006030:	2300      	movs	r3, #0
 8006032:	6013      	str	r3, [r2, #0]
 8006034:	2550      	movs	r5, #80	@ 0x50
 8006036:	e72b      	b.n	8005e90 <__gethex+0xf8>
 8006038:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800603a:	2b00      	cmp	r3, #0
 800603c:	d1f3      	bne.n	8006026 <__gethex+0x28e>
 800603e:	e7e0      	b.n	8006002 <__gethex+0x26a>
 8006040:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006042:	2b00      	cmp	r3, #0
 8006044:	d1dd      	bne.n	8006002 <__gethex+0x26a>
 8006046:	e7ee      	b.n	8006026 <__gethex+0x28e>
 8006048:	08006b98 	.word	0x08006b98
 800604c:	08006a2c 	.word	0x08006a2c
 8006050:	08006d46 	.word	0x08006d46
 8006054:	1e6f      	subs	r7, r5, #1
 8006056:	f1b9 0f00 	cmp.w	r9, #0
 800605a:	d130      	bne.n	80060be <__gethex+0x326>
 800605c:	b127      	cbz	r7, 8006068 <__gethex+0x2d0>
 800605e:	4639      	mov	r1, r7
 8006060:	4620      	mov	r0, r4
 8006062:	f7fe fd14 	bl	8004a8e <__any_on>
 8006066:	4681      	mov	r9, r0
 8006068:	117a      	asrs	r2, r7, #5
 800606a:	2301      	movs	r3, #1
 800606c:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8006070:	f007 071f 	and.w	r7, r7, #31
 8006074:	40bb      	lsls	r3, r7
 8006076:	4213      	tst	r3, r2
 8006078:	4629      	mov	r1, r5
 800607a:	4620      	mov	r0, r4
 800607c:	bf18      	it	ne
 800607e:	f049 0902 	orrne.w	r9, r9, #2
 8006082:	f7ff fe21 	bl	8005cc8 <rshift>
 8006086:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800608a:	1b76      	subs	r6, r6, r5
 800608c:	2502      	movs	r5, #2
 800608e:	f1b9 0f00 	cmp.w	r9, #0
 8006092:	d047      	beq.n	8006124 <__gethex+0x38c>
 8006094:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006098:	2b02      	cmp	r3, #2
 800609a:	d015      	beq.n	80060c8 <__gethex+0x330>
 800609c:	2b03      	cmp	r3, #3
 800609e:	d017      	beq.n	80060d0 <__gethex+0x338>
 80060a0:	2b01      	cmp	r3, #1
 80060a2:	d109      	bne.n	80060b8 <__gethex+0x320>
 80060a4:	f019 0f02 	tst.w	r9, #2
 80060a8:	d006      	beq.n	80060b8 <__gethex+0x320>
 80060aa:	f8da 3000 	ldr.w	r3, [sl]
 80060ae:	ea49 0903 	orr.w	r9, r9, r3
 80060b2:	f019 0f01 	tst.w	r9, #1
 80060b6:	d10e      	bne.n	80060d6 <__gethex+0x33e>
 80060b8:	f045 0510 	orr.w	r5, r5, #16
 80060bc:	e032      	b.n	8006124 <__gethex+0x38c>
 80060be:	f04f 0901 	mov.w	r9, #1
 80060c2:	e7d1      	b.n	8006068 <__gethex+0x2d0>
 80060c4:	2501      	movs	r5, #1
 80060c6:	e7e2      	b.n	800608e <__gethex+0x2f6>
 80060c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80060ca:	f1c3 0301 	rsb	r3, r3, #1
 80060ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80060d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	d0f0      	beq.n	80060b8 <__gethex+0x320>
 80060d6:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80060da:	f104 0314 	add.w	r3, r4, #20
 80060de:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80060e2:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80060e6:	f04f 0c00 	mov.w	ip, #0
 80060ea:	4618      	mov	r0, r3
 80060ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80060f0:	f1b2 3fff 	cmp.w	r2, #4294967295
 80060f4:	d01b      	beq.n	800612e <__gethex+0x396>
 80060f6:	3201      	adds	r2, #1
 80060f8:	6002      	str	r2, [r0, #0]
 80060fa:	2d02      	cmp	r5, #2
 80060fc:	f104 0314 	add.w	r3, r4, #20
 8006100:	d13c      	bne.n	800617c <__gethex+0x3e4>
 8006102:	f8d8 2000 	ldr.w	r2, [r8]
 8006106:	3a01      	subs	r2, #1
 8006108:	42b2      	cmp	r2, r6
 800610a:	d109      	bne.n	8006120 <__gethex+0x388>
 800610c:	1171      	asrs	r1, r6, #5
 800610e:	2201      	movs	r2, #1
 8006110:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006114:	f006 061f 	and.w	r6, r6, #31
 8006118:	fa02 f606 	lsl.w	r6, r2, r6
 800611c:	421e      	tst	r6, r3
 800611e:	d13a      	bne.n	8006196 <__gethex+0x3fe>
 8006120:	f045 0520 	orr.w	r5, r5, #32
 8006124:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006126:	601c      	str	r4, [r3, #0]
 8006128:	9b02      	ldr	r3, [sp, #8]
 800612a:	601f      	str	r7, [r3, #0]
 800612c:	e6b0      	b.n	8005e90 <__gethex+0xf8>
 800612e:	4299      	cmp	r1, r3
 8006130:	f843 cc04 	str.w	ip, [r3, #-4]
 8006134:	d8d9      	bhi.n	80060ea <__gethex+0x352>
 8006136:	68a3      	ldr	r3, [r4, #8]
 8006138:	459b      	cmp	fp, r3
 800613a:	db17      	blt.n	800616c <__gethex+0x3d4>
 800613c:	6861      	ldr	r1, [r4, #4]
 800613e:	9801      	ldr	r0, [sp, #4]
 8006140:	3101      	adds	r1, #1
 8006142:	f7fe f81d 	bl	8004180 <_Balloc>
 8006146:	4681      	mov	r9, r0
 8006148:	b918      	cbnz	r0, 8006152 <__gethex+0x3ba>
 800614a:	4b1a      	ldr	r3, [pc, #104]	@ (80061b4 <__gethex+0x41c>)
 800614c:	4602      	mov	r2, r0
 800614e:	2184      	movs	r1, #132	@ 0x84
 8006150:	e6c5      	b.n	8005ede <__gethex+0x146>
 8006152:	6922      	ldr	r2, [r4, #16]
 8006154:	3202      	adds	r2, #2
 8006156:	f104 010c 	add.w	r1, r4, #12
 800615a:	0092      	lsls	r2, r2, #2
 800615c:	300c      	adds	r0, #12
 800615e:	f7ff fd6d 	bl	8005c3c <memcpy>
 8006162:	4621      	mov	r1, r4
 8006164:	9801      	ldr	r0, [sp, #4]
 8006166:	f7fe f84b 	bl	8004200 <_Bfree>
 800616a:	464c      	mov	r4, r9
 800616c:	6923      	ldr	r3, [r4, #16]
 800616e:	1c5a      	adds	r2, r3, #1
 8006170:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006174:	6122      	str	r2, [r4, #16]
 8006176:	2201      	movs	r2, #1
 8006178:	615a      	str	r2, [r3, #20]
 800617a:	e7be      	b.n	80060fa <__gethex+0x362>
 800617c:	6922      	ldr	r2, [r4, #16]
 800617e:	455a      	cmp	r2, fp
 8006180:	dd0b      	ble.n	800619a <__gethex+0x402>
 8006182:	2101      	movs	r1, #1
 8006184:	4620      	mov	r0, r4
 8006186:	f7ff fd9f 	bl	8005cc8 <rshift>
 800618a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800618e:	3701      	adds	r7, #1
 8006190:	42bb      	cmp	r3, r7
 8006192:	f6ff aee0 	blt.w	8005f56 <__gethex+0x1be>
 8006196:	2501      	movs	r5, #1
 8006198:	e7c2      	b.n	8006120 <__gethex+0x388>
 800619a:	f016 061f 	ands.w	r6, r6, #31
 800619e:	d0fa      	beq.n	8006196 <__gethex+0x3fe>
 80061a0:	4453      	add	r3, sl
 80061a2:	f1c6 0620 	rsb	r6, r6, #32
 80061a6:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80061aa:	f7fe f8db 	bl	8004364 <__hi0bits>
 80061ae:	42b0      	cmp	r0, r6
 80061b0:	dbe7      	blt.n	8006182 <__gethex+0x3ea>
 80061b2:	e7f0      	b.n	8006196 <__gethex+0x3fe>
 80061b4:	08006a2c 	.word	0x08006a2c

080061b8 <L_shift>:
 80061b8:	f1c2 0208 	rsb	r2, r2, #8
 80061bc:	0092      	lsls	r2, r2, #2
 80061be:	b570      	push	{r4, r5, r6, lr}
 80061c0:	f1c2 0620 	rsb	r6, r2, #32
 80061c4:	6843      	ldr	r3, [r0, #4]
 80061c6:	6804      	ldr	r4, [r0, #0]
 80061c8:	fa03 f506 	lsl.w	r5, r3, r6
 80061cc:	432c      	orrs	r4, r5
 80061ce:	40d3      	lsrs	r3, r2
 80061d0:	6004      	str	r4, [r0, #0]
 80061d2:	f840 3f04 	str.w	r3, [r0, #4]!
 80061d6:	4288      	cmp	r0, r1
 80061d8:	d3f4      	bcc.n	80061c4 <L_shift+0xc>
 80061da:	bd70      	pop	{r4, r5, r6, pc}

080061dc <__match>:
 80061dc:	b530      	push	{r4, r5, lr}
 80061de:	6803      	ldr	r3, [r0, #0]
 80061e0:	3301      	adds	r3, #1
 80061e2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061e6:	b914      	cbnz	r4, 80061ee <__match+0x12>
 80061e8:	6003      	str	r3, [r0, #0]
 80061ea:	2001      	movs	r0, #1
 80061ec:	bd30      	pop	{r4, r5, pc}
 80061ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061f2:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80061f6:	2d19      	cmp	r5, #25
 80061f8:	bf98      	it	ls
 80061fa:	3220      	addls	r2, #32
 80061fc:	42a2      	cmp	r2, r4
 80061fe:	d0f0      	beq.n	80061e2 <__match+0x6>
 8006200:	2000      	movs	r0, #0
 8006202:	e7f3      	b.n	80061ec <__match+0x10>

08006204 <__hexnan>:
 8006204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006208:	680b      	ldr	r3, [r1, #0]
 800620a:	6801      	ldr	r1, [r0, #0]
 800620c:	115e      	asrs	r6, r3, #5
 800620e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006212:	f013 031f 	ands.w	r3, r3, #31
 8006216:	b087      	sub	sp, #28
 8006218:	bf18      	it	ne
 800621a:	3604      	addne	r6, #4
 800621c:	2500      	movs	r5, #0
 800621e:	1f37      	subs	r7, r6, #4
 8006220:	4682      	mov	sl, r0
 8006222:	4690      	mov	r8, r2
 8006224:	9301      	str	r3, [sp, #4]
 8006226:	f846 5c04 	str.w	r5, [r6, #-4]
 800622a:	46b9      	mov	r9, r7
 800622c:	463c      	mov	r4, r7
 800622e:	9502      	str	r5, [sp, #8]
 8006230:	46ab      	mov	fp, r5
 8006232:	784a      	ldrb	r2, [r1, #1]
 8006234:	1c4b      	adds	r3, r1, #1
 8006236:	9303      	str	r3, [sp, #12]
 8006238:	b342      	cbz	r2, 800628c <__hexnan+0x88>
 800623a:	4610      	mov	r0, r2
 800623c:	9105      	str	r1, [sp, #20]
 800623e:	9204      	str	r2, [sp, #16]
 8006240:	f7ff fd94 	bl	8005d6c <__hexdig_fun>
 8006244:	2800      	cmp	r0, #0
 8006246:	d151      	bne.n	80062ec <__hexnan+0xe8>
 8006248:	9a04      	ldr	r2, [sp, #16]
 800624a:	9905      	ldr	r1, [sp, #20]
 800624c:	2a20      	cmp	r2, #32
 800624e:	d818      	bhi.n	8006282 <__hexnan+0x7e>
 8006250:	9b02      	ldr	r3, [sp, #8]
 8006252:	459b      	cmp	fp, r3
 8006254:	dd13      	ble.n	800627e <__hexnan+0x7a>
 8006256:	454c      	cmp	r4, r9
 8006258:	d206      	bcs.n	8006268 <__hexnan+0x64>
 800625a:	2d07      	cmp	r5, #7
 800625c:	dc04      	bgt.n	8006268 <__hexnan+0x64>
 800625e:	462a      	mov	r2, r5
 8006260:	4649      	mov	r1, r9
 8006262:	4620      	mov	r0, r4
 8006264:	f7ff ffa8 	bl	80061b8 <L_shift>
 8006268:	4544      	cmp	r4, r8
 800626a:	d952      	bls.n	8006312 <__hexnan+0x10e>
 800626c:	2300      	movs	r3, #0
 800626e:	f1a4 0904 	sub.w	r9, r4, #4
 8006272:	f844 3c04 	str.w	r3, [r4, #-4]
 8006276:	f8cd b008 	str.w	fp, [sp, #8]
 800627a:	464c      	mov	r4, r9
 800627c:	461d      	mov	r5, r3
 800627e:	9903      	ldr	r1, [sp, #12]
 8006280:	e7d7      	b.n	8006232 <__hexnan+0x2e>
 8006282:	2a29      	cmp	r2, #41	@ 0x29
 8006284:	d157      	bne.n	8006336 <__hexnan+0x132>
 8006286:	3102      	adds	r1, #2
 8006288:	f8ca 1000 	str.w	r1, [sl]
 800628c:	f1bb 0f00 	cmp.w	fp, #0
 8006290:	d051      	beq.n	8006336 <__hexnan+0x132>
 8006292:	454c      	cmp	r4, r9
 8006294:	d206      	bcs.n	80062a4 <__hexnan+0xa0>
 8006296:	2d07      	cmp	r5, #7
 8006298:	dc04      	bgt.n	80062a4 <__hexnan+0xa0>
 800629a:	462a      	mov	r2, r5
 800629c:	4649      	mov	r1, r9
 800629e:	4620      	mov	r0, r4
 80062a0:	f7ff ff8a 	bl	80061b8 <L_shift>
 80062a4:	4544      	cmp	r4, r8
 80062a6:	d936      	bls.n	8006316 <__hexnan+0x112>
 80062a8:	f1a8 0204 	sub.w	r2, r8, #4
 80062ac:	4623      	mov	r3, r4
 80062ae:	f853 1b04 	ldr.w	r1, [r3], #4
 80062b2:	f842 1f04 	str.w	r1, [r2, #4]!
 80062b6:	429f      	cmp	r7, r3
 80062b8:	d2f9      	bcs.n	80062ae <__hexnan+0xaa>
 80062ba:	1b3b      	subs	r3, r7, r4
 80062bc:	f023 0303 	bic.w	r3, r3, #3
 80062c0:	3304      	adds	r3, #4
 80062c2:	3401      	adds	r4, #1
 80062c4:	3e03      	subs	r6, #3
 80062c6:	42b4      	cmp	r4, r6
 80062c8:	bf88      	it	hi
 80062ca:	2304      	movhi	r3, #4
 80062cc:	4443      	add	r3, r8
 80062ce:	2200      	movs	r2, #0
 80062d0:	f843 2b04 	str.w	r2, [r3], #4
 80062d4:	429f      	cmp	r7, r3
 80062d6:	d2fb      	bcs.n	80062d0 <__hexnan+0xcc>
 80062d8:	683b      	ldr	r3, [r7, #0]
 80062da:	b91b      	cbnz	r3, 80062e4 <__hexnan+0xe0>
 80062dc:	4547      	cmp	r7, r8
 80062de:	d128      	bne.n	8006332 <__hexnan+0x12e>
 80062e0:	2301      	movs	r3, #1
 80062e2:	603b      	str	r3, [r7, #0]
 80062e4:	2005      	movs	r0, #5
 80062e6:	b007      	add	sp, #28
 80062e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ec:	3501      	adds	r5, #1
 80062ee:	2d08      	cmp	r5, #8
 80062f0:	f10b 0b01 	add.w	fp, fp, #1
 80062f4:	dd06      	ble.n	8006304 <__hexnan+0x100>
 80062f6:	4544      	cmp	r4, r8
 80062f8:	d9c1      	bls.n	800627e <__hexnan+0x7a>
 80062fa:	2300      	movs	r3, #0
 80062fc:	f844 3c04 	str.w	r3, [r4, #-4]
 8006300:	2501      	movs	r5, #1
 8006302:	3c04      	subs	r4, #4
 8006304:	6822      	ldr	r2, [r4, #0]
 8006306:	f000 000f 	and.w	r0, r0, #15
 800630a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800630e:	6020      	str	r0, [r4, #0]
 8006310:	e7b5      	b.n	800627e <__hexnan+0x7a>
 8006312:	2508      	movs	r5, #8
 8006314:	e7b3      	b.n	800627e <__hexnan+0x7a>
 8006316:	9b01      	ldr	r3, [sp, #4]
 8006318:	2b00      	cmp	r3, #0
 800631a:	d0dd      	beq.n	80062d8 <__hexnan+0xd4>
 800631c:	f1c3 0320 	rsb	r3, r3, #32
 8006320:	f04f 32ff 	mov.w	r2, #4294967295
 8006324:	40da      	lsrs	r2, r3
 8006326:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800632a:	4013      	ands	r3, r2
 800632c:	f846 3c04 	str.w	r3, [r6, #-4]
 8006330:	e7d2      	b.n	80062d8 <__hexnan+0xd4>
 8006332:	3f04      	subs	r7, #4
 8006334:	e7d0      	b.n	80062d8 <__hexnan+0xd4>
 8006336:	2004      	movs	r0, #4
 8006338:	e7d5      	b.n	80062e6 <__hexnan+0xe2>

0800633a <__ascii_mbtowc>:
 800633a:	b082      	sub	sp, #8
 800633c:	b901      	cbnz	r1, 8006340 <__ascii_mbtowc+0x6>
 800633e:	a901      	add	r1, sp, #4
 8006340:	b142      	cbz	r2, 8006354 <__ascii_mbtowc+0x1a>
 8006342:	b14b      	cbz	r3, 8006358 <__ascii_mbtowc+0x1e>
 8006344:	7813      	ldrb	r3, [r2, #0]
 8006346:	600b      	str	r3, [r1, #0]
 8006348:	7812      	ldrb	r2, [r2, #0]
 800634a:	1e10      	subs	r0, r2, #0
 800634c:	bf18      	it	ne
 800634e:	2001      	movne	r0, #1
 8006350:	b002      	add	sp, #8
 8006352:	4770      	bx	lr
 8006354:	4610      	mov	r0, r2
 8006356:	e7fb      	b.n	8006350 <__ascii_mbtowc+0x16>
 8006358:	f06f 0001 	mvn.w	r0, #1
 800635c:	e7f8      	b.n	8006350 <__ascii_mbtowc+0x16>

0800635e <_realloc_r>:
 800635e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006362:	4680      	mov	r8, r0
 8006364:	4615      	mov	r5, r2
 8006366:	460c      	mov	r4, r1
 8006368:	b921      	cbnz	r1, 8006374 <_realloc_r+0x16>
 800636a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800636e:	4611      	mov	r1, r2
 8006370:	f7fd be7a 	b.w	8004068 <_malloc_r>
 8006374:	b92a      	cbnz	r2, 8006382 <_realloc_r+0x24>
 8006376:	f7fd fe03 	bl	8003f80 <_free_r>
 800637a:	2400      	movs	r4, #0
 800637c:	4620      	mov	r0, r4
 800637e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006382:	f000 f840 	bl	8006406 <_malloc_usable_size_r>
 8006386:	4285      	cmp	r5, r0
 8006388:	4606      	mov	r6, r0
 800638a:	d802      	bhi.n	8006392 <_realloc_r+0x34>
 800638c:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8006390:	d8f4      	bhi.n	800637c <_realloc_r+0x1e>
 8006392:	4629      	mov	r1, r5
 8006394:	4640      	mov	r0, r8
 8006396:	f7fd fe67 	bl	8004068 <_malloc_r>
 800639a:	4607      	mov	r7, r0
 800639c:	2800      	cmp	r0, #0
 800639e:	d0ec      	beq.n	800637a <_realloc_r+0x1c>
 80063a0:	42b5      	cmp	r5, r6
 80063a2:	462a      	mov	r2, r5
 80063a4:	4621      	mov	r1, r4
 80063a6:	bf28      	it	cs
 80063a8:	4632      	movcs	r2, r6
 80063aa:	f7ff fc47 	bl	8005c3c <memcpy>
 80063ae:	4621      	mov	r1, r4
 80063b0:	4640      	mov	r0, r8
 80063b2:	f7fd fde5 	bl	8003f80 <_free_r>
 80063b6:	463c      	mov	r4, r7
 80063b8:	e7e0      	b.n	800637c <_realloc_r+0x1e>

080063ba <__ascii_wctomb>:
 80063ba:	4603      	mov	r3, r0
 80063bc:	4608      	mov	r0, r1
 80063be:	b141      	cbz	r1, 80063d2 <__ascii_wctomb+0x18>
 80063c0:	2aff      	cmp	r2, #255	@ 0xff
 80063c2:	d904      	bls.n	80063ce <__ascii_wctomb+0x14>
 80063c4:	228a      	movs	r2, #138	@ 0x8a
 80063c6:	601a      	str	r2, [r3, #0]
 80063c8:	f04f 30ff 	mov.w	r0, #4294967295
 80063cc:	4770      	bx	lr
 80063ce:	700a      	strb	r2, [r1, #0]
 80063d0:	2001      	movs	r0, #1
 80063d2:	4770      	bx	lr

080063d4 <fiprintf>:
 80063d4:	b40e      	push	{r1, r2, r3}
 80063d6:	b503      	push	{r0, r1, lr}
 80063d8:	4601      	mov	r1, r0
 80063da:	ab03      	add	r3, sp, #12
 80063dc:	4805      	ldr	r0, [pc, #20]	@ (80063f4 <fiprintf+0x20>)
 80063de:	f853 2b04 	ldr.w	r2, [r3], #4
 80063e2:	6800      	ldr	r0, [r0, #0]
 80063e4:	9301      	str	r3, [sp, #4]
 80063e6:	f000 f83d 	bl	8006464 <_vfiprintf_r>
 80063ea:	b002      	add	sp, #8
 80063ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80063f0:	b003      	add	sp, #12
 80063f2:	4770      	bx	lr
 80063f4:	2000002c 	.word	0x2000002c

080063f8 <abort>:
 80063f8:	b508      	push	{r3, lr}
 80063fa:	2006      	movs	r0, #6
 80063fc:	f000 fa06 	bl	800680c <raise>
 8006400:	2001      	movs	r0, #1
 8006402:	f7fb f890 	bl	8001526 <_exit>

08006406 <_malloc_usable_size_r>:
 8006406:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800640a:	1f18      	subs	r0, r3, #4
 800640c:	2b00      	cmp	r3, #0
 800640e:	bfbc      	itt	lt
 8006410:	580b      	ldrlt	r3, [r1, r0]
 8006412:	18c0      	addlt	r0, r0, r3
 8006414:	4770      	bx	lr

08006416 <__sfputc_r>:
 8006416:	6893      	ldr	r3, [r2, #8]
 8006418:	3b01      	subs	r3, #1
 800641a:	2b00      	cmp	r3, #0
 800641c:	b410      	push	{r4}
 800641e:	6093      	str	r3, [r2, #8]
 8006420:	da07      	bge.n	8006432 <__sfputc_r+0x1c>
 8006422:	6994      	ldr	r4, [r2, #24]
 8006424:	42a3      	cmp	r3, r4
 8006426:	db01      	blt.n	800642c <__sfputc_r+0x16>
 8006428:	290a      	cmp	r1, #10
 800642a:	d102      	bne.n	8006432 <__sfputc_r+0x1c>
 800642c:	bc10      	pop	{r4}
 800642e:	f000 b931 	b.w	8006694 <__swbuf_r>
 8006432:	6813      	ldr	r3, [r2, #0]
 8006434:	1c58      	adds	r0, r3, #1
 8006436:	6010      	str	r0, [r2, #0]
 8006438:	7019      	strb	r1, [r3, #0]
 800643a:	4608      	mov	r0, r1
 800643c:	bc10      	pop	{r4}
 800643e:	4770      	bx	lr

08006440 <__sfputs_r>:
 8006440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006442:	4606      	mov	r6, r0
 8006444:	460f      	mov	r7, r1
 8006446:	4614      	mov	r4, r2
 8006448:	18d5      	adds	r5, r2, r3
 800644a:	42ac      	cmp	r4, r5
 800644c:	d101      	bne.n	8006452 <__sfputs_r+0x12>
 800644e:	2000      	movs	r0, #0
 8006450:	e007      	b.n	8006462 <__sfputs_r+0x22>
 8006452:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006456:	463a      	mov	r2, r7
 8006458:	4630      	mov	r0, r6
 800645a:	f7ff ffdc 	bl	8006416 <__sfputc_r>
 800645e:	1c43      	adds	r3, r0, #1
 8006460:	d1f3      	bne.n	800644a <__sfputs_r+0xa>
 8006462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006464 <_vfiprintf_r>:
 8006464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006468:	460d      	mov	r5, r1
 800646a:	b09d      	sub	sp, #116	@ 0x74
 800646c:	4614      	mov	r4, r2
 800646e:	4698      	mov	r8, r3
 8006470:	4606      	mov	r6, r0
 8006472:	b118      	cbz	r0, 800647c <_vfiprintf_r+0x18>
 8006474:	6a03      	ldr	r3, [r0, #32]
 8006476:	b90b      	cbnz	r3, 800647c <_vfiprintf_r+0x18>
 8006478:	f7fc fe14 	bl	80030a4 <__sinit>
 800647c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800647e:	07d9      	lsls	r1, r3, #31
 8006480:	d405      	bmi.n	800648e <_vfiprintf_r+0x2a>
 8006482:	89ab      	ldrh	r3, [r5, #12]
 8006484:	059a      	lsls	r2, r3, #22
 8006486:	d402      	bmi.n	800648e <_vfiprintf_r+0x2a>
 8006488:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800648a:	f7fc ff22 	bl	80032d2 <__retarget_lock_acquire_recursive>
 800648e:	89ab      	ldrh	r3, [r5, #12]
 8006490:	071b      	lsls	r3, r3, #28
 8006492:	d501      	bpl.n	8006498 <_vfiprintf_r+0x34>
 8006494:	692b      	ldr	r3, [r5, #16]
 8006496:	b99b      	cbnz	r3, 80064c0 <_vfiprintf_r+0x5c>
 8006498:	4629      	mov	r1, r5
 800649a:	4630      	mov	r0, r6
 800649c:	f000 f938 	bl	8006710 <__swsetup_r>
 80064a0:	b170      	cbz	r0, 80064c0 <_vfiprintf_r+0x5c>
 80064a2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80064a4:	07dc      	lsls	r4, r3, #31
 80064a6:	d504      	bpl.n	80064b2 <_vfiprintf_r+0x4e>
 80064a8:	f04f 30ff 	mov.w	r0, #4294967295
 80064ac:	b01d      	add	sp, #116	@ 0x74
 80064ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064b2:	89ab      	ldrh	r3, [r5, #12]
 80064b4:	0598      	lsls	r0, r3, #22
 80064b6:	d4f7      	bmi.n	80064a8 <_vfiprintf_r+0x44>
 80064b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80064ba:	f7fc ff0b 	bl	80032d4 <__retarget_lock_release_recursive>
 80064be:	e7f3      	b.n	80064a8 <_vfiprintf_r+0x44>
 80064c0:	2300      	movs	r3, #0
 80064c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80064c4:	2320      	movs	r3, #32
 80064c6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80064ca:	f8cd 800c 	str.w	r8, [sp, #12]
 80064ce:	2330      	movs	r3, #48	@ 0x30
 80064d0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006680 <_vfiprintf_r+0x21c>
 80064d4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80064d8:	f04f 0901 	mov.w	r9, #1
 80064dc:	4623      	mov	r3, r4
 80064de:	469a      	mov	sl, r3
 80064e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80064e4:	b10a      	cbz	r2, 80064ea <_vfiprintf_r+0x86>
 80064e6:	2a25      	cmp	r2, #37	@ 0x25
 80064e8:	d1f9      	bne.n	80064de <_vfiprintf_r+0x7a>
 80064ea:	ebba 0b04 	subs.w	fp, sl, r4
 80064ee:	d00b      	beq.n	8006508 <_vfiprintf_r+0xa4>
 80064f0:	465b      	mov	r3, fp
 80064f2:	4622      	mov	r2, r4
 80064f4:	4629      	mov	r1, r5
 80064f6:	4630      	mov	r0, r6
 80064f8:	f7ff ffa2 	bl	8006440 <__sfputs_r>
 80064fc:	3001      	adds	r0, #1
 80064fe:	f000 80a7 	beq.w	8006650 <_vfiprintf_r+0x1ec>
 8006502:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006504:	445a      	add	r2, fp
 8006506:	9209      	str	r2, [sp, #36]	@ 0x24
 8006508:	f89a 3000 	ldrb.w	r3, [sl]
 800650c:	2b00      	cmp	r3, #0
 800650e:	f000 809f 	beq.w	8006650 <_vfiprintf_r+0x1ec>
 8006512:	2300      	movs	r3, #0
 8006514:	f04f 32ff 	mov.w	r2, #4294967295
 8006518:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800651c:	f10a 0a01 	add.w	sl, sl, #1
 8006520:	9304      	str	r3, [sp, #16]
 8006522:	9307      	str	r3, [sp, #28]
 8006524:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006528:	931a      	str	r3, [sp, #104]	@ 0x68
 800652a:	4654      	mov	r4, sl
 800652c:	2205      	movs	r2, #5
 800652e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006532:	4853      	ldr	r0, [pc, #332]	@ (8006680 <_vfiprintf_r+0x21c>)
 8006534:	f7f9 fe6c 	bl	8000210 <memchr>
 8006538:	9a04      	ldr	r2, [sp, #16]
 800653a:	b9d8      	cbnz	r0, 8006574 <_vfiprintf_r+0x110>
 800653c:	06d1      	lsls	r1, r2, #27
 800653e:	bf44      	itt	mi
 8006540:	2320      	movmi	r3, #32
 8006542:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006546:	0713      	lsls	r3, r2, #28
 8006548:	bf44      	itt	mi
 800654a:	232b      	movmi	r3, #43	@ 0x2b
 800654c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006550:	f89a 3000 	ldrb.w	r3, [sl]
 8006554:	2b2a      	cmp	r3, #42	@ 0x2a
 8006556:	d015      	beq.n	8006584 <_vfiprintf_r+0x120>
 8006558:	9a07      	ldr	r2, [sp, #28]
 800655a:	4654      	mov	r4, sl
 800655c:	2000      	movs	r0, #0
 800655e:	f04f 0c0a 	mov.w	ip, #10
 8006562:	4621      	mov	r1, r4
 8006564:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006568:	3b30      	subs	r3, #48	@ 0x30
 800656a:	2b09      	cmp	r3, #9
 800656c:	d94b      	bls.n	8006606 <_vfiprintf_r+0x1a2>
 800656e:	b1b0      	cbz	r0, 800659e <_vfiprintf_r+0x13a>
 8006570:	9207      	str	r2, [sp, #28]
 8006572:	e014      	b.n	800659e <_vfiprintf_r+0x13a>
 8006574:	eba0 0308 	sub.w	r3, r0, r8
 8006578:	fa09 f303 	lsl.w	r3, r9, r3
 800657c:	4313      	orrs	r3, r2
 800657e:	9304      	str	r3, [sp, #16]
 8006580:	46a2      	mov	sl, r4
 8006582:	e7d2      	b.n	800652a <_vfiprintf_r+0xc6>
 8006584:	9b03      	ldr	r3, [sp, #12]
 8006586:	1d19      	adds	r1, r3, #4
 8006588:	681b      	ldr	r3, [r3, #0]
 800658a:	9103      	str	r1, [sp, #12]
 800658c:	2b00      	cmp	r3, #0
 800658e:	bfbb      	ittet	lt
 8006590:	425b      	neglt	r3, r3
 8006592:	f042 0202 	orrlt.w	r2, r2, #2
 8006596:	9307      	strge	r3, [sp, #28]
 8006598:	9307      	strlt	r3, [sp, #28]
 800659a:	bfb8      	it	lt
 800659c:	9204      	strlt	r2, [sp, #16]
 800659e:	7823      	ldrb	r3, [r4, #0]
 80065a0:	2b2e      	cmp	r3, #46	@ 0x2e
 80065a2:	d10a      	bne.n	80065ba <_vfiprintf_r+0x156>
 80065a4:	7863      	ldrb	r3, [r4, #1]
 80065a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80065a8:	d132      	bne.n	8006610 <_vfiprintf_r+0x1ac>
 80065aa:	9b03      	ldr	r3, [sp, #12]
 80065ac:	1d1a      	adds	r2, r3, #4
 80065ae:	681b      	ldr	r3, [r3, #0]
 80065b0:	9203      	str	r2, [sp, #12]
 80065b2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80065b6:	3402      	adds	r4, #2
 80065b8:	9305      	str	r3, [sp, #20]
 80065ba:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8006684 <_vfiprintf_r+0x220>
 80065be:	7821      	ldrb	r1, [r4, #0]
 80065c0:	2203      	movs	r2, #3
 80065c2:	4650      	mov	r0, sl
 80065c4:	f7f9 fe24 	bl	8000210 <memchr>
 80065c8:	b138      	cbz	r0, 80065da <_vfiprintf_r+0x176>
 80065ca:	9b04      	ldr	r3, [sp, #16]
 80065cc:	eba0 000a 	sub.w	r0, r0, sl
 80065d0:	2240      	movs	r2, #64	@ 0x40
 80065d2:	4082      	lsls	r2, r0
 80065d4:	4313      	orrs	r3, r2
 80065d6:	3401      	adds	r4, #1
 80065d8:	9304      	str	r3, [sp, #16]
 80065da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80065de:	482a      	ldr	r0, [pc, #168]	@ (8006688 <_vfiprintf_r+0x224>)
 80065e0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80065e4:	2206      	movs	r2, #6
 80065e6:	f7f9 fe13 	bl	8000210 <memchr>
 80065ea:	2800      	cmp	r0, #0
 80065ec:	d03f      	beq.n	800666e <_vfiprintf_r+0x20a>
 80065ee:	4b27      	ldr	r3, [pc, #156]	@ (800668c <_vfiprintf_r+0x228>)
 80065f0:	bb1b      	cbnz	r3, 800663a <_vfiprintf_r+0x1d6>
 80065f2:	9b03      	ldr	r3, [sp, #12]
 80065f4:	3307      	adds	r3, #7
 80065f6:	f023 0307 	bic.w	r3, r3, #7
 80065fa:	3308      	adds	r3, #8
 80065fc:	9303      	str	r3, [sp, #12]
 80065fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006600:	443b      	add	r3, r7
 8006602:	9309      	str	r3, [sp, #36]	@ 0x24
 8006604:	e76a      	b.n	80064dc <_vfiprintf_r+0x78>
 8006606:	fb0c 3202 	mla	r2, ip, r2, r3
 800660a:	460c      	mov	r4, r1
 800660c:	2001      	movs	r0, #1
 800660e:	e7a8      	b.n	8006562 <_vfiprintf_r+0xfe>
 8006610:	2300      	movs	r3, #0
 8006612:	3401      	adds	r4, #1
 8006614:	9305      	str	r3, [sp, #20]
 8006616:	4619      	mov	r1, r3
 8006618:	f04f 0c0a 	mov.w	ip, #10
 800661c:	4620      	mov	r0, r4
 800661e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006622:	3a30      	subs	r2, #48	@ 0x30
 8006624:	2a09      	cmp	r2, #9
 8006626:	d903      	bls.n	8006630 <_vfiprintf_r+0x1cc>
 8006628:	2b00      	cmp	r3, #0
 800662a:	d0c6      	beq.n	80065ba <_vfiprintf_r+0x156>
 800662c:	9105      	str	r1, [sp, #20]
 800662e:	e7c4      	b.n	80065ba <_vfiprintf_r+0x156>
 8006630:	fb0c 2101 	mla	r1, ip, r1, r2
 8006634:	4604      	mov	r4, r0
 8006636:	2301      	movs	r3, #1
 8006638:	e7f0      	b.n	800661c <_vfiprintf_r+0x1b8>
 800663a:	ab03      	add	r3, sp, #12
 800663c:	9300      	str	r3, [sp, #0]
 800663e:	462a      	mov	r2, r5
 8006640:	4b13      	ldr	r3, [pc, #76]	@ (8006690 <_vfiprintf_r+0x22c>)
 8006642:	a904      	add	r1, sp, #16
 8006644:	4630      	mov	r0, r6
 8006646:	f7fb fed9 	bl	80023fc <_printf_float>
 800664a:	4607      	mov	r7, r0
 800664c:	1c78      	adds	r0, r7, #1
 800664e:	d1d6      	bne.n	80065fe <_vfiprintf_r+0x19a>
 8006650:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006652:	07d9      	lsls	r1, r3, #31
 8006654:	d405      	bmi.n	8006662 <_vfiprintf_r+0x1fe>
 8006656:	89ab      	ldrh	r3, [r5, #12]
 8006658:	059a      	lsls	r2, r3, #22
 800665a:	d402      	bmi.n	8006662 <_vfiprintf_r+0x1fe>
 800665c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800665e:	f7fc fe39 	bl	80032d4 <__retarget_lock_release_recursive>
 8006662:	89ab      	ldrh	r3, [r5, #12]
 8006664:	065b      	lsls	r3, r3, #25
 8006666:	f53f af1f 	bmi.w	80064a8 <_vfiprintf_r+0x44>
 800666a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800666c:	e71e      	b.n	80064ac <_vfiprintf_r+0x48>
 800666e:	ab03      	add	r3, sp, #12
 8006670:	9300      	str	r3, [sp, #0]
 8006672:	462a      	mov	r2, r5
 8006674:	4b06      	ldr	r3, [pc, #24]	@ (8006690 <_vfiprintf_r+0x22c>)
 8006676:	a904      	add	r1, sp, #16
 8006678:	4630      	mov	r0, r6
 800667a:	f7fc f959 	bl	8002930 <_printf_i>
 800667e:	e7e4      	b.n	800664a <_vfiprintf_r+0x1e6>
 8006680:	08006cf1 	.word	0x08006cf1
 8006684:	08006cf7 	.word	0x08006cf7
 8006688:	08006cfb 	.word	0x08006cfb
 800668c:	080023fd 	.word	0x080023fd
 8006690:	08006441 	.word	0x08006441

08006694 <__swbuf_r>:
 8006694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006696:	460e      	mov	r6, r1
 8006698:	4614      	mov	r4, r2
 800669a:	4605      	mov	r5, r0
 800669c:	b118      	cbz	r0, 80066a6 <__swbuf_r+0x12>
 800669e:	6a03      	ldr	r3, [r0, #32]
 80066a0:	b90b      	cbnz	r3, 80066a6 <__swbuf_r+0x12>
 80066a2:	f7fc fcff 	bl	80030a4 <__sinit>
 80066a6:	69a3      	ldr	r3, [r4, #24]
 80066a8:	60a3      	str	r3, [r4, #8]
 80066aa:	89a3      	ldrh	r3, [r4, #12]
 80066ac:	071a      	lsls	r2, r3, #28
 80066ae:	d501      	bpl.n	80066b4 <__swbuf_r+0x20>
 80066b0:	6923      	ldr	r3, [r4, #16]
 80066b2:	b943      	cbnz	r3, 80066c6 <__swbuf_r+0x32>
 80066b4:	4621      	mov	r1, r4
 80066b6:	4628      	mov	r0, r5
 80066b8:	f000 f82a 	bl	8006710 <__swsetup_r>
 80066bc:	b118      	cbz	r0, 80066c6 <__swbuf_r+0x32>
 80066be:	f04f 37ff 	mov.w	r7, #4294967295
 80066c2:	4638      	mov	r0, r7
 80066c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80066c6:	6823      	ldr	r3, [r4, #0]
 80066c8:	6922      	ldr	r2, [r4, #16]
 80066ca:	1a98      	subs	r0, r3, r2
 80066cc:	6963      	ldr	r3, [r4, #20]
 80066ce:	b2f6      	uxtb	r6, r6
 80066d0:	4283      	cmp	r3, r0
 80066d2:	4637      	mov	r7, r6
 80066d4:	dc05      	bgt.n	80066e2 <__swbuf_r+0x4e>
 80066d6:	4621      	mov	r1, r4
 80066d8:	4628      	mov	r0, r5
 80066da:	f7ff fa4b 	bl	8005b74 <_fflush_r>
 80066de:	2800      	cmp	r0, #0
 80066e0:	d1ed      	bne.n	80066be <__swbuf_r+0x2a>
 80066e2:	68a3      	ldr	r3, [r4, #8]
 80066e4:	3b01      	subs	r3, #1
 80066e6:	60a3      	str	r3, [r4, #8]
 80066e8:	6823      	ldr	r3, [r4, #0]
 80066ea:	1c5a      	adds	r2, r3, #1
 80066ec:	6022      	str	r2, [r4, #0]
 80066ee:	701e      	strb	r6, [r3, #0]
 80066f0:	6962      	ldr	r2, [r4, #20]
 80066f2:	1c43      	adds	r3, r0, #1
 80066f4:	429a      	cmp	r2, r3
 80066f6:	d004      	beq.n	8006702 <__swbuf_r+0x6e>
 80066f8:	89a3      	ldrh	r3, [r4, #12]
 80066fa:	07db      	lsls	r3, r3, #31
 80066fc:	d5e1      	bpl.n	80066c2 <__swbuf_r+0x2e>
 80066fe:	2e0a      	cmp	r6, #10
 8006700:	d1df      	bne.n	80066c2 <__swbuf_r+0x2e>
 8006702:	4621      	mov	r1, r4
 8006704:	4628      	mov	r0, r5
 8006706:	f7ff fa35 	bl	8005b74 <_fflush_r>
 800670a:	2800      	cmp	r0, #0
 800670c:	d0d9      	beq.n	80066c2 <__swbuf_r+0x2e>
 800670e:	e7d6      	b.n	80066be <__swbuf_r+0x2a>

08006710 <__swsetup_r>:
 8006710:	b538      	push	{r3, r4, r5, lr}
 8006712:	4b29      	ldr	r3, [pc, #164]	@ (80067b8 <__swsetup_r+0xa8>)
 8006714:	4605      	mov	r5, r0
 8006716:	6818      	ldr	r0, [r3, #0]
 8006718:	460c      	mov	r4, r1
 800671a:	b118      	cbz	r0, 8006724 <__swsetup_r+0x14>
 800671c:	6a03      	ldr	r3, [r0, #32]
 800671e:	b90b      	cbnz	r3, 8006724 <__swsetup_r+0x14>
 8006720:	f7fc fcc0 	bl	80030a4 <__sinit>
 8006724:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006728:	0719      	lsls	r1, r3, #28
 800672a:	d422      	bmi.n	8006772 <__swsetup_r+0x62>
 800672c:	06da      	lsls	r2, r3, #27
 800672e:	d407      	bmi.n	8006740 <__swsetup_r+0x30>
 8006730:	2209      	movs	r2, #9
 8006732:	602a      	str	r2, [r5, #0]
 8006734:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006738:	81a3      	strh	r3, [r4, #12]
 800673a:	f04f 30ff 	mov.w	r0, #4294967295
 800673e:	e033      	b.n	80067a8 <__swsetup_r+0x98>
 8006740:	0758      	lsls	r0, r3, #29
 8006742:	d512      	bpl.n	800676a <__swsetup_r+0x5a>
 8006744:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006746:	b141      	cbz	r1, 800675a <__swsetup_r+0x4a>
 8006748:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800674c:	4299      	cmp	r1, r3
 800674e:	d002      	beq.n	8006756 <__swsetup_r+0x46>
 8006750:	4628      	mov	r0, r5
 8006752:	f7fd fc15 	bl	8003f80 <_free_r>
 8006756:	2300      	movs	r3, #0
 8006758:	6363      	str	r3, [r4, #52]	@ 0x34
 800675a:	89a3      	ldrh	r3, [r4, #12]
 800675c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006760:	81a3      	strh	r3, [r4, #12]
 8006762:	2300      	movs	r3, #0
 8006764:	6063      	str	r3, [r4, #4]
 8006766:	6923      	ldr	r3, [r4, #16]
 8006768:	6023      	str	r3, [r4, #0]
 800676a:	89a3      	ldrh	r3, [r4, #12]
 800676c:	f043 0308 	orr.w	r3, r3, #8
 8006770:	81a3      	strh	r3, [r4, #12]
 8006772:	6923      	ldr	r3, [r4, #16]
 8006774:	b94b      	cbnz	r3, 800678a <__swsetup_r+0x7a>
 8006776:	89a3      	ldrh	r3, [r4, #12]
 8006778:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800677c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006780:	d003      	beq.n	800678a <__swsetup_r+0x7a>
 8006782:	4621      	mov	r1, r4
 8006784:	4628      	mov	r0, r5
 8006786:	f000 f883 	bl	8006890 <__smakebuf_r>
 800678a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800678e:	f013 0201 	ands.w	r2, r3, #1
 8006792:	d00a      	beq.n	80067aa <__swsetup_r+0x9a>
 8006794:	2200      	movs	r2, #0
 8006796:	60a2      	str	r2, [r4, #8]
 8006798:	6962      	ldr	r2, [r4, #20]
 800679a:	4252      	negs	r2, r2
 800679c:	61a2      	str	r2, [r4, #24]
 800679e:	6922      	ldr	r2, [r4, #16]
 80067a0:	b942      	cbnz	r2, 80067b4 <__swsetup_r+0xa4>
 80067a2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80067a6:	d1c5      	bne.n	8006734 <__swsetup_r+0x24>
 80067a8:	bd38      	pop	{r3, r4, r5, pc}
 80067aa:	0799      	lsls	r1, r3, #30
 80067ac:	bf58      	it	pl
 80067ae:	6962      	ldrpl	r2, [r4, #20]
 80067b0:	60a2      	str	r2, [r4, #8]
 80067b2:	e7f4      	b.n	800679e <__swsetup_r+0x8e>
 80067b4:	2000      	movs	r0, #0
 80067b6:	e7f7      	b.n	80067a8 <__swsetup_r+0x98>
 80067b8:	2000002c 	.word	0x2000002c

080067bc <_raise_r>:
 80067bc:	291f      	cmp	r1, #31
 80067be:	b538      	push	{r3, r4, r5, lr}
 80067c0:	4605      	mov	r5, r0
 80067c2:	460c      	mov	r4, r1
 80067c4:	d904      	bls.n	80067d0 <_raise_r+0x14>
 80067c6:	2316      	movs	r3, #22
 80067c8:	6003      	str	r3, [r0, #0]
 80067ca:	f04f 30ff 	mov.w	r0, #4294967295
 80067ce:	bd38      	pop	{r3, r4, r5, pc}
 80067d0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80067d2:	b112      	cbz	r2, 80067da <_raise_r+0x1e>
 80067d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80067d8:	b94b      	cbnz	r3, 80067ee <_raise_r+0x32>
 80067da:	4628      	mov	r0, r5
 80067dc:	f000 f830 	bl	8006840 <_getpid_r>
 80067e0:	4622      	mov	r2, r4
 80067e2:	4601      	mov	r1, r0
 80067e4:	4628      	mov	r0, r5
 80067e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80067ea:	f000 b817 	b.w	800681c <_kill_r>
 80067ee:	2b01      	cmp	r3, #1
 80067f0:	d00a      	beq.n	8006808 <_raise_r+0x4c>
 80067f2:	1c59      	adds	r1, r3, #1
 80067f4:	d103      	bne.n	80067fe <_raise_r+0x42>
 80067f6:	2316      	movs	r3, #22
 80067f8:	6003      	str	r3, [r0, #0]
 80067fa:	2001      	movs	r0, #1
 80067fc:	e7e7      	b.n	80067ce <_raise_r+0x12>
 80067fe:	2100      	movs	r1, #0
 8006800:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006804:	4620      	mov	r0, r4
 8006806:	4798      	blx	r3
 8006808:	2000      	movs	r0, #0
 800680a:	e7e0      	b.n	80067ce <_raise_r+0x12>

0800680c <raise>:
 800680c:	4b02      	ldr	r3, [pc, #8]	@ (8006818 <raise+0xc>)
 800680e:	4601      	mov	r1, r0
 8006810:	6818      	ldr	r0, [r3, #0]
 8006812:	f7ff bfd3 	b.w	80067bc <_raise_r>
 8006816:	bf00      	nop
 8006818:	2000002c 	.word	0x2000002c

0800681c <_kill_r>:
 800681c:	b538      	push	{r3, r4, r5, lr}
 800681e:	4d07      	ldr	r5, [pc, #28]	@ (800683c <_kill_r+0x20>)
 8006820:	2300      	movs	r3, #0
 8006822:	4604      	mov	r4, r0
 8006824:	4608      	mov	r0, r1
 8006826:	4611      	mov	r1, r2
 8006828:	602b      	str	r3, [r5, #0]
 800682a:	f7fa fe6c 	bl	8001506 <_kill>
 800682e:	1c43      	adds	r3, r0, #1
 8006830:	d102      	bne.n	8006838 <_kill_r+0x1c>
 8006832:	682b      	ldr	r3, [r5, #0]
 8006834:	b103      	cbz	r3, 8006838 <_kill_r+0x1c>
 8006836:	6023      	str	r3, [r4, #0]
 8006838:	bd38      	pop	{r3, r4, r5, pc}
 800683a:	bf00      	nop
 800683c:	200003b0 	.word	0x200003b0

08006840 <_getpid_r>:
 8006840:	f7fa be5a 	b.w	80014f8 <_getpid>

08006844 <__swhatbuf_r>:
 8006844:	b570      	push	{r4, r5, r6, lr}
 8006846:	460c      	mov	r4, r1
 8006848:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800684c:	2900      	cmp	r1, #0
 800684e:	b096      	sub	sp, #88	@ 0x58
 8006850:	4615      	mov	r5, r2
 8006852:	461e      	mov	r6, r3
 8006854:	da0d      	bge.n	8006872 <__swhatbuf_r+0x2e>
 8006856:	89a3      	ldrh	r3, [r4, #12]
 8006858:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800685c:	f04f 0100 	mov.w	r1, #0
 8006860:	bf14      	ite	ne
 8006862:	2340      	movne	r3, #64	@ 0x40
 8006864:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006868:	2000      	movs	r0, #0
 800686a:	6031      	str	r1, [r6, #0]
 800686c:	602b      	str	r3, [r5, #0]
 800686e:	b016      	add	sp, #88	@ 0x58
 8006870:	bd70      	pop	{r4, r5, r6, pc}
 8006872:	466a      	mov	r2, sp
 8006874:	f000 f848 	bl	8006908 <_fstat_r>
 8006878:	2800      	cmp	r0, #0
 800687a:	dbec      	blt.n	8006856 <__swhatbuf_r+0x12>
 800687c:	9901      	ldr	r1, [sp, #4]
 800687e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006882:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006886:	4259      	negs	r1, r3
 8006888:	4159      	adcs	r1, r3
 800688a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800688e:	e7eb      	b.n	8006868 <__swhatbuf_r+0x24>

08006890 <__smakebuf_r>:
 8006890:	898b      	ldrh	r3, [r1, #12]
 8006892:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006894:	079d      	lsls	r5, r3, #30
 8006896:	4606      	mov	r6, r0
 8006898:	460c      	mov	r4, r1
 800689a:	d507      	bpl.n	80068ac <__smakebuf_r+0x1c>
 800689c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80068a0:	6023      	str	r3, [r4, #0]
 80068a2:	6123      	str	r3, [r4, #16]
 80068a4:	2301      	movs	r3, #1
 80068a6:	6163      	str	r3, [r4, #20]
 80068a8:	b003      	add	sp, #12
 80068aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80068ac:	ab01      	add	r3, sp, #4
 80068ae:	466a      	mov	r2, sp
 80068b0:	f7ff ffc8 	bl	8006844 <__swhatbuf_r>
 80068b4:	9f00      	ldr	r7, [sp, #0]
 80068b6:	4605      	mov	r5, r0
 80068b8:	4639      	mov	r1, r7
 80068ba:	4630      	mov	r0, r6
 80068bc:	f7fd fbd4 	bl	8004068 <_malloc_r>
 80068c0:	b948      	cbnz	r0, 80068d6 <__smakebuf_r+0x46>
 80068c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80068c6:	059a      	lsls	r2, r3, #22
 80068c8:	d4ee      	bmi.n	80068a8 <__smakebuf_r+0x18>
 80068ca:	f023 0303 	bic.w	r3, r3, #3
 80068ce:	f043 0302 	orr.w	r3, r3, #2
 80068d2:	81a3      	strh	r3, [r4, #12]
 80068d4:	e7e2      	b.n	800689c <__smakebuf_r+0xc>
 80068d6:	89a3      	ldrh	r3, [r4, #12]
 80068d8:	6020      	str	r0, [r4, #0]
 80068da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80068de:	81a3      	strh	r3, [r4, #12]
 80068e0:	9b01      	ldr	r3, [sp, #4]
 80068e2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80068e6:	b15b      	cbz	r3, 8006900 <__smakebuf_r+0x70>
 80068e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80068ec:	4630      	mov	r0, r6
 80068ee:	f000 f81d 	bl	800692c <_isatty_r>
 80068f2:	b128      	cbz	r0, 8006900 <__smakebuf_r+0x70>
 80068f4:	89a3      	ldrh	r3, [r4, #12]
 80068f6:	f023 0303 	bic.w	r3, r3, #3
 80068fa:	f043 0301 	orr.w	r3, r3, #1
 80068fe:	81a3      	strh	r3, [r4, #12]
 8006900:	89a3      	ldrh	r3, [r4, #12]
 8006902:	431d      	orrs	r5, r3
 8006904:	81a5      	strh	r5, [r4, #12]
 8006906:	e7cf      	b.n	80068a8 <__smakebuf_r+0x18>

08006908 <_fstat_r>:
 8006908:	b538      	push	{r3, r4, r5, lr}
 800690a:	4d07      	ldr	r5, [pc, #28]	@ (8006928 <_fstat_r+0x20>)
 800690c:	2300      	movs	r3, #0
 800690e:	4604      	mov	r4, r0
 8006910:	4608      	mov	r0, r1
 8006912:	4611      	mov	r1, r2
 8006914:	602b      	str	r3, [r5, #0]
 8006916:	f7fa fe55 	bl	80015c4 <_fstat>
 800691a:	1c43      	adds	r3, r0, #1
 800691c:	d102      	bne.n	8006924 <_fstat_r+0x1c>
 800691e:	682b      	ldr	r3, [r5, #0]
 8006920:	b103      	cbz	r3, 8006924 <_fstat_r+0x1c>
 8006922:	6023      	str	r3, [r4, #0]
 8006924:	bd38      	pop	{r3, r4, r5, pc}
 8006926:	bf00      	nop
 8006928:	200003b0 	.word	0x200003b0

0800692c <_isatty_r>:
 800692c:	b538      	push	{r3, r4, r5, lr}
 800692e:	4d06      	ldr	r5, [pc, #24]	@ (8006948 <_isatty_r+0x1c>)
 8006930:	2300      	movs	r3, #0
 8006932:	4604      	mov	r4, r0
 8006934:	4608      	mov	r0, r1
 8006936:	602b      	str	r3, [r5, #0]
 8006938:	f7fa fe53 	bl	80015e2 <_isatty>
 800693c:	1c43      	adds	r3, r0, #1
 800693e:	d102      	bne.n	8006946 <_isatty_r+0x1a>
 8006940:	682b      	ldr	r3, [r5, #0]
 8006942:	b103      	cbz	r3, 8006946 <_isatty_r+0x1a>
 8006944:	6023      	str	r3, [r4, #0]
 8006946:	bd38      	pop	{r3, r4, r5, pc}
 8006948:	200003b0 	.word	0x200003b0

0800694c <_init>:
 800694c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800694e:	bf00      	nop
 8006950:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006952:	bc08      	pop	{r3}
 8006954:	469e      	mov	lr, r3
 8006956:	4770      	bx	lr

08006958 <_fini>:
 8006958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800695a:	bf00      	nop
 800695c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800695e:	bc08      	pop	{r3}
 8006960:	469e      	mov	lr, r3
 8006962:	4770      	bx	lr
